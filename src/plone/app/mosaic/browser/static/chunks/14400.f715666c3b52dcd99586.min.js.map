{"version":3,"file":"chunks/14400.f715666c3b52dcd99586.min.js","mappings":"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","sources":["webpack://plone-mosaic/./node_modules/tinymce/plugins/advlist/index.js","webpack://plone-mosaic/./node_modules/tinymce/plugins/advlist/plugin.js"],"sourcesContent":["// Exports the \"advlist\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/advlist')\n//   ES2015:\n//     import 'tinymce/plugins/advlist'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.7 (2022-12-06)\n */\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var applyListFormat = function (editor, listName, styleValue) {\n      var cmd = listName === 'UL' ? 'InsertUnorderedList' : 'InsertOrderedList';\n      editor.execCommand(cmd, false, styleValue === false ? null : { 'list-style-type': styleValue });\n    };\n\n    var register$1 = function (editor) {\n      editor.addCommand('ApplyUnorderedListStyle', function (ui, value) {\n        applyListFormat(editor, 'UL', value['list-style-type']);\n      });\n      editor.addCommand('ApplyOrderedListStyle', function (ui, value) {\n        applyListFormat(editor, 'OL', value['list-style-type']);\n      });\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getNumberStyles = function (editor) {\n      var styles = editor.getParam('advlist_number_styles', 'default,lower-alpha,lower-greek,lower-roman,upper-alpha,upper-roman');\n      return styles ? styles.split(/[ ,]/) : [];\n    };\n    var getBulletStyles = function (editor) {\n      var styles = editor.getParam('advlist_bullet_styles', 'default,circle,square');\n      return styles ? styles.split(/[ ,]/) : [];\n    };\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = identity;\n      var me = {\n        fold: function (n, _s) {\n          return n();\n        },\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: function () {\n          return none();\n        },\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Optional = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var isChildOfBody = function (editor, elm) {\n      return editor.$.contains(editor.getBody(), elm);\n    };\n    var isTableCellNode = function (node) {\n      return node && /^(TH|TD)$/.test(node.nodeName);\n    };\n    var isListNode = function (editor) {\n      return function (node) {\n        return node && /^(OL|UL|DL)$/.test(node.nodeName) && isChildOfBody(editor, node);\n      };\n    };\n    var getSelectedStyleType = function (editor) {\n      var listElm = editor.dom.getParent(editor.selection.getNode(), 'ol,ul');\n      var style = editor.dom.getStyle(listElm, 'listStyleType');\n      return Optional.from(style);\n    };\n\n    var findIndex = function (list, predicate) {\n      for (var index = 0; index < list.length; index++) {\n        var element = list[index];\n        if (predicate(element)) {\n          return index;\n        }\n      }\n      return -1;\n    };\n    var styleValueToText = function (styleValue) {\n      return styleValue.replace(/\\-/g, ' ').replace(/\\b\\w/g, function (chr) {\n        return chr.toUpperCase();\n      });\n    };\n    var isWithinList = function (editor, e, nodeName) {\n      var tableCellIndex = findIndex(e.parents, isTableCellNode);\n      var parents = tableCellIndex !== -1 ? e.parents.slice(0, tableCellIndex) : e.parents;\n      var lists = global.grep(parents, isListNode(editor));\n      return lists.length > 0 && lists[0].nodeName === nodeName;\n    };\n    var makeSetupHandler = function (editor, nodeName) {\n      return function (api) {\n        var nodeChangeHandler = function (e) {\n          api.setActive(isWithinList(editor, e, nodeName));\n        };\n        editor.on('NodeChange', nodeChangeHandler);\n        return function () {\n          return editor.off('NodeChange', nodeChangeHandler);\n        };\n      };\n    };\n    var addSplitButton = function (editor, id, tooltip, cmd, nodeName, styles) {\n      editor.ui.registry.addSplitButton(id, {\n        tooltip: tooltip,\n        icon: nodeName === 'OL' ? 'ordered-list' : 'unordered-list',\n        presets: 'listpreview',\n        columns: 3,\n        fetch: function (callback) {\n          var items = global.map(styles, function (styleValue) {\n            var iconStyle = nodeName === 'OL' ? 'num' : 'bull';\n            var iconName = styleValue === 'disc' || styleValue === 'decimal' ? 'default' : styleValue;\n            var itemValue = styleValue === 'default' ? '' : styleValue;\n            var displayText = styleValueToText(styleValue);\n            return {\n              type: 'choiceitem',\n              value: itemValue,\n              icon: 'list-' + iconStyle + '-' + iconName,\n              text: displayText\n            };\n          });\n          callback(items);\n        },\n        onAction: function () {\n          return editor.execCommand(cmd);\n        },\n        onItemAction: function (_splitButtonApi, value) {\n          applyListFormat(editor, nodeName, value);\n        },\n        select: function (value) {\n          var listStyleType = getSelectedStyleType(editor);\n          return listStyleType.map(function (listStyle) {\n            return value === listStyle;\n          }).getOr(false);\n        },\n        onSetup: makeSetupHandler(editor, nodeName)\n      });\n    };\n    var addButton = function (editor, id, tooltip, cmd, nodeName, _styles) {\n      editor.ui.registry.addToggleButton(id, {\n        active: false,\n        tooltip: tooltip,\n        icon: nodeName === 'OL' ? 'ordered-list' : 'unordered-list',\n        onSetup: makeSetupHandler(editor, nodeName),\n        onAction: function () {\n          return editor.execCommand(cmd);\n        }\n      });\n    };\n    var addControl = function (editor, id, tooltip, cmd, nodeName, styles) {\n      if (styles.length > 1) {\n        addSplitButton(editor, id, tooltip, cmd, nodeName, styles);\n      } else {\n        addButton(editor, id, tooltip, cmd, nodeName);\n      }\n    };\n    var register = function (editor) {\n      addControl(editor, 'numlist', 'Numbered list', 'InsertOrderedList', 'OL', getNumberStyles(editor));\n      addControl(editor, 'bullist', 'Bullet list', 'InsertUnorderedList', 'UL', getBulletStyles(editor));\n    };\n\n    function Plugin () {\n      global$1.add('advlist', function (editor) {\n        if (editor.hasPlugin('lists')) {\n          register(editor);\n          register$1(editor);\n        } else {\n          console.error('Please use the Lists plugin together with the Advanced List plugin.');\n        }\n      });\n    }\n\n    Plugin();\n\n}());\n"],"names":["call","id","global$1","tinymce","util","Tools","resolve","applyListFormat","editor","listName","styleValue","cmd","execCommand","global","noop","constant","value","identity","x","never","always","none","NONE","fold","n","_s","isSome","isNone","getOr","getOrThunk","thunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","toArray","toString","some","a","constant_a","self","me","f","s","Optional","isTableCellNode","node","test","nodeName","makeSetupHandler","api","nodeChangeHandler","e","setActive","tableCellIndex","list","predicate","index","length","findIndex","parents","slice","lists","grep","elm","$","contains","getBody","isChildOfBody","isListNode","isWithinList","on","off","addSplitButton","tooltip","styles","ui","registry","icon","presets","columns","fetch","callback","iconStyle","iconName","itemValue","displayText","replace","chr","toUpperCase","styleValueToText","type","text","onAction","onItemAction","_splitButtonApi","select","listStyleType","listElm","dom","getParent","selection","getNode","style","getStyle","getSelectedStyleType","listStyle","onSetup","addControl","_styles","addToggleButton","active","addButton","add","hasPlugin","getParam","split","getNumberStyles","getBulletStyles","register","addCommand","register$1","console","error"],"sourceRoot":""}