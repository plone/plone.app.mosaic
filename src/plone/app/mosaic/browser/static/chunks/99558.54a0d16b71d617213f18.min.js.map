{"version":3,"file":"chunks/99558.54a0d16b71d617213f18.min.js","mappings":"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","sources":["webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/select2/select2.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/relateditems/relateditems.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/autotoc/autotoc.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/tinymce/js/links.js","webpack://plone-mosaic/./node_modules/@plone/mockup/src/pat/upload/upload.js"],"sourcesContent":["import $ from \"jquery\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport I18n from \"../../core/i18n\";\nimport utils from \"../../core/utils\";\n\nexport default Base.extend({\n    name: \"select2\",\n    trigger: \".pat-select2\",\n    parser: \"mockup\",\n    defaults: {\n        separator: \",\",\n        ajaxTimeout: 300,\n    },\n\n    initializeValues() {\n        // Init Selection ---------------------------------------------\n        if (this.options.initialValues) {\n            this.options.id = (term) => {\n                return term.id;\n            };\n            this.options.initSelection = ($el, callback) => {\n                const data = [];\n                const value = $el.val();\n                let seldefaults = this.options.initialValues;\n\n                // Create the initSelection value that contains the default selection,\n                // but in a javascript object\n                if (\n                    typeof this.options.initialValues === \"string\" &&\n                    this.options.initialValues !== \"\"\n                ) {\n                    // if default selection value starts with a '{', then treat the value as\n                    // a JSON object that needs to be parsed\n                    if (this.options.initialValues[0] === \"{\") {\n                        seldefaults = JSON.parse(this.options.initialValues);\n                    }\n                    // otherwise, treat the value as a list, separated by the defaults.separator value of\n                    // strings in the format \"id:text\", and convert it to an object\n                    else {\n                        seldefaults = {};\n                        const initial_values = $(\n                            this.options.initialValues.split(this.options.separator)\n                        );\n                        for (const it of initial_values) {\n                            const selection = it.split(\":\");\n                            const id = selection[0].trim();\n                            const text = selection[1].trim();\n                            seldefaults[id] = text;\n                        }\n                    }\n                }\n\n                const items = $(value.split(this.options.separator));\n                for (const it of items) {\n                    let text = it;\n                    if (seldefaults[it]) {\n                        text = seldefaults[it];\n                    }\n                    data.push({\n                        id: utils.removeHTML(it),\n                        text: utils.removeHTML(text),\n                    });\n                }\n                callback(data);\n            };\n        }\n    },\n\n    initializeTags() {\n        if (this.options.tags && typeof this.options.tags === \"string\") {\n            if (this.options.tags.substr(0, 1) === \"[\") {\n                this.options.tags = JSON.parse(this.options.tags);\n            } else {\n                this.options.tags = this.options.tags.split(this.options.separator);\n            }\n        }\n\n        if (this.options.tags && !this.options.allowNewItems) {\n            this.options.data = this.options.tags.map((value) => {\n                return { id: value, text: value };\n            });\n            this.options.multiple = true;\n            delete this.options.tags;\n        }\n    },\n\n    async initializeOrdering() {\n        if (!this.options.orderable) {\n            return;\n        }\n        const Sortable = (await import(\"sortablejs\")).default;\n        const _initializeOrdering = () => {\n            const sortable_el = this.$select2[0].querySelector(\".select2-choices\");\n            new Sortable(sortable_el, {\n                draggable: \"li\",\n                dragClass: \"select2-choice-dragging\",\n                chosenClass: \"dragging\",\n                onStart: () => this.$el.select2(\"onSortStart\"),\n                onEnd: () => this.$el.select2(\"onSortEnd\"),\n            });\n        };\n        this.$el.on(\"change\", _initializeOrdering.bind(this));\n        _initializeOrdering();\n    },\n\n    async initializeSelect2() {\n        import(\"select2/select2.css\");\n        import(\"./select2.scss\");\n        await import(\"select2\");\n        try {\n            // Don't load \"en\" which is the default where no separate language file exists.\n            if (this.options.language && this.options.language !== \"en\") {\n                await import(`select2/select2_locale_${this.options.language}`);\n            }\n        } catch {\n            console.warn(\"Language file could not be loaded\", this.options.language);\n        }\n\n        this.options.formatResultCssClass = (ob) => {\n            if (ob.id) {\n                return (\n                    \"select2-option-\" +\n                    ob.id.toLowerCase().replace(/[ \\:\\)\\(\\[\\]\\{\\}\\_\\+\\=\\&\\*\\%\\#]/g, \"-\")\n                );\n            }\n        };\n\n        function callback(action, e) {\n            if (action) {\n                if (this.options.debug) {\n                    console.debug(\"callback\", action, e);\n                }\n                if (typeof action === \"string\") {\n                    action = window[action];\n                }\n                return action(e);\n            } else {\n                return action;\n            }\n        }\n\n        this.$el.select2(this.options);\n        this.$el.on(\"select2-selected\", (e) => callback(this.options.onSelected, e));\n        this.$el.on(\"select2-selecting\", (e) => callback(this.options.onSelecting, e));\n        this.$el.on(\"select2-deselecting\", (e) =>\n            callback(this.options.onDeselecting, e)\n        );\n        this.$el.on(\"select2-deselected\", (e) => callback(this.options.onDeselected, e));\n        this.$select2 = this.$el.parent().find(\".select2-container\");\n        this.$el.parent().off(\"close.plone-modal.patterns\");\n        if (this.options.orderable) {\n            this.$select2.addClass(\"select2-orderable\");\n        }\n    },\n\n    opened() {\n        const isOpen = $(\".select2-dropdown-open\", this.$el.parent()).length === 1;\n        return isOpen;\n    },\n\n    async init() {\n        const i18n = new I18n();\n        this.options.language = i18n.currentLanguage;\n        this.options.allowNewItems = this.options.allowNewItems\n            ? JSON.parse(this.options.allowNewItems)\n            : true;\n\n        // TODO: Select2 respects the select fields multiple attribute.\n        //       Currently, only when multiple is set in the pattern options\n        //       the replacement to a hidden input field is done.\n        //       A collection's querystring widget has the multiple attribute\n        //       but must not be replaced with a hidden inout, otherwise robot\n        //       tests fail.\n        //if (this.el.hasAttribute(\"multiple\")) {\n        //    this.options.multiple = true;\n        //}\n\n        if (this.options.ajax || this.options.vocabularyUrl) {\n            if (this.options.vocabularyUrl) {\n                this.options.multiple =\n                    this.options.multiple === undefined ? true : this.options.multiple;\n                this.options.ajax = this.options.ajax || {};\n                this.options.ajax.url = this.options.vocabularyUrl;\n                // XXX removing the following function does'nt break tests. dead code?\n                this.options.initSelection = ($el, callback) => {\n                    const data = [];\n                    const value = $el.val();\n                    for (const val of value.split(this.options.separator)) {\n                        const _val = utils.removeHTML(val);\n                        data.push({ id: _val, text: _val });\n                    }\n                    callback(data);\n                };\n            }\n\n            let queryTerm = \"\";\n\n            const ajaxTimeout = parseInt(this.options.ajaxTimeout || 300, 10);\n            delete this.options.ajaxTimeout;\n            this.options.ajax = $.extend(\n                {\n                    quietMillis: ajaxTimeout,\n                    data: (term, page) => {\n                        queryTerm = term;\n                        return {\n                            query: term,\n                            page_limit: 10,\n                            page: page,\n                        };\n                    },\n                    results: (data) => {\n                        let results = data.results;\n                        if (this.options.vocabularyUrl) {\n                            const dataIds = [];\n                            for (const it of data.results) {\n                                dataIds.push(it.id);\n                            }\n                            results = [];\n\n                            const haveResult =\n                                queryTerm === \"\" || dataIds.includes(queryTerm);\n                            if (this.options.allowNewItems && !haveResult) {\n                                queryTerm = utils.removeHTML(queryTerm);\n                                results.push({\n                                    id: queryTerm,\n                                    text: queryTerm,\n                                });\n                            }\n\n                            for (const it of data.results) {\n                                results.push(it);\n                            }\n                        }\n                        return { results: results };\n                    },\n                },\n                this.options.ajax\n            );\n        } else if (this.options.multiple && this.$el.is(\"select\")) {\n            // Multiselects are converted to input[type=hidden] for Select2\n            // TODO: This should actually not be necessary.\n            //       This is kept for backwards compatibility but should be\n            //       re-checked and removed if possible.\n            this.$el.attr(\"multiple\", true);\n            const vals = this.$el.val() || [];\n            const options = [...this.el.querySelectorAll(\"option\")].map((it) => {\n                return { text: it.innerHTML, id: it.value };\n            });\n\n            const el = document.createElement(\"input\");\n            el.type = \"hidden\";\n            el.value = vals.join(this.options.separator);\n            el.className = this.el.getAttribute(\"class\");\n            el.name = this.el.name;\n            el.id = this.el.id;\n            this.el.after(el);\n            this.el.remove();\n            this.el = el;\n            this.$el = $(el);\n\n            this.options.data = options;\n        }\n        this.initializeValues();\n        this.initializeTags();\n        await this.initializeSelect2();\n        await this.initializeOrdering();\n    },\n});\n","import $ from \"jquery\";\nimport _ from \"underscore\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport _t from \"../../core/i18n-wrapper\";\nimport utils from \"../../core/utils\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\nimport Select2 from \"../select2/select2\";\n\nconst KEY = {\n    LEFT: 37,\n    RIGHT: 39,\n};\n\nexport default Base.extend({\n    name: \"relateditems\",\n    trigger: \".pat-relateditems\",\n    parser: \"mockup\",\n    currentPath: undefined,\n    selectedUIDs: [],\n    openAfterInit: undefined,\n    defaults: {\n        // main option\n        vocabularyUrl: null, // must be set to work\n\n        // more options\n        attributes: [\n            \"UID\",\n            \"Title\",\n            \"portal_type\",\n            \"path\",\n            \"getURL\",\n            \"getIcon\",\n            \"is_folderish\",\n            \"review_state\",\n        ], // used by utils.QueryHelper\n        basePath: \"\",\n        pageSize: 10,\n        browsing: undefined,\n        closeOnSelect: true,\n        contextPath: undefined,\n        dropdownCssClass: \"pat-relateditems-dropdown\",\n        favorites: [],\n        recentlyUsed: false,\n        recentlyUsedMaxItems: 20,\n        recentlyUsedKey: \"relateditems_recentlyused\",\n        maximumSelectionSize: -1,\n        minimumInputLength: 0,\n        mode: \"browse\", // possible values are 'auto', 'search' and 'browse'.\n        orderable: true, // mockup-patterns-select2\n        pathOperator: \"plone.app.querystring.operation.string.path\",\n        rootPath: \"/\",\n        rootUrl: \"\", // default to be relative.\n        scanSelection: false, // False, to no unnecessarily use CPU time on this.\n        selectableTypes: null, // null means everything is selectable, otherwise a list of strings to match types that are selectable\n        separator: \",\",\n        sortOn: null,\n        sortOrder: \"ascending\",\n        tokenSeparators: [\",\", \" \"],\n        upload: false,\n        uploadAllowView: undefined,\n\n        // templates\n        breadcrumbTemplateSelector: null,\n        favoriteTemplateSelector: null,\n        recentlyusedTemplateSelector: null,\n        resultTemplateSelector: null,\n        selectionTemplateSelector: null,\n        toolbarTemplateSelector: null,\n\n        // needed\n        multiple: true,\n\n        // ajax settings\n        ajaxTimeout: 500,\n    },\n\n    recentlyUsed(filterSelectable) {\n        let ret = utils.storage.get(this.options.recentlyUsedKey) || [];\n        // hard-limit to 1000 entries\n        ret = ret.slice(ret.length - 1000, ret.length);\n        if (filterSelectable) {\n            // Filter out only selectable items.\n            // This is used only to create the list of items to be displayed.\n            // the list to be stored is unfiltered and can be reused among\n            // different instances of this widget with different settings.\n            ret.filter(this.isSelectable.bind(this));\n        }\n        // max is applied AFTER filtering selectable items.\n        const max = parseInt(this.options.recentlyUsedMaxItems, 10);\n        if (max) {\n            // return the slice from the end, as we want to display newest items first.\n            ret = ret.slice(ret.length - max, ret.length);\n        }\n        return ret;\n    },\n\n    applyTemplate(tpl, item) {\n        let template;\n        if (this.options[tpl + \"TemplateSelector\"]) {\n            template = $(this.options[tpl + \"TemplateSelector\"]).html();\n        }\n        if (!template) {\n            if (this.options[tpl + \"Template\"]) {\n                template = this.options[tpl + \"Template\"];\n            } else {\n                template = this[tpl + \"Template\"];\n            }\n        }\n        // let's give all the options possible to the template generation\n        const options = $.extend(true, {}, this.options, item, {\n            browsing: this.browsing,\n            open_folder: _t(\"Open folder\"),\n            current_directory: _t(\"current directory:\"),\n            one_level_up: _t(\"Go one level up\"),\n        });\n        options._item = item;\n        return _.template(template)(options);\n    },\n\n    setAjax() {\n        const ajaxTimeout = parseInt(this.options.ajaxTimeout || 500, 10);\n\n        const ajax = {\n            url: this.options.vocabularyUrl,\n            dataType: \"JSON\",\n            quietMillis: ajaxTimeout,\n\n            data: (term, page) => {\n                const criterias = [];\n                if (term) {\n                    term = \"*\" + term + \"*\";\n                    criterias.push({\n                        i: \"SearchableText\",\n                        o: \"plone.app.querystring.operation.string.contains\",\n                        v: term,\n                    });\n                }\n\n                // We don't restrict for selectable types while browsing...\n                if (!this.browsing && this.options.selectableTypes) {\n                    criterias.push({\n                        i: \"portal_type\",\n                        o: \"plone.app.querystring.operation.selection.any\",\n                        v: this.options.selectableTypes,\n                    });\n                }\n\n                criterias.push({\n                    i: \"path\",\n                    o: this.options.pathOperator,\n                    v:\n                        this.options.rootPath +\n                        this.currentPath +\n                        (this.browsing ? \"::1\" : \"\"),\n                });\n\n                let sort_on = this.options.sortOn;\n                let sort_order = sort_on ? this.options.sortOrder : null;\n                if (this.browsing && sort_on === null) {\n                    sort_on = \"getObjPositionInParent\";\n                    sort_order = \"ascending\";\n                }\n\n                const data = {\n                    query: JSON.stringify({\n                        criteria: criterias,\n                        sort_on: sort_on,\n                        sort_order: sort_order,\n                    }),\n                    attributes: JSON.stringify(this.options.attributes),\n                    batch: JSON.stringify({\n                        page: page ? page : 1,\n                        size: this.options.pageSize,\n                    }),\n                };\n                return data;\n            },\n\n            results: (data, page) => {\n                const more = page * this.options.pageSize < data.total;\n                let results = data.results;\n\n                this.selectedUIDs = (this.$el.select2(\"data\") || []).map((el) => {\n                    // populate current selection. Reuse in formatResult\n                    return el.UID;\n                });\n\n                // Filter out items:\n                // While browsing: always include folderish items\n                // Browsing and searching: Only include selectable items which are not already selected, and all folders\n                // even if they're selected, as we need them available for browsing/selecting their children\n                results = results.filter((item) => {\n                    if (\n                        (this.browsing && item.is_folderish) ||\n                        (this.isSelectable(item) &&\n                            this.selectedUIDs.indexOf(item.UID) === -1)\n                    ) {\n                        return true;\n                    }\n                    return false;\n                });\n\n                // Extend ``data`` with a ``oneLevelUp`` item when browsing\n                const path = this.currentPath.split(\"/\");\n                if (\n                    page === 1 && // Show level up only on top.\n                    this.browsing && // only level up when browsing\n                    path.length > 1 && // do not try to level up one level under root.\n                    this.currentPath !== \"/\" // do not try to level up beyond root\n                ) {\n                    results = [\n                        {\n                            oneLevelUp: true,\n                            Title: _t(\"One level up\"),\n                            path: path.slice(0, path.length - 1).join(\"/\") || \"/\",\n                            currentPath: this.currentPath,\n                            is_folderish: true,\n                            selectable: false,\n                        },\n                    ].concat(results);\n                }\n                return {\n                    results: results,\n                    more: more,\n                };\n            },\n        };\n        this.options.ajax = ajax;\n    },\n\n    async renderToolbar() {\n        const path = this.currentPath;\n        let html;\n\n        const parts = path.split(\"/\");\n        let itemPath = \"\";\n        let itemsHtml = \"\";\n        for (const part of parts) {\n            if (part !== \"\") {\n                const item = {};\n                item.path = itemPath = `${itemPath}/${part}`;\n                item.text = part;\n                itemsHtml = itemsHtml + this.applyTemplate(\"breadcrumb\", item);\n            }\n        }\n\n        // favorites\n        let favoritesHtml = \"\";\n        for (const item of this.options.favorites) {\n            const item_copy = _.clone(item);\n            item_copy.path = item_copy.path.substr(this.options.rootPath.length) || \"/\";\n            favoritesHtml = favoritesHtml + this.applyTemplate(\"favorite\", item_copy);\n        }\n\n        let recentlyUsedHtml = \"\";\n        if (this.options.recentlyUsed) {\n            const recentlyUsed = this.recentlyUsed(true); // filter out only those items which can actually be selected\n            for (const item of recentlyUsed.reverse()) {\n                // reverse to get newest first.\n                recentlyUsedHtml =\n                    recentlyUsedHtml + this.applyTemplate(\"recentlyused\", item);\n            }\n        }\n\n        html = this.applyTemplate(\"toolbar\", {\n            items: itemsHtml,\n            favItems: favoritesHtml,\n            favText: _t(\"Favorites\"),\n            searchText: _t(\"Current path:\"),\n            searchModeText: _t(\"Search\"),\n            browseModeText: _t(\"Browse\"),\n            recentlyUsedItems: recentlyUsedHtml,\n            recentlyUsedText: _t(\"Recently Used\"),\n            icon_root: await utils.resolveIcon(\"house-fill\"),\n            icon_recently_used: await utils.resolveIcon(\"grid-fill\"),\n            icon_favorites: await utils.resolveIcon(\"star-fill\"),\n            icon_upload: await utils.resolveIcon(\"cloud-arrow-up\"),\n            upload: this.options.upload,\n            upload_text: _t(\"Upload\"),\n        });\n\n        this.$toolbar.html(html);\n\n        // unbind mouseup event from select2 to override the behavior:\n        $(\".pat-relateditems-dropdown\").off(\"mouseup\");\n        $(\".pat-relateditems-dropdown\").on(\"mouseup\", (e) => {\n            e.stopPropagation();\n        });\n\n        $(\"button.mode.search\", this.$toolbar).on(\"click\", (e) => {\n            e.preventDefault();\n            if (this.browsing) {\n                $(\"button.mode.search\", this.$toolbar).toggleClass(\n                    \"btn-primary btn-secondary\"\n                );\n                $(\"button.mode.browse\", this.$toolbar).toggleClass(\n                    \"btn-primary btn-secondary\"\n                );\n                this.browsing = false;\n                if (this.$el.select2(\"data\").length > 0) {\n                    // Have to call after initialization\n                    this.openAfterInit = true;\n                }\n                if (!this.openAfterInit) {\n                    this.$el.select2(\"close\");\n                    this.$el.select2(\"open\");\n                }\n            } else {\n                // just open result list\n                this.$el.select2(\"close\");\n                this.$el.select2(\"open\");\n            }\n        });\n\n        $(\"button.mode.browse\", this.$toolbar).on(\"click\", (e) => {\n            e.preventDefault();\n            if (!this.browsing) {\n                $(\"button.mode.search\", this.$toolbar).toggleClass(\n                    \"btn-primary btn-secondary\"\n                );\n                $(\"button.mode.browse\", this.$toolbar).toggleClass(\n                    \"btn-primary btn-secondary\"\n                );\n                this.browsing = true;\n                if (this.$el.select2(\"data\").length > 0) {\n                    // Have to call after initialization\n                    this.openAfterInit = true;\n                }\n                if (!this.openAfterInit) {\n                    this.$el.select2(\"close\");\n                    this.$el.select2(\"open\");\n                }\n            } else {\n                // just open result list\n                this.$el.select2(\"close\");\n                this.$el.select2(\"open\");\n            }\n        });\n\n        $(\"a.crumb\", this.$toolbar).on(\"click\", (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.browseTo($(e.currentTarget).attr(\"href\"));\n        });\n\n        $(\"a.fav\", this.$toolbar).on(\"click\", (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.browseTo($(e.currentTarget).attr(\"href\"));\n        });\n\n        if (this.options.recentlyUsed) {\n            $(\".pat-relateditems-recentlyused-select\", this.$toolbar).on(\n                \"click\",\n                (event) => {\n                    event.preventDefault();\n                    const uid = $(event.currentTarget).data(\"uid\");\n                    let item = this.recentlyUsed().filter((it) => {\n                        return it.UID === uid;\n                    });\n                    if (item.length > 0) {\n                        item = item[0];\n                    } else {\n                        return;\n                    }\n                    this.selectItem(item);\n                    if (this.options.maximumSelectionSize > 0) {\n                        const items = this.$el.select2(\"data\");\n                        if (items.length >= this.options.maximumSelectionSize) {\n                            return;\n                        }\n                    }\n                }\n            );\n        }\n\n        // upload\n        if (\n            this.options.upload &&\n            utils.featureSupport.dragAndDrop() &&\n            utils.featureSupport.fileApi()\n        ) {\n            if (this.options.uploadAllowView) {\n                // Check, if uploads are allowed in current context\n                $.ajax({\n                    url: this.options.uploadAllowView,\n                    // url: this.currentUrl() + this.options.uploadAllowView,  // not working yet\n                    dataType: \"JSON\",\n                    data: {\n                        path: this.options.rootPath + this.currentPath,\n                    },\n                    type: \"GET\",\n                    success: (result) => {\n                        this.initUploadView(!result.allowUpload);\n                    },\n                });\n            } else {\n                // just initialize upload view without checking, if uploads are allowed.\n                this.initUploadView();\n            }\n        }\n    },\n\n    async initUploadView(disabled) {\n        let Upload = await import(\"../upload/upload\");\n        Upload = Upload.default;\n\n        const upload_button = this.$toolbar[0].querySelector(\".upload button\");\n        upload_button.disabled = disabled;\n\n        const upload_el = this.$toolbar[0].querySelector(\".upload .pat-upload\");\n\n        const upload_config = {\n            success: (e, response) => {\n                const uid = response.UID;\n                if (uid) {\n                    const query = new utils.QueryHelper({\n                        vocabularyUrl: this.options.vocabularyUrl,\n                        attributes: this.options.attributes,\n                    });\n                    query.search(\n                        \"UID\",\n                        \"plone.app.querystring.operation.selection.is\",\n                        uid,\n                        (e) => {\n                            const data = this.$el.select2(\"data\");\n                            data.push.apply(data, e.results);\n                            this.$el.select2(\"data\", data, true);\n                            this.emit(\"selected\");\n                            this.popover.hide();\n                        },\n                        false\n                    );\n                }\n            },\n            uloadMultiple: true,\n            allowPathSelection: false,\n            relativePath: \"fileUpload\",\n            baseUrl: this.options.rootUrl,\n        };\n        const upload = new Upload($(upload_el), upload_config);\n\n        upload_button.addEventListener(\"show.bs.dropdown\", () => {\n            if (this.currentPath !== upload.currentPath) {\n                upload.setPath(this.currentPath);\n            }\n        });\n    },\n\n    browseTo(path) {\n        this.emit(\"before-browse\");\n        this.currentPath = path;\n        this.$el.select2(\"close\");\n        this.renderToolbar();\n        this.$el.select2(\"open\");\n        this.emit(\"after-browse\");\n    },\n\n    selectItem(item) {\n        this.emit(\"selecting\");\n        const data = this.$el.select2(\"data\");\n        data.push(item);\n        this.$el.select2(\"data\", data, true);\n\n        if (this.options.recentlyUsed) {\n            // add to recently added items\n            const recentlyUsed = this.recentlyUsed(); // do not filter for selectable but get all. append to that list the new item.\n            const alreadyPresent = recentlyUsed.filter((it) => {\n                return it.UID === item.UID;\n            });\n            if (alreadyPresent.length > 0) {\n                recentlyUsed.splice(recentlyUsed.indexOf(alreadyPresent[0]), 1);\n            }\n            recentlyUsed.push(item);\n            utils.storage.set(this.options.recentlyUsedKey, recentlyUsed);\n        }\n\n        this.emit(\"selected\");\n    },\n\n    deselectItem(item) {\n        this.emit(\"deselecting\");\n        const data = this.$el.select2(\"data\");\n        data.forEach((obj, i) => {\n            if (obj.UID === item.UID) {\n                data.splice(i, 1);\n            }\n        });\n        this.$el.select2(\"data\", data, true);\n        this.emit(\"deselected\");\n    },\n\n    isSelectable(item) {\n        if (item.selectable === false) {\n            return false;\n        }\n        if (this.options.selectableTypes === null) {\n            return true;\n        } else {\n            return this.options.selectableTypes.indexOf(item.portal_type) !== -1;\n        }\n    },\n\n    async init() {\n        (await import(\"bootstrap\")).Dropdown;\n        import(\"./relateditems.scss\");\n\n        // templates\n        this.breadcrumbTemplate = (await import(\"./templates/breadcrumb.xml\")).default; // prettier-ignore\n        this.favoriteTemplate = (await import(\"./templates/favorite.xml\")).default; // prettier-ignore\n        this.recentlyusedTemplate = (await import(\"./templates/recentlyused.xml\")).default; // prettier-ignore\n        this.resultTemplate = (await import(\"./templates/result.xml\")).default; // prettier-ignore\n        this.selectionTemplate = (await import(\"./templates/selection.xml\")).default; // prettier-ignore\n        this.toolbarTemplate = (await import(\"./templates/toolbar.xml\")).default; // prettier-ignore\n\n        this.browsing = this.options.mode !== \"search\";\n\n        // Remove trailing slash\n        this.options.rootPath = this.options.rootPath.replace(/\\/$/, \"\");\n        // Substract rootPath from basePath with is the relative currentPath. Has a leading slash. Or use '/'\n        this.currentPath =\n            this.options.basePath.substr(this.options.rootPath.length) || \"/\";\n\n        this.setAjax();\n\n        this.$el.wrap('<div class=\"pat-relateditems-container\" />');\n        this.$container = this.$el.parents(\".pat-relateditems-container\");\n\n        Select2.prototype.initializeValues.call(this);\n        Select2.prototype.initializeTags.call(this);\n\n        this.options.formatSelection = (item) => {\n            item = $.extend(\n                true,\n                {\n                    Title: \"\",\n                    getIcon: \"\",\n                    getURL: \"\",\n                    path: \"\",\n                    portal_type: \"\",\n                    review_state: \"\",\n                },\n                item\n            );\n\n            // activate petterns on the result set.\n            const $selection = $(this.applyTemplate(\"selection\", item));\n            if (this.options.scanSelection) {\n                registry.scan($selection);\n            }\n            if (this.options.maximumSelectionSize == 1) {\n                // If this related field accepts only 1 item, the breadcrumbs should\n                // reflect the location for this particular item\n                let itemPath = item.path;\n                let path_split = itemPath.split(\"/\");\n                path_split = path_split.slice(0, -1); // Remove last part of path, we always want the parent path\n                itemPath = path_split.join(\"/\");\n                this.currentPath = itemPath;\n                this.renderToolbar();\n            }\n            return $selection;\n        };\n\n        const icon_level_up = await utils.resolveIcon(\"arrow-left-circle\");\n        const icon_level_down = await utils.resolveIcon(\"arrow-right-circle\");\n\n        this.options.formatResult = (item) => {\n            item.selectable = this.isSelectable(item);\n            item = $.extend(\n                true,\n                {\n                    Title: \"\",\n                    getIcon: \"\",\n                    getURL: \"\",\n                    is_folderish: false,\n                    oneLevelUp: false,\n                    iconLevelUp: icon_level_up,\n                    iconLevelDown: icon_level_down,\n                    path: \"\",\n                    portal_type: \"\",\n                    review_state: \"\",\n                    selectable: false,\n                },\n                item\n            );\n\n            if (this.selectedUIDs.indexOf(item.UID) !== -1) {\n                // do not allow already selected items to be selected again.\n                item.selectable = false;\n            }\n            const result = $(this.applyTemplate(\"result\", item));\n\n            $(\".pat-relateditems-result-select\", result).on(\"click\", (event) => {\n                const _el = event.currentTarget;\n                event.preventDefault();\n                // event.stopPropagation();\n                if ($(_el).is(\".selectable\")) {\n                    const $parent = $(_el).parents(\".pat-relateditems-result\");\n                    if ($parent.is(\".pat-relateditems-active\")) {\n                        $parent.removeClass(\"pat-relateditems-active\");\n                        this.deselectItem(item);\n                    } else {\n                        if (this.options.maximumSelectionSize > 0) {\n                            const items = this.$el.select2(\"data\");\n                            if (items.length >= this.options.maximumSelectionSize) {\n                                this.$el.select2(\"close\");\n                            }\n                        }\n                        this.selectItem(item);\n                        $parent.addClass(\"pat-relateditems-active\");\n                        if (this.options.closeOnSelect) {\n                            this.$el.select2(\"close\");\n                        }\n                    }\n                }\n            });\n\n            $(\".pat-relateditems-result-browse\", result).on(\"click\", (event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                const path = $(event.currentTarget).data(\"path\");\n                this.browseTo(path);\n            });\n\n            return $(result);\n        };\n\n        this.options.initSelection = (element, callback) => {\n            const value = $(element).val();\n            if (value !== \"\") {\n                const ids = value.split(this.options.separator);\n                const query = new utils.QueryHelper(\n                    $.extend(true, {}, this.options, {\n                        pattern: this,\n                    })\n                );\n                query.search(\n                    \"UID\",\n                    \"plone.app.querystring.operation.list.contains\",\n                    ids,\n                    (data) => {\n                        const results = data.results.reduce((prev, item) => {\n                            prev[item.UID] = item;\n                            return prev;\n                        }, {});\n\n                        try {\n                            callback(\n                                ids\n                                    .map((uid) => results[uid])\n                                    .filter((item) => item !== undefined)\n                            );\n                        } catch (e) {\n                            // Select2 3.5.4 throws an error in some cases in\n                            // updateSelection, ``this.selection.find(\".select2-search-choice\").remove();``\n                            // No idea why, hard to track.\n                        }\n\n                        if (this.openAfterInit) {\n                            // open after initialization\n                            this.$el.select2(\"open\");\n                            this.openAfterInit = undefined;\n                        }\n                    },\n                    false\n                );\n            }\n        };\n\n        this.options.tokenizer = (input) => {\n            if (this.options.mode === \"auto\") {\n                this.browsing = input ? false : true;\n            }\n        };\n\n        this.options.id = (item) => item.UID;\n\n        await Select2.prototype.initializeSelect2.call(this);\n        await Select2.prototype.initializeOrdering.call(this);\n\n        this.$toolbar = $('<div class=\"toolbar d-flex\" />');\n        this.$container.prepend(this.$toolbar);\n        this.$el.on(\"select2-selecting\", (event) => {\n            if (!this.isSelectable(event.choice)) {\n                event.preventDefault();\n            }\n        });\n        this.renderToolbar();\n        this.$el.on(\"select2-loaded\", () => {\n            let yMax = window.innerHeight || document.documentElement.clientHeight;\n            const element = $(\n                \".pat-relateditems-dropdown.select2-drop-active .select2-results\"\n            )[0];\n            const rect = element.getBoundingClientRect();\n            const maxHeight = yMax - rect.top - 18;\n            $(element).css(\"max-height\", `${maxHeight}px`);\n        });\n\n        $(document).on(\"keyup\", this.$el, (event) => {\n            const isOpen = Select2.prototype.opened.call(this);\n            if (!isOpen) {\n                return;\n            }\n\n            if (event.which === KEY.LEFT || event.which === KEY.RIGHT) {\n                event.stopPropagation();\n\n                const selectorContext =\n                    event.which === KEY.LEFT\n                        ? \".pat-relateditems-result.one-level-up\"\n                        : \".select2-highlighted\";\n\n                const browsableItemSelector = \".pat-relateditems-result-browse\";\n                const browsableItem = $(browsableItemSelector, selectorContext);\n\n                if (browsableItem.length !== 1) {\n                    return;\n                }\n\n                const path = browsableItem.data(\"path\");\n\n                this.browseTo(path);\n            }\n        });\n    },\n});\n","import $ from \"jquery\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\n\nexport default Base.extend({\n    name: \"autotoc\",\n    trigger: \".pat-autotoc\",\n    parser: \"mockup\",\n    defaults: {\n        section: \"section\",\n        levels: \"h1,h2,h3\",\n        IDPrefix: \"autotoc-item-\",\n        classTOCName: \"autotoc-nav\",\n        classSectionName: \"autotoc-section\",\n        classLevelPrefixName: \"autotoc-level-\",\n        classActiveName: \"active\",\n        scrollDuration: \"slow\",\n        scrollEasing: \"swing\",\n    },\n    init: function () {\n        import(\"./autotoc.scss\");\n\n        var self = this;\n\n        self.$toc = $(\"<nav/>\").addClass(self.options.classTOCName);\n\n        if (self.options.prependTo) {\n            self.$toc.prependTo(self.options.prependTo);\n        } else if (self.options.appendTo) {\n            self.$toc.appendTo(self.options.appendTo);\n        } else {\n            self.$toc.prependTo(self.$el);\n        }\n\n        if (self.options.className) {\n            self.$el.addClass(self.options.className);\n        }\n\n        $(self.options.section, self.$el).addClass(self.options.classSectionName);\n\n        var asTabs = self.$el.hasClass(\"autotabs\");\n\n        var activeId = null;\n\n        $(self.options.levels, self.$el).each(function (i) {\n            var $level = $(this),\n                id = $level.prop(\"id\")\n                    ? $level.prop(\"id\")\n                    : $level.parents(self.options.section).prop(\"id\");\n            if (!id || $(\"#\" + id).length > 0) {\n                id = self.options.IDPrefix + self.name + \"-\" + i;\n            }\n            if (window.location.hash === \"#\" + id) {\n                activeId = id;\n            }\n            if (activeId === null && $level.hasClass(self.options.classActiveName)) {\n                activeId = id;\n            }\n            $level.data(\"navref\", id);\n            $(\"<a/>\")\n                .appendTo(self.$toc)\n                .text($level.text())\n                .attr(\"id\", id)\n                .attr(\"href\", \"#\" + id)\n                .addClass(self.options.classLevelPrefixName + self.getLevel($level))\n                .on(\"click\", function (e, options) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (!options) {\n                        options = {\n                            doScroll: true,\n                            skipHash: false,\n                        };\n                    }\n                    var $el = $(this);\n                    self.$toc\n                        .children(\".\" + self.options.classActiveName)\n                        .removeClass(self.options.classActiveName);\n                    self.$el\n                        .children(\".\" + self.options.classActiveName)\n                        .removeClass(self.options.classActiveName);\n                    $(e.target).addClass(self.options.classActiveName);\n                    $level\n                        .parents(self.options.section)\n                        .addClass(self.options.classActiveName);\n                    if (\n                        options.doScroll !== false &&\n                        self.options.scrollDuration &&\n                        $level &&\n                        !asTabs\n                    ) {\n                        $(\"body,html\").animate(\n                            {\n                                scrollTop: $level.offset().top,\n                            },\n                            self.options.scrollDuration,\n                            self.options.scrollEasing\n                        );\n                    }\n                    if (self.$el.parents(\".plone-modal\").length !== 0) {\n                        self.$el.trigger(\"resize.plone-modal.patterns\");\n                    }\n                    $(this).trigger(\"clicked\");\n                    if (!options.skipHash) {\n                        if (window.history && window.history.pushState) {\n                            window.history.pushState({}, \"\", \"#\" + $el.attr(\"id\"));\n                        }\n                    }\n                });\n            $level.data(\"autotoc-trigger-id\", id);\n        });\n\n        if (activeId) {\n            $(\"a#\" + activeId).trigger(\"click\", {\n                doScroll: true,\n                skipHash: true,\n            });\n        } else {\n            self.$toc.find(\"a\").first().trigger(\"click\", {\n                doScroll: false,\n                skipHash: true,\n            });\n        }\n    },\n    getLevel: function ($el) {\n        var elementLevel = 0;\n        $.each(this.options.levels.split(\",\"), function (level, levelSelector) {\n            if ($el.filter(levelSelector).length === 1) {\n                elementLevel = level + 1;\n                return false;\n            }\n        });\n        return elementLevel;\n    },\n});\n","import $ from \"jquery\";\nimport _ from \"underscore\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\n\nimport tinymce from \"tinymce/tinymce\";\nimport LinkTemplate from \"../templates/link.xml\";\nimport ImageTemplate from \"../templates/image.xml\";\nimport RelatedItems from \"../../relateditems/relateditems\";\nimport \"../../autotoc/autotoc\";\nimport \"../../modal/modal\";\nimport PatternUpload from \"../../upload/upload\";\n\nvar LinkType = Base.extend({\n    name: \"linktype\",\n    trigger: \".pat-linktype-dummy\",\n    defaults: {\n        linkModal: null, // required\n    },\n\n    init: function () {\n        this.linkModal = this.options.linkModal;\n        this.tinypattern = this.options.tinypattern;\n        this.tiny = this.tinypattern.tiny;\n        this.dom = this.tiny.dom;\n    },\n\n    getEl: function () {\n        return this.$el.find(\"input\");\n    },\n\n    value: function () {\n        return this.getEl().val().trim();\n    },\n\n    toUrl: function () {\n        return this.value();\n    },\n\n    load: function (element) {\n        let val = this.tiny.dom.getAttrib(element, \"data-val\");\n        this.getEl().attr(\"value\", val);\n    },\n\n    set: function (val) {\n        var $el = this.getEl();\n        $el.attr(\"value\", val);\n        $el.val(val);\n    },\n\n    attributes: function () {\n        return {\n            \"data-val\": this.value(),\n        };\n    },\n    updateRelatedItems: function () {},\n});\n\nvar ExternalLink = LinkType.extend({\n    name: \"externallinktype\",\n    trigger: \".pat-externallinktype-dummy\",\n    init: function () {\n        LinkType.prototype.init.call(this);\n        this.getEl().on(\"change\", function () {\n            // check here if we should automatically add in http:// to url\n            var val = $(this).val();\n            if (new RegExp(\"https?://\").test(val)) {\n                // already valid url\n                return;\n            }\n            var domain = $(this).val().split(\"/\")[0];\n            if (domain.indexOf(\".\") !== -1) {\n                $(this).val(\"http://\" + val);\n            }\n        });\n    },\n});\n\nvar InternalLink = LinkType.extend({\n    name: \"internallinktype\",\n    trigger: \".pat-internallinktype-dummy\",\n    init: function () {\n        if (!this.getEl().length) {\n            return;\n        }\n        LinkType.prototype.init.call(this);\n        this.getEl().addClass(\"pat-relateditems\");\n        this.createRelatedItems();\n    },\n\n    getEl: function () {\n        return this.$el.find(\"input:not(.select2-input)\");\n    },\n\n    createRelatedItems: function () {\n        if (!this.getEl().length) {\n            return;\n        }\n        var options = this.linkModal.options.relatedItems;\n        options.upload = false; // ensure that related items upload is off.\n        this.relatedItems = new RelatedItems(this.getEl(), options);\n    },\n\n    updateRelatedItems: function (val) {\n        if (!this.relatedItems) {\n            // prevent toolbar from being rendered twice\n            this.createRelatedItems();\n        }\n        this.relatedItems.selectItem(val);\n    },\n\n    value: function () {\n        var val = this.getEl().select2(\"data\");\n        if (val && typeof val === \"object\") {\n            val = val[0];\n        }\n        return val;\n    },\n\n    toUrl: function () {\n        var value = this.value();\n        if (value) {\n            return this.tinypattern.generateUrl(value);\n        }\n        return null;\n    },\n    load: function (element) {\n        var val = this.tiny.dom.getAttrib(element, \"data-val\");\n        if (val) {\n            this.set(val);\n        }\n    },\n\n    set: function (val) {\n        var $el = this.getEl();\n        $el.val(val).trigger(\"change\");\n        this.updateRelatedItems(val);\n    },\n\n    attributes: function () {\n        var val = this.value();\n        if (val) {\n            return {\n                \"data-val\": val.UID,\n            };\n        }\n        return {};\n    },\n});\n\nvar UploadLink = LinkType.extend({\n    name: \"uploadlinktype\",\n    trigger: \".pat-uploadlinktype-dummy\",\n    /* need to do it a bit differently here.\n       when a user uploads and tries to upload from\n       it, you need to delegate to the real insert\n       linke types */\n    getDelegatedLinkType: function () {\n        if (this.linkModal.linkType === \"uploadImage\") {\n            return this.linkModal.linkTypes.image;\n        } else {\n            return this.linkModal.linkTypes.internal;\n        }\n    },\n    toUrl: function () {\n        return this.getDelegatedLinkType().toUrl();\n    },\n    attributes: function () {\n        return this.getDelegatedLinkType().attributes();\n    },\n    set: function (val) {\n        return this.getDelegatedLinkType().set(val);\n    },\n    load: function (element) {\n        return this.getDelegatedLinkType().load(element);\n    },\n    value: function () {\n        return this.getDelegatedLinkType().value();\n    },\n});\n\nvar ImageLink = InternalLink.extend({\n    name: \"imagelinktype\",\n    trigger: \".pat-imagelinktype-dummy\",\n    toUrl: function () {\n        var value = this.value();\n        return this.tinypattern.generateImageUrl(\n            value,\n            this.linkModal.getScaleFromSrcset(this.linkModal.$scale.val())\n        );\n    },\n});\n\nvar EmailLink = LinkType.extend({\n    name: \"emaillinktype\",\n    trigger: \".pat-emaillinktype-dummy\",\n    toUrl: function () {\n        var self = this;\n        var val = self.value();\n        if (val) {\n            var subject = self.getSubject();\n            var href = \"mailto:\" + val;\n            if (subject) {\n                href += \"?subject=\" + subject;\n            }\n            return href;\n        }\n        return null;\n    },\n\n    load: function (element) {\n        LinkType.prototype.load.apply(this, [element]);\n        this.linkModal.$subject.val(this.tiny.dom.getAttrib(element, \"data-subject\"));\n    },\n\n    getSubject: function () {\n        return this.linkModal.$subject.val();\n    },\n\n    attributes: function () {\n        var attribs = LinkType.prototype.attributes.call(this);\n        attribs[\"data-subject\"] = this.getSubject();\n        return attribs;\n    },\n});\n\nvar AnchorLink = LinkType.extend({\n    name: \"anchorlinktype\",\n    trigger: \".pat-anchorlinktype-dummy\",\n    init: function () {\n        LinkType.prototype.init.call(this);\n        this.$select = this.$el.find(\"select\");\n        this.anchorNodes = [];\n        this.anchorData = [];\n        this.populate();\n    },\n\n    value: function () {\n        var val = this.$select.select2(\"data\");\n        if (val && typeof val === \"object\") {\n            val = val.id;\n        }\n        return val;\n    },\n\n    populate: function () {\n        var self = this;\n        self.$select.find(\"option\").remove();\n        self.anchorNodes = [];\n        self.anchorData = [];\n        var node, i, j, name, title;\n\n        var nodes = self.tiny.dom.select(\".mceItemAnchor,.mce-item-anchor\");\n        for (i = 0; i < nodes.length; i = i + 1) {\n            node = nodes[i];\n            name = self.tiny.dom.getAttrib(node, \"name\");\n            if (!name) {\n                name = self.tiny.dom.getAttrib(node, \"id\");\n            }\n            if (name !== \"\") {\n                self.anchorNodes.push(node);\n                self.anchorData.push({ name: name, title: name });\n            }\n        }\n\n        nodes = self.tiny.dom.select(self.linkModal.options.anchorSelector);\n        if (nodes.length > 0) {\n            for (i = 0; i < nodes.length; i = i + 1) {\n                node = nodes[i];\n                title = $(node)\n                    .text()\n                    .replace(/^\\s+|\\s+$/g, \"\");\n                if (title === \"\") {\n                    continue;\n                }\n                name = title.toLowerCase().substring(0, 1024);\n                name = name.replace(/[^a-z0-9]/g, \"-\");\n                /* okay, ugly, but we need to first check that this anchor isn't already available */\n                var found = false;\n                for (j = 0; j < self.anchorNodes.length; j = j + 1) {\n                    var anode = self.anchorData[j];\n                    if (anode.name === name) {\n                        found = true;\n                        // so it's also found, let's update the title to be more presentable\n                        anode.title = title;\n                        break;\n                    }\n                }\n                if (!found) {\n                    self.anchorData.push({\n                        name: name,\n                        title: title,\n                        newAnchor: true,\n                    });\n                    self.anchorNodes.push(node);\n                }\n            }\n        }\n        if (self.anchorNodes.length > 0) {\n            for (i = 0; i < self.anchorData.length; i = i + 1) {\n                var data = self.anchorData[i];\n                self.$select.append(\n                    '<option value=\"' + i + '\">' + data.title + \"</option>\"\n                );\n            }\n        } else {\n            self.$select.append(\"<option>No anchors found..</option>\");\n        }\n    },\n\n    getIndex: function (name) {\n        for (var i = 0; i < this.anchorData.length; i = i + 1) {\n            var data = this.anchorData[i];\n            if (data.name === name) {\n                return i;\n            }\n        }\n        return 0;\n    },\n\n    toUrl: function () {\n        var val = this.value();\n        if (val) {\n            var index = parseInt(val, 10);\n            var node = this.anchorNodes[index];\n            var data = this.anchorData[index];\n            if (data.newAnchor) {\n                node.innerHTML =\n                    '<a name=\"' +\n                    data.name +\n                    '\" class=\"mce-item-anchor\"></a>' +\n                    node.innerHTML;\n            }\n            return \"#\" + data.name;\n        }\n        return null;\n    },\n\n    set: function (val) {\n        var anchor = this.getIndex(val);\n        this.$select.select2(\"data\", \"\" + anchor);\n    },\n});\n\ntinymce.PluginManager.add(\"ploneimage\", function (editor) {\n    editor.ui.registry.addButton(\"ploneimage\", {\n        icon: \"image\",\n        text: \"Insert image\",\n        tooltip: \"Insert/edit image\",\n        onAction: editor.settings.addImageClicked,\n        // stateSelector: \"img:not([data-mce-object])\",\n    });\n});\n\n/* register the tinymce plugin */\ntinymce.PluginManager.add(\"plonelink\", function (editor) {\n    editor.ui.registry.addButton(\"plonelink\", {\n        icon: \"link\",\n        tooltip: \"Insert/edit link\",\n        shortcut: \"Ctrl+K\",\n        onAction: editor.settings.addLinkClicked,\n        stateSelector: \"a[href]\",\n    });\n\n    editor.ui.registry.addButton(\"unlink\", {\n        icon: \"unlink\",\n        tooltip: \"Remove link\",\n        onAction: function () {\n            editor.execCommand(\"unlink\");\n        },\n        stateSelector: \"a[href]\",\n    });\n\n    // editor.ui.registry.addButton(\"Ctrl+K\", \"\", editor.settings.addLinkClicked);\n\n    // editor.ui.registry.addButton(\"plonelink\", {\n    //     icon: \"link\",\n    //     text: \"Insert link\",\n    //     shortcut: \"Ctrl+K\",\n    //     onAction: editor.settings.addLinkClicked,\n    //     stateSelector: \"a[href]\",\n    //     context: \"insert\",\n    //     prependToContext: true,\n    // });\n});\n\nexport default Base.extend({\n    name: \"linkmodal\",\n    trigger: \".pat-linkmodal\",\n    defaults: {\n        anchorSelector: \"h1,h2,h3\",\n        linkTypes: [\n            /* available, none activate by default because these options\n         * only get merged, not set.\n        'internal',\n        'upload',\n        'external',\n        'email',\n        'anchor',\n        'image'\n        'externalImage'*/\n        ],\n        initialLinkType: \"internal\",\n        text: {\n            insertHeading: \"Insert Link\",\n        },\n        linkTypeClassMapping: {\n            internal: InternalLink,\n            upload: UploadLink,\n            external: ExternalLink,\n            email: EmailLink,\n            anchor: AnchorLink,\n            image: ImageLink,\n            uploadImage: UploadLink,\n            externalImage: LinkType,\n        },\n    },\n    // XXX: this is a temporary work around for having separated templates.\n    // Image modal is going to have its own modal class, funcs and template.\n    linkTypeTemplateMapping: {\n        internal: LinkTemplate,\n        upload: LinkTemplate,\n        external: LinkTemplate,\n        email: LinkTemplate,\n        anchor: LinkTemplate,\n        image: ImageTemplate,\n        uploadImage: ImageTemplate,\n        externalImage: ImageTemplate,\n    },\n\n    template: function (data) {\n        return _.template(this.linkTypeTemplateMapping[this.linkType])(data);\n    },\n\n    init: function () {\n        var self = this;\n        self.tinypattern = self.options.tinypattern;\n        if (self.tinypattern.options.anchorSelector) {\n            self.options.anchorSelector = self.tinypattern.options.anchorSelector;\n        }\n        self.tiny = self.tinypattern.tiny;\n        self.dom = self.tiny.dom;\n        self.linkType = self.options.initialLinkType;\n        self.linkTypes = {};\n        self.modal = registry.patterns[\"plone-modal\"].init(self.$el, {\n            html: self.generateModalHtml(),\n            content: null,\n            buttons: \".plone-btn\",\n            reloadWindowOnClose: false,\n            templateOptions: {\n                classDialog: \"modal-dialog modal-lg\",\n                reloadWindowOnClose: false,\n            },\n            actionOptions: { reloadWindowOnClose: false },\n            backdropOptions: {\n                zIndex: \"1340\",\n                closeOnClick: false,\n            },\n        });\n        self.modal.on(\"shown\", (e) => {\n            self.modalShown.apply(self, [e]);\n        });\n    },\n\n    isOnlyTextSelected: function () {\n        /* pulled from TinyMCE link plugin */\n        var html = this.tiny.selection.getContent();\n\n        // Partial html and not a fully selected anchor element\n        if (\n            /</.test(html) &&\n            (!/^<a [^>]+>[^<]+<\\/a>$/.test(html) || html.indexOf(\"href=\") === -1)\n        ) {\n            return false;\n        }\n\n        if (this.anchorElm) {\n            var nodes = this.anchorElm.childNodes;\n\n            if (nodes.length === 0) {\n                return false;\n            }\n\n            for (var ii = nodes.length - 1; ii >= 0; ii--) {\n                if (nodes[ii].nodeType !== 3) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    },\n\n    generateModalHtml: function () {\n        return this.template({\n            options: this.options,\n            upload: this.options.upload,\n            text: this.options.text,\n            insertHeading: this.options.text.insertHeading,\n            insertImageHelp: this.options.text.insertImageHelp,\n            uploadText: this.options.text.upload,\n            insertLinkHelp: this.options.text.insertLinkHelp,\n            internal: this.options.text.internal,\n            external: this.options.text.external,\n            anchor: this.options.text.anchor,\n            anchorLabel: this.options.text.anchorLabel,\n            target: this.options.text.target,\n            linkTypes: this.options.linkTypes,\n            externalText: this.options.text.externalText,\n            emailText: this.options.text.email,\n            subjectText: this.options.text.subject,\n            targetList: this.options.targetList,\n            titleText: this.options.text.title,\n            internalImageText: this.options.text.internalImage,\n            externalImage: this.options.text.externalImage,\n            externalImageText: this.options.text.externalImageText,\n            altText: this.options.text.alt,\n            imageAlignText: this.options.text.imageAlign,\n            captionFromDescriptionText: this.options.text.captionFromDescription,\n            enableImageZoom: this.options.text.enableImageZoom,\n            captionText: this.options.text.caption,\n            scaleText: this.options.text.scale,\n            pictureVariants: this.options.pictureVariants,\n            imageCaptioningEnabled: this.options.imageCaptioningEnabled,\n            cancelBtn: this.options.text.cancelBtn,\n            insertBtn: this.options.text.insertBtn,\n        });\n    },\n\n    isImageMode: function () {\n        return [\"image\", \"uploadImage\", \"externalImage\"].indexOf(this.linkType) !== -1;\n    },\n\n    initElements: function () {\n        var self = this;\n        self.$target = $('select[name=\"target\"]', self.modal.$modal);\n        self.$button = $('.modal-footer input[name=\"insert\"]', self.modal.$modal);\n        self.$title = $('input[name=\"title\"]', self.modal.$modal);\n        self.$subject = $('input[name=\"subject\"]', self.modal.$modal);\n\n        self.$alt = $('input[name=\"alt\"]', self.modal.$modal);\n        self.$align = $('select[name=\"align\"]', self.modal.$modal);\n        self.$scale = $('select[name=\"scale\"]', self.modal.$modal);\n        self.$enableImageZoom = $('input[name=\"enableImageZoom\"]', self.modal.$modal);\n        self.$captionFromDescription = $(\n            'input[name=\"captionFromDescription\"]',\n            self.modal.$modal\n        );\n        self.$caption = $('textarea[name=\"caption\"]', self.modal.$modal);\n\n        /* load up all the link types */\n        _.each(self.options.linkTypes, function (type) {\n            var $container = $(\".linkType.\" + type + \" .main\", self.modal.$modal);\n            if ($container.length) {\n                self.linkTypes[type] = new self.options.linkTypeClassMapping[type](\n                    $container,\n                    {\n                        linkModal: self,\n                        tinypattern: self.tinypattern,\n                    }\n                );\n            }\n        });\n\n        $(\".autotoc-nav a\", self.modal.$modal).on(\"click\", function () {\n            var $fieldset = $(\"fieldset.linkType\", self.modal.$modal).eq(\n                $(this).index()\n            );\n            var classes = $fieldset[0].className.split(/\\s+/);\n            _.each(classes, function (val) {\n                if (_.indexOf(self.options.linkTypes, val) !== -1) {\n                    self.linkType = val;\n                }\n            });\n        });\n\n        self.$captionFromDescription.on(\"change\", function () {\n            if (this.checked) {\n                self.$caption.prop(\"disabled\", true);\n            } else {\n                self.$caption.prop(\"disabled\", false);\n            }\n        });\n    },\n\n    getLinkUrl: function () {\n        // get the url, only get one uid\n        return this.linkTypes[this.linkType].toUrl();\n    },\n\n    getValue: function () {\n        return this.linkTypes[this.linkType].value();\n    },\n\n    updateAnchor: function (href) {\n        var self = this;\n\n        self.tiny.focus();\n        self.tiny.selection.setRng(self.rng);\n\n        var target = self.$target.val();\n        var title = self.$title.val();\n        var linkAttrs = $.extend(\n            true,\n            self.data,\n            {\n                \"title\": title ? title : null,\n                \"target\": target ? target : null,\n                \"data-linkType\": self.linkType,\n                \"href\": href,\n            },\n            self.linkTypes[self.linkType].attributes()\n        );\n        if (self.anchorElm) {\n            if (self.onlyText && linkAttrs.text !== self.initialText) {\n                if (\"innerText\" in self.anchorElm) {\n                    self.anchorElm.innerText = self.data.text;\n                } else {\n                    self.anchorElm.textContent = self.data.text;\n                }\n            }\n\n            self.tiny.dom.setAttribs(self.anchorElm, linkAttrs);\n\n            self.tiny.selection.select(self.anchorElm);\n            self.tiny.undoManager.add();\n        } else {\n            if (self.onlyText) {\n                self.tiny.insertContent(\n                    self.tiny.dom.createHTML(\n                        \"a\",\n                        linkAttrs,\n                        self.tiny.dom.encode(self.data.text)\n                    )\n                );\n            } else {\n                self.tiny.execCommand(\"mceInsertLink\", false, linkAttrs);\n            }\n        }\n    },\n\n    focusElement: function (elm) {\n        this.tiny.focus();\n        this.tiny.selection.select(elm);\n        this.tiny.nodeChanged();\n    },\n\n    getScaleFromSrcset: function (pictureVariant) {\n        let pictureVariantsConfig = this.options.pictureVariants[pictureVariant];\n        return pictureVariantsConfig.sourceset[\n            pictureVariantsConfig.sourceset.length - 1\n        ].scale;\n    },\n\n    updateImage: function (src) {\n        var self = this;\n        var title = self.$title.val();\n        var captionFromDescription = self.$captionFromDescription.prop(\"checked\");\n        var enableImageZoom = self.$enableImageZoom.prop(\"checked\");\n        var caption = self.$caption.val();\n\n        self.tiny.focus();\n        self.tiny.selection.setRng(self.rng);\n        var cssclasses = [\n            \"image-richtext\",\n            self.$align.val(),\n        ];\n        if(self.linkType !== \"externalImage\"){\n            cssclasses.push(\"picture-variant-\" + self.$scale.val())\n        }\n        if (captionFromDescription || caption) {\n            cssclasses.push(\"captioned\");\n        }\n        if (enableImageZoom) {\n            cssclasses.push(\"zoomable\");\n        }\n        var data = $.extend(\n            true,\n            {},\n            {\n                \"src\": src,\n                \"title\": title ? title : null,\n                \"alt\": self.$alt.val(),\n                \"class\": cssclasses.join(\" \"),\n                \"data-linkType\": self.linkType,\n                \"data-scale\": self.getScaleFromSrcset(self.$scale.val()),\n            },\n            self.linkTypes[self.linkType].attributes()\n        );\n        if(self.linkType !== \"externalImage\"){\n            data[\"data-picturevariant\"] = self.$scale.val();\n        }\n\n        if (caption && !captionFromDescription) {\n            data[\"data-captiontext\"] = caption;\n        }\n        if (self.imgElm && !self.imgElm.getAttribute(\"data-mce-object\")) {\n            const imgWidth = self.dom.getAttrib(self.imgElm, \"width\");\n            const imgHight = self.dom.getAttrib(self.imgElm, \"height\");\n            if (imgWidth) {\n                data.width = imgWidth;\n            }\n            if (imgHight) {\n                data.height = imgHight;\n            }\n        } else {\n            self.imgElm = null;\n        }\n\n        function waitLoad(imgElm) {\n            imgElm.onload = imgElm.onerror = function () {\n                imgElm.onload = imgElm.onerror = null;\n                self.focusElement(imgElm);\n            };\n        }\n\n        if (self.imgElm) {\n            self.dom.remove(self.imgElm);\n        }\n\n        data.id = \"__mcenew\";\n        var html_inner = self.dom.createHTML(\"img\", data);\n        var html_string;\n        html_string = html_inner;\n        self.tiny.insertContent(html_string);\n        self.imgElm = self.dom.get(\"__mcenew\");\n        self.dom.setAttrib(self.imgElm, \"id\", null);\n\n        waitLoad(self.imgElm);\n        if (self.imgElm.complete) {\n            self.focusElement(self.imgElm);\n        }\n    },\n\n    // eslint-disable-next-line no-unused-vars\n    modalShown: function (e) {\n        var self = this;\n        self.initElements();\n        self.initData();\n        // upload init\n        if (self.options.upload) {\n            self.$upload = $(\".uploadify-me\", self.modal.$modal);\n            self.options.upload.relatedItems = $.extend(\n                true,\n                {},\n                self.options.relatedItems\n            );\n            self.options.upload.relatedItems.selectableTypes = self.options.folderTypes;\n            self.$upload.addClass(\"pat-upload\");\n            new PatternUpload(self.$upload, self.options.upload);\n            self.$upload.on(\n                \"uploadAllCompleted\",\n                function (evt, data) {\n                    if (self.linkTypes.image) {\n                        self.linkTypes.image.set(data.data.UID);\n                        $(\n                            \"#\" + $(\"#tinylink-image\", self.modal.$modal).data(\"navref\")\n                        ).trigger(\"click\");\n                    } else {\n                        self.linkTypes.internal.set(data.data.UID);\n                        $(\n                            \"#\" +\n                                $(\"#tinylink-internal\", self.modal.$modal).data(\"navref\")\n                        ).trigger(\"click\");\n                    }\n                }.bind(self)\n            );\n        }\n\n        self.$button.off(\"click\").on(\"click\", function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.linkType = self.modal.$modal.find(\"fieldset.active\").data(\"linktype\");\n\n            if (self.linkType === \"uploadImage\" || self.linkType === \"upload\") {\n                var patUpload = self.$upload.data().patternUpload;\n                if (patUpload.dropzone.files.length > 0) {\n                    patUpload.processUpload();\n                    // eslint-disable-next-line no-unused-vars\n                    self.$upload.on(\"uploadAllCompleted\", function (evt, data) {\n                        var counter = 0;\n                        var checkUpload = function () {\n                            if (counter < 5 && !self.linkTypes[self.linkType].value()) {\n                                counter += 1;\n                                setTimeout(checkUpload, 100);\n                                return;\n                            } else {\n                                var href = self.getLinkUrl();\n                                self.updateImage(href);\n                                self.hide();\n                            }\n                        };\n                        checkUpload();\n                    });\n                }\n            }\n            var href;\n            try {\n                href = self.getLinkUrl();\n            } catch (error) {\n                return; // just cut out if no url\n            }\n            if (!href) {\n                return; // just cut out if no url\n            }\n            if (self.isImageMode()) {\n                self.updateImage(href);\n            } else {\n                /* regular anchor */\n                self.updateAnchor(href);\n            }\n            self.hide();\n        });\n        $('.modal-footer input[name=\"cancel\"]', self.modal.$modal).on(\"click\", function (e) {\n            e.preventDefault();\n            self.hide();\n        });\n    },\n\n    show: function () {\n        this.modal.show();\n    },\n\n    hide: function () {\n        this.modal.hide();\n    },\n\n    initData: function () {\n        var self = this;\n\n        self.data = {};\n        // get selection BEFORE..\n        // This is pulled from TinyMCE link plugin\n        self.initialText = null;\n        var value;\n        self.rng = self.tiny.selection.getRng();\n        self.selectedElm = self.tiny.selection.getNode();\n        self.anchorElm = self.tiny.dom.getParent(self.selectedElm, \"a[href]\");\n        self.onlyText = self.isOnlyTextSelected();\n\n        self.data.text = self.initialText = self.anchorElm\n            ? self.anchorElm.innerText || self.anchorElm.textContent\n            : self.tiny.selection.getContent({ format: \"text\" });\n        self.data.href = self.anchorElm\n            ? self.tiny.dom.getAttrib(self.anchorElm, \"href\")\n            : \"\";\n\n        if (self.anchorElm) {\n            self.data.target = self.tiny.dom.getAttrib(self.anchorElm, \"target\");\n        } else if (self.tiny.settings.default_link_target) {\n            self.data.target = self.tiny.settings.default_link_target;\n        }\n\n        if ((value = self.tiny.dom.getAttrib(self.anchorElm, \"rel\"))) {\n            self.data.rel = value;\n        }\n\n        if ((value = self.tiny.dom.getAttrib(self.anchorElm, \"class\"))) {\n            self.data[\"class\"] = value;\n        }\n\n        if ((value = self.tiny.dom.getAttrib(self.anchorElm, \"title\"))) {\n            self.data.title = value;\n        }\n\n        self.tiny.focus();\n        self.anchorElm = self.dom.getParent(self.selectedElm, \"a[href]\");\n\n        var linkType;\n        if (self.isImageMode()) {\n            var img;\n            img = self.selectedElm;\n            self.imgElm = img;\n\n            var src = self.dom.getAttrib(self.imgElm, \"src\");\n            var captionText = self.dom.getAttrib(self.imgElm, \"data-captiontext\");\n            self.$title.val(self.dom.getAttrib(self.imgElm, \"title\"));\n            self.$alt.val(self.dom.getAttrib(self.imgElm, \"alt\"));\n\n            if ($(self.imgElm).hasClass(\"zoomable\")) {\n                self.$enableImageZoom.prop(\"checked\", true);\n            }\n            if ($(self.imgElm).hasClass(\"captioned\") && !captionText) {\n                self.$captionFromDescription.prop(\"checked\", true);\n                self.$caption.prop(\"disabled\", true);\n            } else if ($(self.imgElm).hasClass(\"captioned\") && captionText) {\n                self.$captionFromDescription.prop(\"checked\", false);\n            } else {\n                self.$captionFromDescription.prop(\"checked\", false);\n            }\n            if (captionText) {\n                self.$caption.val(captionText);\n            }\n\n            linkType = self.dom.getAttrib(self.imgElm, \"data-linktype\");\n            if (linkType && linkType in self.linkTypes) {\n                self.linkType = linkType;\n                self.linkTypes[self.linkType].load(self.imgElm);\n                // set scale selection in link modal:\n                var pictureVariant = self.dom.getAttrib(\n                    self.imgElm,\n                    \"data-picturevariant\"\n                );\n                self.$scale.val(pictureVariant);\n                $(\"#tinylink-\" + self.linkType, self.modal.$modal).trigger(\"click\");\n            } else if (src) {\n                self.guessImageLink(src);\n            }\n            var className = self.dom.getAttrib(self.imgElm, \"class\");\n            var klasses = className.split(\" \");\n            for (var i = 0; i < klasses.length; i = i + 1) {\n                var klass = klasses[i];\n                for (var availClass in self.options.imageClasses) {\n                    if (availClass.indexOf(klass) !== -1) {\n                        self.$align.val(klass);\n                    }\n                }\n            }\n        } else if (self.anchorElm) {\n            self.focusElement(self.anchorElm);\n            var href = \"\";\n            href = self.dom.getAttrib(self.anchorElm, \"href\");\n            self.$target.val(self.dom.getAttrib(self.anchorElm, \"target\"));\n            self.$title.val(self.dom.getAttrib(self.anchorElm, \"title\"));\n            linkType = self.dom.getAttrib(self.anchorElm, \"data-linktype\");\n            if (linkType) {\n                self.linkType = linkType;\n                self.linkTypes[self.linkType].load(self.anchorElm);\n                var $panel = $(\"#tinylink-\" + self.linkType, self.modal.$modal);\n                // $('#tinylink-' + self.linkType, self.modal.$modal).trigger('click');\n                if ($panel.length === 1) {\n                    $(\"#\" + $panel.data(\"autotoc-trigger-id\")).trigger(\"click\");\n                }\n            } else if (href) {\n                self.guessAnchorLink(href);\n            }\n        }\n    },\n\n    guessImageLink: function (src) {\n        if (src.indexOf(this.options.prependToScalePart) !== -1) {\n            this.linkType = \"image\";\n            // TODO: use data-scale attribute instead:\n            this.$scale.val(this.tinypattern.getScaleFromUrl(src));\n            this.linkTypes.image.set(this.tinypattern.stripGeneratedUrl(src));\n        } else {\n            this.linkType = \"externalImage\";\n            this.linkTypes.externalImage.set(src);\n        }\n    },\n\n    guessAnchorLink: function (href) {\n        if (\n            this.options.prependToUrl &&\n            href.indexOf(this.options.prependToUrl) !== -1\n        ) {\n            // XXX if using default configuration, it gets more difficult\n            // here to detect internal urls so this might need to change...\n            this.linkType = \"internal\";\n            this.linkTypes.internal.set(this.tinypattern.stripGeneratedUrl(href));\n        } else if (href.indexOf(\"mailto:\") !== -1) {\n            this.linkType = \"email\";\n            var email = href.substring(\"mailto:\".length, href.length);\n            var split = email.split(\"?subject=\");\n            this.linkTypes.email.set(split[0]);\n            if (split.length > 1) {\n                this.$subject.val(decodeURIComponent(split[1]));\n            }\n        } else if (href[0] === \"#\") {\n            this.linkType = \"anchor\";\n            this.linkTypes.anchor.set(href.substring(1));\n        } else {\n            this.linkType = \"external\";\n            this.linkTypes.external.set(href);\n        }\n    },\n\n    setSelectElement: function ($el, val) {\n        $el.find(\"option:selected\").prop(\"selected\", false);\n        if (val) {\n            // update\n            $el.find('option[value=\"' + val + '\"]').prop(\"selected\", true);\n        }\n    },\n\n    reinitialize: function () {\n        /*\n         * This will probably be called before show is run.\n         * It will overwrite the base html template given to\n         * be able to privde default values for the overlay\n         */\n        this.modal.options.html = this.generateModalHtml();\n    },\n});\n","import $ from \"jquery\";\nimport _ from \"underscore\";\nimport _t from \"../../core/i18n-wrapper\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport utils from \"../../core/utils\";\n\nlet Dropzone;\n\nexport default Base.extend({\n    name: \"upload\",\n    trigger: \".pat-upload\",\n    parser: \"mockup\",\n    defaults: {\n        showTitle: true,\n        url: null, // XXX MUST provide url to submit to OR be in a form\n        className: \"upload\",\n        wrap: false,\n        wrapperTemplate: '<div class=\"upload-wrapper\"/>',\n        fileaddedClassName: \"dropping\",\n        useTus: false,\n        container: \"\",\n        ajaxUpload: true,\n\n        paramName: \"file\",\n        addRemoveLinks: false,\n        autoCleanResults: true,\n        previewsContainer: \".previews\",\n        previewTemplate: null,\n        maxFiles: null,\n        maxFilesize: 99999999, // let's not have a max by default...\n\n        allowPathSelection: undefined,\n        relatedItems: {\n            // UID attribute is required here since we're working with related items\n            attributes: [\n                \"UID\",\n                \"Title\",\n                \"Description\",\n                \"getURL\",\n                \"portal_type\",\n                \"path\",\n                \"ModificationDate\",\n            ],\n            batchSize: 20,\n            basePath: \"/\",\n            vocabularyUrl: null,\n            width: 500,\n            maximumSelectionSize: 1,\n            selectableTypes: [\"Folder\"],\n        },\n    },\n\n    init: async function () {\n        import(\"dropzone/dist/dropzone.css\");\n        import(\"./upload.scss\");\n        Dropzone = (await import(\"dropzone\")).default;\n        /* we do not want this plugin to auto discover */\n        Dropzone.autoDiscover = false;\n\n        const UploadTemplate = (await import(\"./templates/upload.xml\")).default;\n\n        var self = this;\n\n        if (typeof self.options.allowPathSelection === \"undefined\") {\n            // Set allowPathSelection to true, if we can use path based urls.\n            self.options.allowPathSelection =\n                self.options.baseUrl && self.options.relativePath;\n        }\n\n        // TODO: find a way to make this work in firefox (and IE)\n        $(document).on(\"paste\", function (e) {\n            var oe = e.originalEvent;\n            var items = oe.clipboardData.items;\n            if (items) {\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].type.indexOf(\"image\") !== -1) {\n                        var blob = items[i].getAsFile();\n                        self.dropzone.addFile(blob);\n                    }\n                }\n            }\n        });\n        // values that will change current processing\n        self.currentPath = self.options.currentPath;\n        self.currentFile = 0;\n\n        let template = _.template(UploadTemplate)({\n            _t: _t,\n            allowPathSelection: self.options.allowPathSelection,\n        });\n        self.$el.addClass(self.options.className);\n        self.$el.append(template);\n\n        self.$progress = $(\".progress-bar-success\", self.$el);\n\n        if (!self.options.showTitle) {\n            self.$el.find(\"h2.title\").hide();\n        }\n\n        if (!self.options.ajaxUpload) {\n            // no ajax upload, drop the fallback\n            $(\".fallback\", this.$el).remove();\n            if (this.$el.hasClass(\".upload-container\")) {\n                this.$el.addClass(\"no-ajax-upload\");\n            } else {\n                this.$el.closest(\".upload-container\").addClass(\"no-ajax-upload\");\n            }\n        }\n\n        if (self.options.wrap) {\n            self.$el.wrap(self.options.wrapperTemplate);\n            self.$el = self.$el.parent();\n        }\n\n        if (self.options.allowPathSelection) {\n            // only use related items if we can generate path based urls and if it's not turned off.\n            self.$pathInput = $('input[name=\"location\"]', self.$el);\n            self.relatedItems = await self.setupRelatedItems(self.$pathInput);\n        } else {\n            $('input[name=\"location\"]', self.$el).parent().remove();\n            self.relatedItems = null;\n        }\n\n        self.$dropzone = $(\".upload-area\", self.$el);\n\n        $(\"div.browse-select button.browse\", self.$el).on(\"click\", function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (\n                !self.options.maxFiles ||\n                self.dropzone.files.length < self.options.maxFiles\n            ) {\n                self.dropzone.hiddenFileInput.click();\n            }\n        });\n\n        var dzoneOptions = await this.getDzoneOptions();\n\n        try {\n            // if init of Dropzone fails it says nothing and\n            // it fails silently. Using this block we make sure\n            // that if you break it w/ some weird or missing option\n            // you can get a proper log of it\n            //\n            self.dropzone = new Dropzone(self.$dropzone[0], dzoneOptions);\n        } catch (e) {\n            if (window.DEBUG) {\n                // log it!\n                console.log(e);\n            }\n            throw e;\n        }\n\n        self.dropzone.on(\"maxfilesreached\", function () {\n            self.showHideControls();\n        });\n\n        self.dropzone.on(\"addedfile\", function (/* file */) {\n            self.showHideControls();\n        });\n\n        self.dropzone.on(\"removedfile\", function () {\n            self.showHideControls();\n        });\n\n        self.dropzone.on(\"success\", function (e, response) {\n            // Trigger event 'uploadAllCompleted' and pass the server's reponse and\n            // the path uid. This event can be listened to by patterns using the\n            // upload pattern, e.g. the TinyMCE pattern's link plugin.\n            var data;\n            try {\n                data = $.parseJSON(response);\n            } catch (ex) {\n                data = response;\n            }\n            self.$el.trigger(\"uploadAllCompleted\", {\n                data: data,\n                path_uid: self.$pathInput ? self.$pathInput.val() : null,\n            });\n        });\n\n        if (self.options.autoCleanResults) {\n            self.dropzone.on(\"complete\", function (file) {\n                if (file.status === Dropzone.SUCCESS) {\n                    setTimeout(function () {\n                        $(file.previewElement).fadeOut();\n                    }, 3000);\n                }\n            });\n        }\n\n        self.dropzone.on(\"complete\", function (file) {\n            if (file.status === Dropzone.SUCCESS && self.dropzone.files.length === 1) {\n                self.showHideControls();\n            }\n        });\n\n        self.dropzone.on(\"error\", function (file, response, xmlhr) {\n            if (typeof xmlhr !== \"undefined\" && xmlhr.status !== 403) {\n                // If error other than 403, just print a generic message\n                $(\".dz-error-message span\", file.previewElement).html(\n                    _t(\"The file transfer failed\")\n                );\n            }\n        });\n\n        self.dropzone.on(\"totaluploadprogress\", function (pct) {\n            // need to caclulate total pct here in reality since we're manually\n            // processing each file one at a time.\n            pct =\n                (((self.currentFile - 1) * 100 + pct) /\n                    (self.dropzone.files.length * 100)) *\n                100;\n            self.$progress.attr(\"aria-valuenow\", pct).css(\"width\", pct + \"%\");\n        });\n\n        $(\".upload-all\", self.$el).on(\"click\", function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.processUpload({\n                finished: function () {\n                    self.$progress.attr(\"aria-valuenow\", 0).css(\"width\", \"0%\");\n                },\n            });\n        });\n        if (self.options.clipboardfile) {\n            self.dropzone.addFile(self.options.clipboardfile);\n        }\n    },\n\n    showHideControls: function () {\n        /* we do this delayed because this can be called multiple times\n         AND we need to do this hide/show AFTER dropzone is done with\n         all it's own events. This is NASTY but the only way we can\n         enforce some numFiles with dropzone! */\n        var self = this;\n        if (self._showHideTimeout) {\n            clearTimeout(self._showHideTimeout);\n        }\n        self._showHideTimeout = setTimeout(function () {\n            self._showHideControls();\n        }, 50);\n    },\n\n    _showHideControls: function () {\n        var self = this;\n        var $controls = $(\".controls\", self.$el);\n        var $browse = $(\".browse-select\", self.$el);\n        var $input = $(\".dz-hidden-input\");\n\n        if (self.options.maxFiles) {\n            if (self.dropzone.files.length < self.options.maxFiles) {\n                $browse.show();\n                $input.prop(\"disabled\", false);\n            } else {\n                $browse.hide();\n                $input.prop(\"disabled\", true);\n            }\n        }\n        if (self.dropzone.files.length > 0) {\n            $controls.fadeIn(\"slow\");\n            var file = self.dropzone.files[0];\n            $(\".dz-error-message span\", file.previewElement).html(\"\");\n        } else {\n            $controls.fadeOut(\"slow\");\n        }\n    },\n\n    pathJoin: function () {\n        var parts = [];\n        _.each(arguments, function (part) {\n            if (!part) {\n                return;\n            }\n            if (part[0] === \"/\") {\n                part = part.substring(1);\n            }\n            if (part[part.length - 1] === \"/\") {\n                part = part.substring(0, part.length - 1);\n            }\n            parts.push(part);\n        });\n        return parts.join(\"/\");\n    },\n\n    getUrl: function () {\n        var self = this;\n        var url = self.options.url;\n        if (!url) {\n            if (self.options.baseUrl && self.options.relativePath) {\n                url = self.options.baseUrl;\n                if (url[url.length - 1] !== \"/\") {\n                    url = url + \"/\";\n                }\n                url = url + self.pathJoin(self.currentPath, self.options.relativePath);\n            } else {\n                var $form = self.$el.parents(\"form\");\n                if ($form.length > 0) {\n                    url = $form.attr(\"action\");\n                } else {\n                    url = window.location.href;\n                }\n            }\n        }\n        return url;\n    },\n\n    getDzoneOptions: async function () {\n        let PreviewTemplate = await import(\"./templates/preview.xml\");\n        PreviewTemplate = PreviewTemplate.default;\n\n        var self = this;\n\n        // This pattern REQUIRE dropzone to be clickable\n        self.options.clickable = true;\n\n        var options = $.extend({}, self.options);\n        options.url = self.getUrl();\n\n        options.headers = {\n            \"X-CSRF-TOKEN\": utils.getAuthenticator(),\n        };\n\n        // XXX force to only upload one to the server at a time,\n        // right now we don't support multiple for backends\n        options.uploadMultiple = false;\n\n        delete options.wrap;\n        delete options.wrapperTemplate;\n        delete options.resultTemplate;\n        delete options.autoCleanResults;\n        delete options.fileaddedClassName;\n        delete options.useTus;\n\n        if (self.options.previewsContainer) {\n            /*\n             * if they have a select but it's not an id, let's make an id selector\n             * so we can target the correct container. dropzone is weird here...\n             */\n            var $preview = self.$el.find(self.options.previewsContainer);\n            if ($preview.length > 0) {\n                options.previewsContainer = $preview[0];\n            }\n        }\n\n        // XXX: do we need to allow this?\n        options.autoProcessQueue = false;\n        // options.addRemoveLinks = true;  // we show them in the template\n        options.previewTemplate = PreviewTemplate;\n\n        // if our element is a form we should force some values\n        // https://github.com/enyo/dropzone/wiki/Combine-normal-form-with-Dropzone\n        return options;\n    },\n\n    processUpload: function (options) {\n        if (!options) {\n            options = {};\n        }\n\n        var self = this,\n            processing = false,\n            useTus = self.options.useTus,\n            fileaddedClassName = self.options.fileaddedClassName,\n            finished = options.finished;\n\n        self.currentFile = 0;\n\n        function process() {\n            processing = true;\n            if (self.dropzone.files.length === 0) {\n                processing = false;\n            }\n\n            var file = self.dropzone.files[0];\n            if (processing && file.status === Dropzone.ERROR) {\n                // Put the file back as \"queued\" for retrying\n                file.status = Dropzone.QUEUED;\n                processing = false;\n            }\n\n            if (!processing) {\n                self.$el.removeClass(fileaddedClassName);\n                if (finished !== undefined && typeof finished === \"function\") {\n                    finished();\n                }\n                return;\n            }\n\n            if ([Dropzone.SUCCESS, Dropzone.CANCELED].indexOf(file.status) !== -1) {\n                // remove it\n                self.dropzone.removeFile(file);\n                process();\n            } else if (file.status !== Dropzone.UPLOADING) {\n                // start processing file\n                if (useTus && window.tus) {\n                    // use tus upload if installed\n                    self.handleTusUpload(file);\n                } else {\n                    // otherwise, just use dropzone to process\n                    self.currentFile += 1;\n                    self.dropzone.processFile(file);\n                }\n                setTimeout(process, 100);\n            } else {\n                // currently processing\n                setTimeout(process, 100);\n            }\n        }\n        process();\n    },\n\n    handleTusUpload: function (file) {\n        /* this needs fixing... */\n        var self = this,\n            chunkSize = 1024 * 1024 * 5; // 5mb chunk size\n\n        file.status = Dropzone.UPLOADING;\n\n        window.tus\n            .upload(file, {\n                endpoint: self.dropzone.options.url,\n                headers: {\n                    \"FILENAME\": file.name,\n                    \"X-CSRF-TOKEN\": utils.getAuthenticator(),\n                },\n                chunkSize: chunkSize,\n            })\n            .fail(function () {\n                if (window.DEBUG) {\n                    console.alert(_t(\"Error uploading with TUS resumable uploads\"));\n                }\n                file.status = Dropzone.ERROR;\n            })\n            .progress(function (e, bytesUploaded, bytesTotal) {\n                var percentage = (bytesUploaded / bytesTotal) * 100;\n                self.$progress\n                    .attr(\"aria-valuenow\", percentage)\n                    .css(\"width\", percentage + \"%\");\n                self.$progress.html(\n                    _t(\"uploading...\") +\n                        \"<br />\" +\n                        self.formatBytes(bytesUploaded) +\n                        \" / \" +\n                        self.formatBytes(bytesTotal)\n                );\n            })\n            .done(function (url, file) {\n                file.status = Dropzone.SUCCESS;\n                self.dropzone.emit(\"success\", file);\n                self.dropzone.emit(\"complete\", file);\n            });\n    },\n\n    formatBytes: function (bytes) {\n        var kb = Math.round(bytes / 1024);\n        if (kb < 1024) {\n            return kb + \" KiB\";\n        }\n        var mb = Math.round(kb / 1024);\n        if (mb < 1024) {\n            return mb + \" MB\";\n        }\n        return Math.round(mb / 1024) + \" GB\";\n    },\n\n    setPath: function (path) {\n        var self = this;\n        self.currentPath = path;\n        self.options.url = null;\n        self.options.url = self.dropzone.options.url = self.getUrl();\n    },\n\n    setupRelatedItems: async function ($input) {\n        const RelatedItems = (await import(\"../relateditems/relateditems\")).default;\n\n        var self = this;\n        var options = self.options.relatedItems;\n        options.upload = false; // ensure that related items upload is off.\n        if (self.options.initialFolder) {\n            $input.attr(\"value\", self.options.initialFolder);\n        }\n        var ri = new RelatedItems($input, options);\n        ri.$el.on(\"change\", function () {\n            var result = $(this).select2(\"data\");\n            var path = null;\n            if (result.length > 0) {\n                path = result[0].path;\n            }\n            self.setPath(path);\n        });\n        return ri;\n    },\n});\n"],"names":["Base","name","trigger","parser","defaults","separator","ajaxTimeout","initializeValues","this","options","initialValues","id","term","initSelection","$el","callback","data","value","val","seldefaults","JSON","parse","initial_values","$","split","it","selection","trim","text","items","push","utils","initializeTags","tags","substr","allowNewItems","map","multiple","async","orderable","Sortable","default","_initializeOrdering","sortable_el","$select2","querySelector","draggable","dragClass","chosenClass","onStart","select2","onEnd","on","bind","language","console","warn","action","e","debug","window","formatResultCssClass","ob","toLowerCase","replace","onSelected","onSelecting","onDeselecting","onDeselected","parent","find","off","addClass","opened","length","i18n","I18n","currentLanguage","ajax","vocabularyUrl","undefined","url","_val","queryTerm","parseInt","quietMillis","page","query","page_limit","results","dataIds","haveResult","includes","is","attr","vals","el","querySelectorAll","innerHTML","document","createElement","type","join","className","getAttribute","after","remove","initializeSelect2","initializeOrdering","KEY","currentPath","selectedUIDs","openAfterInit","attributes","basePath","pageSize","browsing","closeOnSelect","contextPath","dropdownCssClass","favorites","recentlyUsed","recentlyUsedMaxItems","recentlyUsedKey","maximumSelectionSize","minimumInputLength","mode","pathOperator","rootPath","rootUrl","scanSelection","selectableTypes","sortOn","sortOrder","tokenSeparators","upload","uploadAllowView","breadcrumbTemplateSelector","favoriteTemplateSelector","recentlyusedTemplateSelector","resultTemplateSelector","selectionTemplateSelector","toolbarTemplateSelector","filterSelectable","ret","slice","filter","isSelectable","max","applyTemplate","tpl","item","template","html","open_folder","_t","current_directory","one_level_up","_item","_","setAjax","dataType","criterias","i","o","v","sort_on","sort_order","stringify","criteria","batch","size","more","total","UID","is_folderish","indexOf","path","oneLevelUp","Title","selectable","concat","parts","itemPath","itemsHtml","part","favoritesHtml","item_copy","recentlyUsedHtml","reverse","favItems","favText","searchText","searchModeText","browseModeText","recentlyUsedItems","recentlyUsedText","icon_root","icon_recently_used","icon_favorites","icon_upload","upload_text","$toolbar","stopPropagation","preventDefault","toggleClass","browseTo","currentTarget","event","uid","selectItem","success","result","initUploadView","allowUpload","disabled","Upload","upload_button","upload_el","upload_config","response","search","apply","emit","popover","hide","uloadMultiple","allowPathSelection","relativePath","baseUrl","addEventListener","setPath","renderToolbar","alreadyPresent","splice","deselectItem","forEach","obj","portal_type","Dropdown","breadcrumbTemplate","favoriteTemplate","recentlyusedTemplate","resultTemplate","selectionTemplate","toolbarTemplate","wrap","$container","parents","Select2","formatSelection","getIcon","getURL","review_state","$selection","registry","path_split","icon_level_up","icon_level_down","formatResult","iconLevelUp","iconLevelDown","_el","$parent","removeClass","element","ids","pattern","reduce","prev","tokenizer","input","prepend","choice","yMax","innerHeight","documentElement","clientHeight","maxHeight","getBoundingClientRect","top","css","which","selectorContext","browsableItemSelector","browsableItem","section","levels","IDPrefix","classTOCName","classSectionName","classLevelPrefixName","classActiveName","scrollDuration","scrollEasing","init","self","$toc","prependTo","appendTo","asTabs","hasClass","activeId","each","$level","prop","location","hash","getLevel","doScroll","skipHash","children","target","animate","scrollTop","offset","history","pushState","first","elementLevel","level","levelSelector","LinkType","linkModal","tinypattern","tiny","dom","getEl","toUrl","load","getAttrib","set","updateRelatedItems","ExternalLink","extend","prototype","call","RegExp","test","InternalLink","createRelatedItems","relatedItems","RelatedItems","generateUrl","UploadLink","getDelegatedLinkType","linkType","linkTypes","image","internal","ImageLink","generateImageUrl","getScaleFromSrcset","$scale","EmailLink","subject","getSubject","href","$subject","attribs","AnchorLink","$select","anchorNodes","anchorData","populate","node","j","title","nodes","select","anchorSelector","substring","found","anode","newAnchor","append","getIndex","index","anchor","tinymce","editor","ui","addButton","icon","tooltip","onAction","settings","addImageClicked","shortcut","addLinkClicked","stateSelector","execCommand","initialLinkType","insertHeading","linkTypeClassMapping","external","email","uploadImage","externalImage","linkTypeTemplateMapping","LinkTemplate","ImageTemplate","modal","generateModalHtml","content","buttons","reloadWindowOnClose","templateOptions","classDialog","actionOptions","backdropOptions","zIndex","closeOnClick","modalShown","isOnlyTextSelected","getContent","anchorElm","childNodes","ii","nodeType","insertImageHelp","uploadText","insertLinkHelp","anchorLabel","externalText","emailText","subjectText","targetList","titleText","internalImageText","internalImage","externalImageText","altText","alt","imageAlignText","imageAlign","captionFromDescriptionText","captionFromDescription","enableImageZoom","captionText","caption","scaleText","scale","pictureVariants","imageCaptioningEnabled","cancelBtn","insertBtn","isImageMode","initElements","$target","$modal","$button","$title","$alt","$align","$enableImageZoom","$captionFromDescription","$caption","classes","eq","checked","getLinkUrl","getValue","updateAnchor","focus","setRng","rng","linkAttrs","onlyText","initialText","innerText","textContent","setAttribs","undoManager","add","insertContent","createHTML","encode","focusElement","elm","nodeChanged","pictureVariant","pictureVariantsConfig","sourceset","updateImage","src","cssclasses","html_string","imgElm","imgWidth","imgHight","width","height","get","setAttrib","onload","onerror","complete","initData","$upload","folderTypes","PatternUpload","evt","patUpload","patternUpload","dropzone","files","processUpload","counter","checkUpload","setTimeout","error","show","getRng","selectedElm","getNode","getParent","format","default_link_target","rel","img","guessImageLink","klasses","klass","availClass","imageClasses","$panel","guessAnchorLink","prependToScalePart","getScaleFromUrl","stripGeneratedUrl","prependToUrl","decodeURIComponent","setSelectElement","reinitialize","Dropzone","showTitle","wrapperTemplate","fileaddedClassName","useTus","container","ajaxUpload","paramName","addRemoveLinks","autoCleanResults","previewsContainer","previewTemplate","maxFiles","maxFilesize","batchSize","autoDiscover","UploadTemplate","originalEvent","clipboardData","blob","getAsFile","addFile","currentFile","$progress","closest","$pathInput","setupRelatedItems","$dropzone","hiddenFileInput","click","dzoneOptions","getDzoneOptions","DEBUG","log","showHideControls","ex","path_uid","file","status","SUCCESS","previewElement","fadeOut","xmlhr","pct","finished","clipboardfile","_showHideTimeout","clearTimeout","_showHideControls","$controls","$browse","$input","fadeIn","pathJoin","arguments","getUrl","$form","PreviewTemplate","clickable","headers","uploadMultiple","$preview","autoProcessQueue","processing","process","ERROR","QUEUED","CANCELED","removeFile","UPLOADING","tus","handleTusUpload","processFile","endpoint","chunkSize","fail","alert","progress","bytesUploaded","bytesTotal","percentage","formatBytes","done","bytes","kb","Math","round","mb","initialFolder","ri"],"sourceRoot":""}