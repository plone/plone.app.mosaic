{"version":3,"file":"chunks/15528.6012d24052eebc48ca2b.min.js","mappings":"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","sources":["webpack://plone-mosaic/./resources/js/mosaic.layout.js"],"sourcesContent":["// This plugin is used to create a mosaic layout.\nimport \"regenerator-runtime/runtime\"; // needed for ``await`` support\nimport $ from \"jquery\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\nimport events from \"@patternslib/patternslib/src/core/events\";\nimport Tile from \"./mosaic.tile\";\nimport mosaic_utils from \"./utils\";\n\nconst log = logging.getLogger(\"pat-mosaic/layout\");\n\nexport default class LayoutManager {\n    constructor(mosaic) {\n        this.mosaic = mosaic;\n    }\n\n    layout = {\n        widthClasses: [\n            \"col\",\n            \"col-1\",\n            \"col-2\",\n            \"col-3\",\n            \"col-4\",\n            \"col-5\",\n            \"col-6\",\n            \"col-7\",\n            \"col-8\",\n            \"col-9\",\n            \"col-10\",\n            \"col-11\",\n            \"col-12\",\n        ],\n        resizeClasses: [\n            \"mosaic-resize-1\",\n            \"mosaic-resize-2\",\n            \"mosaic-resize-3\",\n            \"mosaic-resize-4\",\n            \"mosaic-resize-5\",\n            \"mosaic-resize-6\",\n            \"mosaic-resize-7\",\n            \"mosaic-resize-8\",\n            \"mosaic-resize-9\",\n            \"mosaic-resize-10\",\n            \"mosaic-resize-11\",\n            \"mosaic-resize-12\",\n            // 5-column support\n            \"mosaic-resize-2.4\",\n            \"mosaic-resize-4.8\",\n            \"mosaic-resize-7.2\",\n            \"mosaic-resize-9.6\",\n        ],\n        resizeHandleClasses: [\n            \"mosaic-resize-handle-1\",\n            \"mosaic-resize-handle-2\",\n            \"mosaic-resize-handle-3\",\n            \"mosaic-resize-handle-4\",\n            \"mosaic-resize-handle-5\",\n            \"mosaic-resize-handle-6\",\n            \"mosaic-resize-handle-7\",\n            \"mosaic-resize-handle-8\",\n            \"mosaic-resize-handle-9\",\n            \"mosaic-resize-handle-10\",\n            \"mosaic-resize-handle-11\",\n            \"mosaic-resize-handle-12\",\n        ],\n    };\n\n    /* css helpers */\n    getWidthClass(e) {\n        for (const cls of this.layout.widthClasses) {\n            if (e.classList.contains(cls)) {\n                return cls;\n            }\n        }\n        // Fallback\n        return this.layout.widthClasses[0];\n    }\n\n    getResizeHandleClassId(e) {\n        // Loop through resize handle classes\n        let handleIdx = 0;\n        this.layout.resizeHandleClasses.forEach((cls, idx) => {\n            if (e.classList.contains(cls)) {\n                handleIdx = idx;\n            }\n        })\n        return handleIdx;\n    }\n\n    async addAppTileHTML(type, response, url) {\n        let value = this.mosaic.getDomTreeFromHtml(response);\n        this.mosaic.addHeadTags(url, value);\n        await this.addTile(type, value.find(\".temp_body_tag\").html(), url);\n    }\n\n    async addTile(type, value, tileUrl) {\n        var self = this;\n        // Set dragging state\n        self.mosaic.panels.addClass(\"mosaic-panel-dragging mosaic-panel-dragging-new\");\n\n        // Add helper\n        const add_helper = document.createElement(\"div\");\n        add_helper.classList.add(\"mosaic-grid-row\");\n        add_helper.innerHTML = (\n            `<div class=\"mosaic-grid-cell col\">` +\n            `<div class=\"movable removable mosaic-tile mosaic-${type}-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-original-tile\">` +\n            `<div class=\"mosaic-tile-content\" data-tileUrl=\"${tileUrl && tileUrl.replace(/&/gim, \"&amp;\")}\">` +\n            value +\n            `</div>` +\n            `</div>` +\n            `</div>`\n        );\n        self.mosaic.panels[0].append(add_helper);\n\n        // Set helper min size\n        var helper = self.mosaic.panels.find(\".mosaic-helper-tile-new\");\n\n        // Get max width\n        var width = 0;\n        self.mosaic.panels.each(function () {\n            if ($(this).width() > width) {\n                width = $(this).width();\n            }\n        });\n\n        // Set width\n        if (helper.width() < width / 4) {\n            helper.width(width / 4);\n        } else {\n            helper.width(helper.width());\n        }\n\n        var tile = new Tile(self.mosaic, helper);\n        await tile.initialize();\n\n        tile.cacheHtml();\n        await tile.scanRegistry();\n    }\n\n    async copyTile(orig_tile) {\n        const orig_tile_inst = orig_tile[0][\"mosaic-tile\"];\n        const tile_type = orig_tile_inst.getType();\n\n        // remove class\n        orig_tile.removeClass(\"mosaic-original-tile\");\n        const orig_parent = orig_tile.closest(\".mosaic-grid-row\");\n        // create copy tile helper\n        const copy_tile_id = mosaic_utils.generate_uid();\n        let $copy_tile_helper = $(\n            `<div class=\"mosaic-grid-cell col\">` +\n            `<div class=\"movable removable copyable mosaic-tile mosaic-${tile_type}-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-original-tile\">` +\n            `<div class=\"mosaic-tile-content\" data-tileUrl=\"./@@${tile_type}/${copy_tile_id}\">` +\n            orig_tile_inst.getHtmlContent() +\n            `</div>` +\n            `</div>` +\n            `</div>`);\n        orig_parent.append($copy_tile_helper);\n\n        var tile = new Tile(this.mosaic, $copy_tile_helper.find(\".mosaic-tile\"));\n        await tile.initialize();\n        // save copied content\n        await tile.save();\n\n        if (tile.getConfig().tile_type == \"app\") {\n            // copy the data from original tile too\n            const orig_tile_data = await orig_tile_inst.serialize();\n            await tile.deserialize(orig_tile_data);\n        }\n\n        tile.cacheHtml();\n        await tile.scanRegistry();\n\n        return tile.$el;\n    }\n\n    getDefaultValue(tile_config) {\n        var self = this;\n        var start, end;\n\n        // Wrap title and description fields for proper styles\n        if (tile_config.name === \"IDublinCore-title\") {\n            start = '<h1 class=\"documentFirstHeading\">';\n            end = \"</h1>\";\n        } else if (tile_config.name === \"IDublinCore-description\") {\n            start = '<p class=\"documentDescription\">';\n            end = \"</p>\";\n        } else {\n            start = \"<div>\";\n            end = \"</div>\";\n        }\n\n        if (tile_config.tile_type == \"field\") {\n            switch (tile_config.widget) {\n                case \"z3c.form.browser.text.TextWidget\":\n                case \"z3c.form.browser.text.TextFieldWidget\":\n                    var textval = $(\"#\" + tile_config.id, self.mosaic.document)\n                        .find(\"input\")\n                        .attr(\"value\");\n                    return `${start}${textval}${end}`;\n                case \"z3c.form.browser.textarea.TextAreaWidget\":\n                case \"z3c.form.browser.textarea.TextAreaFieldWidget\":\n                case \"z3c.form.browser.textlines.TextLinesWidget\":\n                case \"z3c.form.browser.textlines.TextLinesFieldWidget\":\n                    var lines = $(\"#\" + tile_config.id, self.mosaic.document)\n                        .find(\"textarea\")\n                        .val()\n                        .replace(\"\\\\n\", \"<br/>\");\n                    return `${start}${lines}${end}`;\n                case \"plone.app.z3cform.widget.RichTextFieldWidget\":\n                case \"plone.app.z3cform.widgets.richtext.RichTextFieldWidget\":\n                case \"plone.app.z3cform.wysiwyg.widget.WysiwygWidget\":\n                case \"plone.app.z3cform.wysiwyg.widget.WysiwygFieldWidget\":\n                case \"plone.app.widgets.dx.RichTextWidget\":\n                    return $(\"#\" + tile_config.id)\n                        .find(\"textarea\")\n                        .val();\n                default:\n                    return `<div class=\"text-bg-secondary\">Placeholder for field:<br/><b>${tile_config.label}</b></div>`;\n            }\n        } else {\n            return tile_config.default_value;\n        }\n    }\n\n    async getPageContent(exportLayout) {\n        var getLayoutRow = (obj) => {\n            let body = \"\";\n\n            // if empty return\n            if (!obj.querySelectorAll(\".mosaic-tile\").length) {\n                return body;\n            }\n\n            // Add row open tag\n            body += `<div class=\"${obj.getAttribute('class')}\">\\n`;\n\n            // Loop through cells\n            for (const cell of obj.children) {\n                if (!cell.classList.contains(\"mosaic-grid-cell\")) {\n                    continue;\n                }\n\n                body += `<div class=\"${cell.getAttribute('class')}\">\\n`;\n\n                for (const child of cell.children) {\n                    if (child.classList.contains(\"mosaic-innergrid-row\")) {\n                        body += getLayoutRow(child);\n                    }\n                    if (child.classList.contains(\"mosaic-tile\")) {\n                        body += child[\"mosaic-tile\"].getHtmlBody(exportLayout);\n                    }\n                };\n\n                body += \"</div>\\n\";\n            };\n\n            // Add row close tag\n            body += \"</div>\";\n            return body;\n        };\n\n        // Content\n        let body = \"<body>\";\n\n        // Loop through panels\n        const panels = this.mosaic.document.querySelectorAll(\"[data-panel]\");\n\n        panels.forEach(panel => {\n            body += `<div data-panel=\"${panel.dataset?.panel}\" data-max-colums=\"${panel.dataset?.maxColumns || 6}\">`\n            for (const row of panel.children) {\n                if (row.classList.contains(\"mosaic-empty-row\")) {\n                    continue;\n                }\n                body += getLayoutRow(row);\n            };\n            // Add close panel tag\n            body += \"</div>\";\n        });\n\n        // Add close tag\n        body += \"</body>\";\n\n        return `<!DOCTYPE html><html data-layout=\"${this.mosaic.options.layout}\">${body}</html>`;\n    }\n\n    async saveLayoutToForm() {\n        var self = this;\n        var $customLayout = $(\n            \"#form-widgets-ILayoutAware-customContentLayout, \" +\n            \"[name='form.widgets.ILayoutAware.customContentLayout']\",\n        );\n\n        if (self.mosaic.hasContentLayout) {\n            $customLayout.val(\"\");\n        } else {\n            $customLayout.val(await self.getPageContent());\n        }\n    }\n\n    init_events() {\n        var self = this;\n        const _document = this.mosaic.document;\n        const _panels = _document.querySelectorAll(\".mosaic-panel\");\n\n        if (_panels.length == 0) {\n            console.log(\"No mosaic panel found!\");\n            return\n        }\n        else if (_panels.length > 1) {\n            console.log(\"More than one mosaic panels found -> initializing events only for first panel!\");\n        }\n\n        const _panel = _panels[0];\n\n        var DocumentKeyup = function (e) {\n            // Check if alt\n            if (e.keyCode === 18) {\n                // check for copy mode\n                if (_panel.classList.contains(\"mosaic-panel-dragging-copy\")) {\n                    _panel.classList.remove(\"mosaic-panel-dragging-copy\");\n                } else {\n                    var date = new Date();\n                    var elapsed = date.getTime() - parseInt(_panel[\"mosaic-advanced-enabled\"]);\n                    if (elapsed > 400) {\n                        _panel.classList.remove(\"mosaic-advanced\");\n                    }\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                _panel.classList.remove(\"inner-subcolumn\");\n            }\n        };\n\n        // Keydown handler\n        var DocumentKeydown = function (e) {\n            // Tab key\n            if (e.keyCode === 9) {\n                // blur all active tiles. and set focus\n                _document.querySelectorAll(\".mosaic-selected-tile\").forEach(async (tile) => {\n                    await $(tile).data(\"mosaic-tile\").blur();\n                });\n                // focus new tile\n                var focused_tile = document.activeElement.closest(\".mosaic-tile\");\n                if (focused_tile) {\n                    $(focused_tile).data(\"mosaic-tile\").focus();\n                }\n            }\n            // Check if alt\n            if (e.keyCode === 18) {\n                // pressing alt during existing tile dragging checks for possible copy mode\n                // see mosaic.tile.js -> COPYABLE_TILE_TYPES\n                const orig_tile = _panel.querySelector(\".mosaic-original-tile\");\n                if (\n                    _panel.classList.contains(\"mosaic-panel-dragging\") &&\n                    !_panel.classList.contains(\"mosaic-panel-dragging-new\")\n                ) {\n                    const cpy_class = orig_tile?.classList.contains(\"copyable\") ? \"copy\" : \"unique\";\n                    _panel.classList.add(`mosaic-panel-dragging-${cpy_class}`);\n                }\n                else if (_panel.classList.contains(\"mosaic-advanced\")) {\n                    _panel.classList.remove(\"mosaic-advanced\");\n                } else {\n                    _panel.classList.add(\"mosaic-advanced\");\n                    _panel[\"mosaic-advanced-enabled\"] = (new Date()).getTime();\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                _panel.classList.add(\"inner-subcolumn\");\n            }\n\n            // Check if esc\n            if (e.keyCode === 27) {\n                // Check if dragging\n                var original_tile = _panel.querySelectorAll(\".mosaic-original-tile\");\n                if (original_tile.length > 0) {\n                    original_tile.forEach((tile) => {\n                        tile.classList.add(\"mosaic-drag-cancel\");\n                        if (tile.classList.contains(\"mosaic-helper-tile-new\")) {\n                            // original row\n                            const $orig_row = $(tile).parent().parent();\n                            // dismiss dragging tile and cleanup row\n                            $(tile).remove();\n                            $orig_row.mosaicCleanupRow();\n                            // Remove dragging class from content\n                            _panel.classList.remove(\n                                \"mosaic-panel-dragging\", \"mosaic-panel-dragging-new\",\n                            );\n                            // Hide all dividers\n                            _document.querySelectorAll(\".mosaic-selected-divider\").forEach(divider => {\n                                divider.classList.remove(\"mosaic-selected-divider\");\n                            });\n                        }\n                    });\n                    // Deselect tile\n                } else {\n                    $(\".mosaic-selected-tile\", _document).each(function () {\n                        $(this).trigger(\"blur\");\n                    });\n                }\n\n                // Find resize helper\n                $(\".mosaic-resize-handle-helper\", _document).each(function () {\n                    // Remove resizing state\n                    $(this).parents(\"[data-panel]\").removeClass(\"mosaic-panel-resizing\");\n                    $(this).parent().removeClass(\"mosaic-row-resizing\");\n                    $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n                    // Remove helper\n                    $(this).remove();\n                });\n            }\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            _document,\n            \"keydown\",\n            \"pat-layout--keydown\",\n            DocumentKeydown,\n        );\n        events.add_event_listener(\n            _document,\n            \"keyup\",\n            \"pat-layout--keyup\",\n            DocumentKeyup,\n        );\n\n        // Add deselect\n        const DocumentMousedown = function (e) {\n            // Get element\n            let elm;\n            if (e.target) {\n                elm = e.target;\n            } else if (e.srcElement) {\n                elm = e.srcElement;\n            }\n\n            // Find new tile helper\n            var new_tile = $(\".mosaic-helper-tile-new\", self.mosaic.document);\n            if (new_tile.length > 0) {\n                new_tile.each(function () {\n                    // Handle drag end\n                    $(this).mosaicHandleDragEnd();\n                });\n                return;\n            }\n\n            // If clicked inside TinyMCE or Modal exit\n            if ($(elm).parents(\".mce-content-body, .tox, .modal-wrapper\").length > 0) {\n                return;\n            }\n\n            // If clicked outside a tile\n            if ($(elm).parents(\".mosaic-tile\").length === 0) {\n                // Deselect tiles\n                self.mosaic.document\n                    .querySelectorAll(\".mosaic-selected-tile:not(.mosaic-tile-loading)\")\n                    .forEach(async (el) => {\n                        await $(el).data(\"mosaic-tile\").blur();\n                    });\n                // Check if outside toolbar\n                if ($(elm).parents(\".mosaic-toolbar\").length === 0) {\n                    // Set actions\n                    self.mosaic.toolbar.SelectedTileChange();\n                }\n            }\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mousedown\",\n            \"pat-layout--mousedown-document\",\n            DocumentMousedown,\n        );\n\n        // Handle mouse move event: when holding down mouse left button and dragging the handler left or right.\n        const DocumentMousemove = function (e) {\n            // Get new tile helper\n            var $new_tile_helper = $(\".mosaic-helper-tile-new\", self.mosaic.document);\n\n            if ($new_tile_helper.length) {\n                // Get offset\n                const offset = $new_tile_helper.parent().offset();\n                // Get mouse x\n                $new_tile_helper.css(\"top\", e.pageY + 3 - offset.top);\n                $new_tile_helper.css(\"left\", e.pageX + 3 - offset.left);\n\n            }\n\n            // Get resize handle helper\n            var $helper = $(\".mosaic-resize-handle-helper\", self.mosaic.document);\n\n            if ($helper.length) {\n                // Get row\n                var $row = $helper.parent();\n                var resize_handle_index = $helper.data(\"resize_handle_index\");\n\n                // Get mouse x\n                var mouse_x = parseFloat(\n                    e.pageX - // current mouseX\n                    $row.offset().left - // current row position left\n                    parseInt(getComputedStyle($row[0]).paddingLeft) - // calculated padding (eg fluid-background-row)\n                    4 // centered handler\n                );\n\n                // Get mouse percentage\n                var mouse_percentage = Math.round(\n                    (mouse_x / $helper.data(\"row_width\")) * 100\n                );\n\n                // Get closest snap location\n                var snap = 8;\n                var snap_offset = 8;\n                var cur_snap_offset;\n                var grid_percent = GetGridPercentList();\n\n                grid_percent.forEach(function (perc) {\n                    cur_snap_offset = Math.abs(perc - mouse_percentage);\n                    if (cur_snap_offset < snap_offset) {\n                        snap = perc;\n                        snap_offset = cur_snap_offset;\n                    }\n                });\n\n                var snap_size = GetBootstrapColByPercent(snap);\n\n                var column_sizes = $helper[0][\"column_sizes\"];\n                // sum of all column sizes\n                var column_sizes_sum = column_sizes.reduce((a, b) => a + b, 0);\n                // sum of sizes before helper index\n                var col_size_before = column_sizes.slice(0, resize_handle_index).reduce((a, b) => a + b, 0);\n                // sum of sizes after helper index excluding last column (which is elastic)\n                var col_size_after = column_sizes.slice(resize_handle_index + 1, -1).reduce((a, b) => a + b, 0);\n                // calculate maximum size of current column\n                if (resize_handle_index == (column_sizes.length - 1)) {\n                    // if last column, we can drag to full width (12)\n                    var col_size_max = 12 - col_size_before - col_size_after;\n                } else {\n                    // if not last column, we respect last elastic column (min-size: 1)\n                    // with its fixed right margin\n                    var col_size_max = column_sizes_sum - col_size_before - col_size_after - 1;\n                }\n                var new_column_size = snap_size - col_size_before;\n                // limit to maximum of col_sizes_sum and minimum of 1\n                new_column_size = new_column_size > col_size_max ? col_size_max : new_column_size < 1 ? 1 : new_column_size;\n                let new_column_sizes = [];\n\n                column_sizes.forEach((width, i) => {\n                    if (i === resize_handle_index) {\n                        // set new size for current column\n                        new_column_sizes.push(new_column_size);\n                    } else if (i === (column_sizes.length - 1)) {\n                        // calculate elastic size for last column\n                        var _before = new_column_sizes.reduce((a, b) => a + b);\n                        var _last_size = column_sizes_sum - _before;\n                        // _last_size cannot be lower than 1\n                        new_column_sizes.push(_last_size < 1 ? 1 : _last_size);\n                    } else {\n                        new_column_sizes.push(width);\n                    }\n                })\n\n                log.debug(\"------------------resize-handle(move)--------------------\")\n                log.debug(`mouse_x: ${mouse_x}`);\n                log.debug(`mouse_percentage: ${mouse_percentage}`);\n                log.debug(`resize_handle_index: ${resize_handle_index}`);\n                log.debug(`column_sizes: ${column_sizes}`);\n                log.debug(`column_sizes_sum: ${column_sizes_sum}`);\n                log.debug(`cur_snap_offset: ${cur_snap_offset}`);\n                log.debug(`snap: ${snap}`);\n                log.debug(`snap_size: ${snap_size}`);\n                log.debug(`col_size_before: ${col_size_before}`);\n                log.debug(`col_size_after: ${col_size_after}`);\n                log.debug(`col_size_max: ${col_size_max}`);\n                log.debug(`new_column_size: ${new_column_size}`);\n                log.debug(`new_column_sizes: ${new_column_sizes}`);\n\n                var col_size_sum = 0;\n                var resize_css_classes = self.layout.resizeClasses.join(\" \");\n                var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                $row.children(\".mosaic-resize-placeholder\").each(function (idx) {\n                    var col_size = column_sizes[idx];\n                    var col_size_class = GetWidthClassByColSize(col_size);\n\n                    // placeholder width and position\n                    $(this)\n                        .removeClass(`${width_css_classes} ${resize_css_classes}`)\n                        .addClass(`${col_size_class} mosaic-resize-${col_size_sum}`)\n                        .find(\".info\")\n                        .html(col_size);\n\n                    col_size_sum += col_size;\n\n                    if (idx === resize_handle_index) {\n                        // move resize handle helper\n                        $helper\n                            .removeClass(resize_css_classes)\n                            .addClass(`mosaic-resize-${col_size_sum}`);\n                    }\n                });\n\n                // Set new size\n                $helper[0][\"column_sizes\"] = new_column_sizes;\n            }\n\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mousemove\",\n            \"pat-layout--mousemove\",\n            DocumentMousemove,\n        );\n        events.add_event_listener(\n            self.mosaic.document,\n            \"dragover\",\n            \"pat-layout--dragover\",\n            DocumentMousemove,\n        );\n\n        // Handle mouse up event\n        // When resizing is done on mouse up event apply the changes to the div elements\n        const DocumentMouseup = function () {\n            // Find resize helper\n            $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n\n                var resize_handle_index = $(this).data(\"resize_handle_index\");\n\n                // Cleanup original row\n                $(this).parent().parent().mosaicCleanupRow();\n\n                // Get panel\n                var panel = $(this).closest(\"[data-panel]\");\n\n                // Get column sizes\n                var column_sizes = $(this)[0][\"column_sizes\"];\n                var css_width_classes = self.layout.widthClasses.join(\" \");\n\n                // Set column sizes\n                $(this)\n                    .parent()\n                    .children(\".mosaic-grid-cell\")\n                    .each(function (i) {\n                        $(this)\n                            .removeClass(css_width_classes)\n                            .addClass(GetWidthClassByColSize(column_sizes[i]));\n\n                        var can_reset = $(this).hasClass(\"col\");\n                        if (!can_reset && i === resize_handle_index) {\n                            $(this)\n                                .children(\".mosaic-tile\")\n                                .first()\n                                .children(\".mosaic-tile-side-tools\")\n                                .each(function () {\n                                    var $tileSideTools = $(this);\n\n                                    $tileSideTools\n                                        .children(\".mosaic-tile-label.reset\")\n                                        .remove();\n\n                                    $tileSideTools.append(\n                                        $(self.mosaic.document.createElement(\"div\"))\n                                            .addClass(\"mosaic-tile-label reset\")\n                                            .append(\n                                                AddResetAnchor(\n                                                    $tileSideTools,\n                                                    column_sizes[i],\n                                                ),\n                                            ),\n                                    );\n                                });\n                        }\n                    });\n\n                // Remove resizing state\n                panel.removeClass(\"mosaic-panel-resizing\");\n                $(this).parent().removeClass(\"mosaic-row-resizing\");\n                $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n\n                // Set resize handles\n                $(this).parent().mosaicSetResizeHandles();\n                var $tile = panel.find(\".mosaic-selected-tile\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n\n                // Remove helper\n                $(this).remove();\n            });\n        };\n\n        // Bind event\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mouseup\",\n            \"pat-layout--mouseup\",\n            DocumentMouseup,\n        );\n\n        // Handle mousemove on tile\n        const TileMousemove = function (e) {\n\n            // only if dragging\n            if (\n                $(this).parents(\"[data-panel]\").hasClass(\"mosaic-panel-dragging\") ===\n                false\n            ) {\n                return;\n            }\n\n            // Hide all dividers\n            $(\".mosaic-selected-divider\", self.mosaic.document).removeClass(\n                \"mosaic-selected-divider\",\n            );\n\n            // Don't show dividers if above original or floating tile\n            // but not in copy mode\n            if (\n                (!$(this).parents(\"[data-panel]\").hasClass(\"mosaic-panel-dragging-copy\") &&\n                    $(this).hasClass(\"mosaic-original-tile\")) ||\n                $(this).hasClass(\"mosaic-tile-align-left\") ||\n                $(this).hasClass(\"mosaic-tile-align-right\")\n            ) {\n                return;\n            }\n\n            // Get direction\n            var dir = $(this).mosaicGetDirection(e);\n            var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n            // Check if left or right divider\n            if (dir === \"left\" || dir === \"right\") {\n                var row = divider.closest(\".mosaic-grid-row\");\n                var cols = row.children(\".mosaic-grid-cell\").filter((idx, el) => {\n                    // filter out original tile to enable moving tiles\n                    // inside row with max-columns tiles\n                    return $(el).find(\".mosaic-original-tile\").length === 0;\n                });\n\n                if (cols.length >= $(\".mosaic-panel\").data(\"max-columns\")) {\n                    // This row already up to the max amount of columns allowed for this layout\n                    // do not allow new items to be dropped alingside any elements in this row.\n                    return;\n                }\n\n                // If row has multiple columns\n                if (row.children(\".mosaic-grid-cell\").length > 1) {\n                    divider.height(row.height() + 5);\n                    divider.css(\n                        \"top\",\n                        row.offset().top - divider.parent().offset().top - 5,\n                    );\n                } else {\n                    divider.height(divider.parent().height() + 5);\n                    divider.css(\"top\", -5);\n                }\n            }\n\n            // Show divider\n            divider.addClass(\"mosaic-selected-divider\");\n        };\n\n        // Bind events\n        self.mosaic.document.querySelectorAll(\".mosaic-tile\").forEach((tile) => {\n            events.add_event_listener(\n                tile,\n                \"mousemove\",\n                \"pat-layout--mousemove-tile\",\n                TileMousemove,\n            );\n            events.add_event_listener(\n                tile,\n                \"dragover\",\n                \"pat-layout--dragover-tile\",\n                TileMousemove,\n            );\n            events.add_event_listener(\n                tile,\n                \"click\",\n                \"pat-layout--select-tile\",\n                () => {\n                    if ($(\".mosaic-helper-tile-new\", self.mosaic.document).length > 0) {\n                        // only if not dropping tile\n                        return;\n                    }\n                    tile[\"mosaic-tile\"].select();\n                },\n            );\n        });\n\n        const applyCustomCss = function (e) {\n            if (e.target.id === \"custom-css-input-box\") {\n                return;\n            }\n            self.mosaic.document.querySelectorAll(\".mosaic-set-custom-css\").forEach(el => {\n                const row = el.parentNode;\n                let base_css = \"mosaic-grid-row\";\n                if (row.classList.contains(\"mosaic-innergrid-row\")) {\n                    base_css += \"mosaic-innergrid-row\";\n                }\n                const customCss = el.querySelector(\"#custom-css-input-box\").value;\n                if (customCss) {\n                    base_css += ` ${customCss}`;\n                }\n                row.setAttribute(\"class\", base_css);\n                // re-apply handles if we add/remove \"mosaic-fixed-row\"\n                $(row).mosaicSetResizeHandles();\n                el.remove();\n            })\n        };\n\n        const CustomCSSOnDblClick = function (e) {\n            // Only do this for \"mosaic-grid-row\" if advanced mode is enabled\n            const target = e.target;\n            const panel = target.closest(\"[data-panel]\");\n            if (panel.classList.contains(\"mosaic-advanced\") && target.classList.contains(\"mosaic-grid-row\")) {\n                // Check we don't have an input field already\n                if (target.querySelector(\".mosaic-set-custom-css\")) {\n                    return;\n                }\n\n                // We are in advance mode\n                var custom_classes = Array.from(target.classList).filter(cls => {\n                    return [\"mosaic-grid-row\", \"mosaic-innergrid-row\"].indexOf(cls) == -1;\n                });\n\n                const row_input = document.createElement(\"div\");\n                row_input.classList.add(\"mosaic-set-custom-css\");\n                row_input.innerHTML = `<label>Custom CSS for this row</label><input type=\"text\" id=\"custom-css-input-box\" value=\"${custom_classes.join(' ')}\"></input>`;\n                target.append(row_input);\n                events.add_event_listener(\n                    row_input,\n                    \"keyup\",\n                    \"pat-layout--apply-custom-css\",\n                    applyCustomCss,\n                );\n            }\n        };\n        self.mosaic.document.querySelectorAll(\".mosaic-grid-row\").forEach((gridrow) => {\n            events.add_event_listener(\n                gridrow,\n                \"dblclick\",\n                \"pat-layout--dblclick-gridrow\",\n                CustomCSSOnDblClick,\n            );\n        });\n        events.add_event_listener(\n            self.mosaic.document,\n            \"click\",\n            \"pat-layout--click\",\n            applyCustomCss,\n        );\n    }\n\n    async initialize_panels() {\n        var self = this;\n\n        self.initJQueryHelpers();\n        self.init_events();\n\n        // determine biggest panel during loop\n        let biggestPanel = null;\n        let width = 0;\n\n        for (const panel of self.mosaic.panels) {\n            // Get jQuery object\n            const $panel = $(panel);\n\n            // Add icons and dividers\n            for (const tileNode of panel.querySelectorAll(\".mosaic-tile\")) {\n                var tile = new Tile(self.mosaic, tileNode);\n                await tile.initialize();\n                $(tileNode).mosaicAddDrag();\n            }\n\n            $panel.mosaicAddEmptyRows();\n            $panel.children(\".mosaic-grid-row\").mosaicSetResizeHandles();\n\n            const pWidth = panel.offsetWidth;\n            if (pWidth && pWidth > width) {\n                width = pWidth;\n                biggestPanel = panel;\n            }\n\n            $panel.find(\".mosaic-innergrid-row\").mosaicSetResizeHandles();\n        }\n\n        // Select first tile in biggest panel\n        if (biggestPanel) {\n            const firstTile = biggestPanel.querySelector(\".mosaic-tile:first-child\");\n            if (firstTile) {\n                firstTile[\"mosaic-tile\"].select();\n            }\n        }\n\n    }\n\n    initJQueryHelpers() {\n        var self = this;\n        var mosaic_doc = self.mosaic.document;\n\n        $.fn.mosaicAddMouseMoveEmptyRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).on(\"mousemove\", function (/* e */) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\",\n                        );\n                        $(this).children(\"div\").addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add empty rows\n         *\n         * @id jQuery.mosaicAddEmptyRows\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddEmptyRows = function () {\n\n            const create_empty_row = (add_class) => {\n                return $(mosaic_doc.createElement(\"div\"))\n                    .addClass(`mosaic-grid-row mosaic-empty-row ${add_class}`)\n                    .append(\n                        $(mosaic_doc.createElement(\"div\"))\n                            .addClass(\"mosaic-grid-cell col\")\n                            .append(\n                                $(mosaic_doc.createElement(\"div\"))\n                            )\n                    )\n                    .mosaicAddMouseMoveEmptyRow();\n            }\n\n            return this.each(() => {\n                // first row is always an empty one\n                $(this).prepend(create_empty_row(\"\"))\n                // Loop through rows\n                $(this)\n                    .find(\".mosaic-grid-row:not(.mosaic-empty-row\").each(function() {\n                        const empty_row = create_empty_row(\n                            $(this).hasClass(\"mosaic-innergrid-row\") ? \"mosaic-innergrid-row\" : \"\"\n                        );\n                        $(this).after(empty_row);\n                    })\n            });\n        };\n\n        /**\n         * Add draggable to matched elements\n         *\n         * @id jQuery.mosaicAddDrag\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddDrag = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                const tile = this;\n                let drag_start_ts = 0;\n                let drag_start = null;\n                let drag_start_delay = 300;\n\n                const DragMove = (event) => {\n                    var helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    var offset = helper.parents(\"[data-panel]\").offset();\n                    if (offset) {\n                        helper.css(\"top\", event.pageY + 3 - offset.top);\n                        helper.css(\"left\", event.pageX + 3 - offset.left);\n                    }\n                };\n\n                const DragStop = () => {\n                    clearTimeout(drag_start);\n\n                    events.remove_event_listener(mosaic_doc, \"pat-layout--dragmove\")\n                    events.remove_event_listener(mosaic_doc, \"pat-layout--dragstop\")\n\n                    var curr_ts = (new Date()).getTime();\n\n                    if ((curr_ts - drag_start_ts) < drag_start_delay) {\n                        // skip within dragstart delay\n                        return;\n                    }\n\n                    // Handle drag end\n                    const helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    helper.mosaicHandleDragEnd();\n                    helper.remove();\n                };\n\n                const DragStart = (event) => {\n                    // Add dragging class to content area\n                    self.mosaic.panels.addClass(\"mosaic-panel-dragging\");\n\n                    $(\".mosaic-selected-tile\", mosaic_doc)\n                        .removeClass(\"mosaic-selected-tile\")\n                        .children(\".mosaic-tile-content\")\n                        .trigger(\"blur\");\n\n                    var originaltile = $(event.target).parents(\n                        \".mosaic-tile\",\n                    );\n                    originaltile.addClass(\"mosaic-original-tile\");\n\n                    var clone = originaltile.clone(true);\n                    clone\n                        .removeClass(\"mosaic-original-tile\")\n                        .css({\n                            \"width\": originaltile.width(),\n                            \"max-height\": \"33%\",\n                            \"position\": \"absolute\",\n                            \"opacity\": 0.5,\n                        })\n                        .addClass(\"mosaic-helper-tile\");\n                    originaltile.parents(\"[data-panel]\").append(clone);\n\n                    events.add_event_listener(\n                        mosaic_doc,\n                        \"mousemove\",\n                        \"pat-layout--dragmove\",\n                        DragMove,\n                    )\n                }\n\n                const tile_drag_handle = tile.querySelector(\".mosaic-drag-handle\");\n\n                events.add_event_listener(\n                    tile_drag_handle,\n                    \"mousedown\",\n                    \"pat-layout--startdrag\",\n                    (event) => {\n                        if (event.button !== 0) {\n                            // only left mouse down!\n                            return;\n                        }\n                        // register dragstop\n                        events.add_event_listener(mosaic_doc, \"mouseup\", \"pat-layout--dragstop\", DragStop);\n                        // delayed dragstart\n                        drag_start_ts = (new Date()).getTime();\n                        drag_start = setTimeout(() => {\n                            DragStart(event);\n                        }, drag_start_delay);\n                    }\n                );\n\n                const tile_move_btn = tile.querySelector(\".mosaic-btn-move\");\n                if (tile_move_btn) {\n                    events.add_event_listener(\n                        tile_move_btn,\n                        \"mousedown\",\n                        \"pat-layout--startmove\",\n                        (event) => {\n                            if (event.button === 0) {\n                                // only left mouse down starts dragging\n                                DragStart(event);\n                            }\n                        }\n                    );\n                }\n            });\n        };\n\n        /**\n         * Event handler for drag end - add new tile\n         *\n         * @id jQuery.mosaicHandleDragEnd\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicHandleDragEnd = async function () {\n            // Get layout object\n            var obj = $(this).parents(\"[data-panel]\");\n            let copy = obj.hasClass(\"mosaic-panel-dragging-copy\");\n\n            // Get direction\n            const divider = mosaic_doc.querySelector(\".mosaic-selected-divider\");\n            const drop = $(divider.parentElement);\n\n            // get direction where to drop\n            let dir = \"\";\n            for (const _dir of [\"top\", \"bottom\", \"left\", \"right\"]) {\n                if (divider.classList.contains(`mosaic-divider-${_dir}`)) {\n                    dir = _dir;\n                }\n            }\n            divider.classList.remove(\"mosaic-selected-divider\");\n\n            // True if new tile is inserted or copied\n            var new_tile = $(\".mosaic-helper-tile-new\", mosaic_doc).length > 0;\n            var original_tile = $(\".mosaic-original-tile\", mosaic_doc);\n            // get original row here, because tile might be moved\n            var original_row = original_tile.closest(\".mosaic-grid-row\");\n            // check if we want to copy it (pressed ALT key -> see init_events)\n            let dropped_tile = copy ? await self.copyTile(original_tile) : original_tile;\n\n            // If divider is not found or not sane drop, act like esc is pressed\n            if (divider.length === 0 || drop.hasClass(\"mosaic-helper-tile\")) {\n                dropped_tile.addClass(\"mosaic-drag-cancel\");\n            }\n\n            // we have to remove left/right divider if we're dropped inside a fixed row\n            const drop_row = divider.closest(\".mosaic-grid-row\");\n            if (drop_row.classList.contains(\"mosaic-fixed-row\")) {\n                $(\".mosaic-divider-left\", dropped_tile).remove();\n                $(\".mosaic-divider-right\", dropped_tile).remove();\n            }\n\n            const fixup_classes = (_t) => {\n                _t.removeClass(\"mosaic-drag-cancel\");\n                _t.removeClass(\n                    \"mosaic-original-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-tile-align-right mosaic-tile-align-left\",\n                );\n                _t.css({ width: \"\", left: \"\", top: \"\" });\n            };\n\n            if (\n                // Check if esc is pressed\n                dropped_tile.hasClass(\"mosaic-drag-cancel\") ||\n                // Not dropped on tile and empty row\n                (drop.hasClass(\"mosaic-tile\") === false &&\n                    drop.hasClass(\"mosaic-innergrid-row\") === false &&\n                    drop.hasClass(\"mosaic-empty-row\") === false) ||\n                // Check if max columns rows is reached\n                (drop.parent().parent().children(\".mosaic-grid-cell\").length >=\n                    obj.data(\"max-columns\") &&\n                    (dir === \"left\" || dir === \"right\"))\n            ) {\n                fixup_classes(dropped_tile);\n\n            } else if (drop.hasClass(\"mosaic-empty-row\")) {\n                // Dropped on empty row\n\n                // Replace empty with normal row class\n                drop.removeClass(\"mosaic-empty-row\")\n                    .attr(\"class\", original_row.attr(\"class\"))\n                    .off(\"mousemove\");\n\n                // Clean cell\n                drop.children(\".mosaic-grid-cell\").children(\"div\").remove();\n\n                fixup_classes(dropped_tile);\n\n                drop.children(\".mosaic-grid-cell\").append(dropped_tile);\n            } else {\n                // Dropped on row or below an inner grid\n\n                fixup_classes(dropped_tile);\n\n                // When the layout object has the special class (Assigned in line 369), wrap\n                // the tile in a div.mosaic-innergrid-row so you can create nested columns\n                if (obj.hasClass(\"inner-subcolumn\")) {\n                    dropped_tile = $(mosaic_doc.createElement(\"div\"))\n                        .addClass(\"mosaic-grid-row mosaic-innergrid-row\")\n                        .append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-grid-cell col\")\n                                .append(dropped_tile)\n                        );\n                    for (const pos of [\"top\", \"bottom\"]) {\n                        dropped_tile.append(\n                            $(mosaic_doc.createElement(\"div\")).addClass(\n                                \"mosaic-divider mosaic-divider-\" + pos,\n                            ),\n                        );\n                    }\n                }\n\n                if (dir === \"top\") {\n                    // If top add tile before\n                    drop.before(dropped_tile);\n\n                } else if (dir === \"bottom\") {\n                    // If bottoma dd tile after\n                    drop.after(dropped_tile);\n\n                } else if (dir === \"left\" || dir === \"right\") {\n                    // If left\n                    var _col = drop.parent();\n                    var _row = _col.parent();\n                    var _children_count = _row.children(\".mosaic-grid-cell\").length;\n\n                    // Check if only 1 column in the row\n                    if (_children_count.length === 1) {\n                        // Put tiles above dropped tile in a new row above\n                        var prev_elms = drop.prevAll();\n                        if (prev_elms.length > 0) {\n                            _row.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                $(prev_elms.get().reverse())\n                                                    .clone(true)\n                                                    .mosaicAddDrag(),\n                                            ),\n                                    ),\n                            );\n                            prev_elms.remove();\n                        }\n\n                        // Put tiles below dropped tile in a new row below\n                        var next_elms = drop.nextAll();\n                        if (next_elms.length > 0) {\n                            _row.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                next_elms.clone(true).mosaicAddDrag(),\n                                            ),\n                                    ),\n                            );\n                            next_elms.remove();\n                        }\n\n                        // Resize current column\n                        _col.removeClass(self.layout.widthClasses.join(\" \")).addClass(\n                            \"col\",\n                        );\n\n                        // Create column with dragged tile in it\n                        if (dir === \"left\") {\n                            drop.parent().before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(dropped_tile),\n                            );\n                        } else {\n                            drop.parent().after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(dropped_tile),\n                            );\n                        }\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n\n                        // Dropped inside column\n                    } else {\n                        // Create new column\n                        if (dir === \"left\") {\n                            _col.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(dropped_tile),\n                            );\n                        } else {\n                            _col.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(dropped_tile),\n                            );\n                        }\n\n                        // Resize columns\n                        _row.mosaicSetColumnSizes();\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n                    }\n                }\n            }\n\n            // Remove dragging class from content\n            obj.removeClass(\n                \"mosaic-panel-dragging mosaic-panel-dragging-copy mosaic-panel-dragging-unique mosaic-panel-dragging-new inner-subcolumn\",\n            );\n\n            // Remove remaining empty rows\n            self.mosaic.panels.find(\".mosaic-grid-row:not(:has(.mosaic-tile))\").remove();\n            self.mosaic.panels.find(\".mosaic-empty-row\").remove();\n\n            // Cleanup original row\n            original_row.mosaicCleanupRow();\n\n            // Add empty rows\n            self.mosaic.panels.mosaicAddEmptyRows();\n\n            // re-initialize events\n            self.init_events();\n\n            // Select new tile and make it draggable\n            if ((new_tile || copy) && dropped_tile.length > 0) {\n                dropped_tile.mosaicAddDrag();\n                if (!dropped_tile.data(\"mosaic-tile\")) {\n                    return;\n                }\n                await dropped_tile.data(\"mosaic-tile\").initializeContent(new_tile, copy);\n                dropped_tile.data(\"mosaic-tile\").select();\n            }\n        };\n\n        /**\n         * Set the sizes of the column\n         *\n         * @id jQuery.mosaicSetColumnSizes\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetColumnSizes = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Resize columns in the row\n                var column_sizes = [];\n                var $gridCells = $(this).children(\".mosaic-grid-cell\");\n                var nr_of_columns = $gridCells.length;\n                var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                // This will reset the width classes - it will automatically set the widths\n\n                $gridCells.each(function (idx) {\n                    $(this).removeClass(width_css_classes);\n\n                    var col_size = Math.floor(12 / nr_of_columns);\n                    var col_size_last = 12 - col_size * (nr_of_columns - 1);\n\n                    for (var j = 0; j < nr_of_columns; j++) {\n                        if (j === nr_of_columns - 1) {\n                            col_size = col_size_last;\n                        }\n                        if (idx === j) {\n                            column_sizes.push(col_size);\n                            $(this).addClass(\"col\");\n                        }\n                    }\n                });\n\n                $(this).data(\"column_sizes\", column_sizes);\n            });\n        };\n\n        /**\n         * Add new resize handlers\n         *\n         * @id jQuery.mosaicSetResizeHandles\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetResizeHandles = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Remove resize handles\n                $(this).children(\".mosaic-resize-handle\").remove();\n\n                if ([\"mosaic-fixed-row\", \"mosaic-empty-row\"].filter(cls => this.classList.contains(cls)).length) {\n                    // no resize handles for empty or fixed rows\n                    return;\n                }\n\n                // Check number of columns\n                var grid_cells = $(this).children(\".mosaic-grid-cell\");\n                var nr_of_columns = grid_cells.length;\n\n                if (nr_of_columns <= 12) {\n                    var column_sizes = [];\n                    var zero_count = 0;\n                    var col_sum = 0;\n                    var col_size = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        col_size = GetColSizeByColClass(\n                            self.getWidthClass(grid_cells[i]),\n                        );\n                        column_sizes.push(col_size);\n                        col_sum = col_sum + col_size;\n                        if (col_size === 0) {\n                            zero_count = zero_count + 1;\n                        }\n                    }\n\n                    // count \"auto-size\" columns with class \".col\" and\n                    // calculate width equally.\n                    // NOTE: This requires extra logic in case of 5 columns.\n                    // See the \".toFixed(1)\" below because of floating point\n                    // issues with 12 / 5 * 3\n                    var zero_col = 0;\n                    if (zero_count) {\n                        zero_col = (12 - col_sum) / zero_count;\n                    }\n\n                    var resize_col_size = 0;\n                    col_size = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        col_size = column_sizes[i] ? column_sizes[i] : zero_col;\n                        resize_col_size = resize_col_size + col_size;\n\n                        $(this).append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-handle mosaic-resize-handle-${i + 1\n                                    } mosaic-resize-${(nr_of_columns === 5) ? resize_col_size.toFixed(1).replace(\".0\", \"\") : resize_col_size}`,\n                                )\n                                .data(\"resize_handle_index\", i),\n                        );\n\n                        // set counted size to cell data\n                        $(grid_cells[i]).data(\"col_size\", col_size);\n                    }\n                }\n\n                // Mouse down handler on resize handle\n                $(this)\n                    .children(\".mosaic-resize-handle\")\n                    .off(\"mousedown\")\n                    .on(\"mousedown\", function (/* e */) {\n                        if ($(\".mosaic-helper-tile-new\").length > 0) {\n                            // do not resize when we place a new tile\n                            return;\n                        }\n                        var $currRow = $(this).parent();\n                        var $mosaicGridCellChildren = $currRow.children(\".mosaic-grid-cell\");\n\n                        if ($mosaicGridCellChildren.length > 12) {\n                            return;\n                        }\n                        var col_size_sum = 0;\n                        var column_sizes = [];\n\n                        $mosaicGridCellChildren.each(function () {\n                            var col_size = $(this).data(\"col_size\"); // get computed size of the column\n                            column_sizes.push(col_size);\n\n                            var placeholder = $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-placeholder col-${col_size} mosaic-resize-${col_size_sum}`,\n                                )\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\"))\n                                        .addClass(\n                                            \"mosaic-resize-placeholder-inner-border\",\n                                        )\n                                        .append(\n                                            $(mosaic_doc.createElement(\"div\"))\n                                                .addClass(\"info\")\n                                                .html(col_size),\n                                        ),\n                                );\n\n                            // Add placeholder\n                            $currRow.append(placeholder);\n\n                            // summarize column sizes for placeholder classes\n                            col_size_sum += col_size;\n                        });\n\n                        // Get resize handle index\n                        var resize_handle_index = self.getResizeHandleClassId(this);\n                        // calculate resize helper position\n                        var resize_handle_index_size = column_sizes.reduce((a, b, i) => i <= resize_handle_index ? a + b : a, 0);\n\n                        // Add helper\n                        var $helper = $(\"<div />\")\n                            .addClass(\n                                \"mosaic-resize-handle mosaic-resize-handle-helper\"\n                            )\n                            .addClass(\n                                `mosaic-resize-${resize_handle_index_size}`\n                            )\n                            .data(\"row_width\", $currRow.width())\n                            .data(\"resize_handle_index\", resize_handle_index);\n\n                        // save array as DOM attribute\n                        $helper[0][\"column_sizes\"] = column_sizes;\n\n                        $currRow.append($helper);\n\n                        // Set resizing state\n                        $(this)\n                            .parents(\"[data-panel]\")\n                            .addClass(\"mosaic-panel-resizing\");\n                        $currRow.addClass(\"mosaic-row-resizing\");\n                        $(\".mosaic-selected-tile\", mosaic_doc)\n                            .children(\".mosaic-tile-content\")\n                            .trigger(\"blur\");\n\n                        log.debug(\"------------------resize-handle(click)--------------------\")\n                        log.debug(`resize_handle_index: ${resize_handle_index}`)\n                        log.debug(`resize_handle_index_size: ${resize_handle_index_size}`)\n                        log.debug(`row_width: ${$currRow.width()}`)\n                        log.debug(`column_sizes: ${column_sizes}`)\n\n                        // Prevent drag event\n                        return false;\n                    });\n            });\n        };\n\n        /**\n         * Cleanup row after tiles added or removed from the row\n         *\n         * @id jQuery.mosaicCleanupRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicCleanupRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Get original row\n                var original_row = $(this);\n\n                // Remove empty columns\n                original_row.children(\".mosaic-grid-cell\").each(function () {\n                    if ($(this).children().length === 0) {\n                        $(this).remove();\n\n                        // Resize columns\n                        original_row.mosaicSetColumnSizes();\n                    }\n                });\n\n                // Remove row if no tiles inside\n                if (original_row.find(\".mosaic-tile\").length === 0) {\n                    var del_row = original_row;\n\n                    // Check if next row available\n                    if (original_row.nextAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.next(\".mosaic-grid-row\");\n\n                        // Check if prev row available\n                    } else if (original_row.prevAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.prev(\".mosaic-grid-row\");\n\n                        // This is the last row\n                    } else {\n                        original_row.remove();\n                        return;\n                    }\n\n                    // Remove current row\n                    del_row.remove();\n                }\n\n                // Set resize handles\n                original_row.mosaicSetResizeHandles();\n            });\n        };\n\n        /**\n         * Get the direction based on the tile size and relative x and y coords of the cursor\n         *\n         * @id jQuery.mosaicGetDirection\n         * @param {Object} e Event object\n         * @return {String} Direction of the cursor relative to the tile\n         */\n        $.fn.mosaicGetDirection = function (e) {\n            // Calculate x, y, width and height\n            var width = parseFloat($(this).width());\n            var height = parseFloat($(this).height());\n            var x = parseFloat(e.pageX - $(this).offset().left - width / 2);\n            var y = parseFloat(e.pageY - $(this).offset().top - height / 2);\n            var halfwidth = width / 2;\n            var halfheight = height / 2;\n\n            // If left of center\n            if (x < 0) {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (-1 * halfwidth) / (-1 * halfheight)) {\n                        return \"top\";\n                    } else {\n                        return \"left\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < (-1 * halfwidth) / halfheight) {\n                        return \"left\";\n                    } else {\n                        return \"bottom\";\n                    }\n                }\n\n                // Right of center\n            } else {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (1 * halfwidth) / (-1 * halfheight)) {\n                        return \"right\";\n                    } else {\n                        return \"top\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < halfwidth / halfheight) {\n                        return \"bottom\";\n                    } else {\n                        return \"right\";\n                    }\n                }\n            }\n        };\n    }\n}\n\nvar AddResetAnchor = function ($tileSideTools, cols) {\n    var reset = document.createElement(\"a\");\n    var cols_str = typeof cols === \"undefined\" ? \"\" : \" (\" + cols + \")\";\n    reset.href = \"javascript:\";\n    reset.textContent = \"Reset\" + cols_str;\n    $(reset).on(\"click\", { el: $tileSideTools }, function (e) {\n        e.preventDefault();\n\n        e.data.el\n            .closest(\".mosaic-grid-cell\")\n            .removeClass(\n                \"col-1 col-2 col-3 col-4 col-5 col-6 col-7 col-8 col-9 col-10 col-11 col-12\",\n            )\n            .addClass(\"col\");\n\n        e.data.el.closest(\".mosaic-grid-row\").mosaicSetResizeHandles();\n\n        $(e.target).parent().remove();\n    });\n    return reset;\n};\n\n/**\n * Get a list of percentage steps for each column in the grid\n *\n * @id GetGridPercentList\n * @return {Array} List of percent steps of the width class\n */\nfunction GetGridPercentList() {\n    var low = 0,\n        high = 100,\n        grid = 12,\n        grid_percent = [];\n    var step = 100 / grid;\n    var a = low,\n        b = high - 1; /* fix the last step in the loop: -1 */\n    while (a < b) {\n        grid_percent.push(Math.round((a += step)));\n    }\n\n    return grid_percent;\n}\n\n/**\n * Get the name of the width class of the given integer\n *\n * @id GetWidthClassByColSize\n * @param {Integer} col_size Bootstrap col width id\n * @return {String} Classname of the width class of the given integer\n */\nfunction GetWidthClassByColSize(col_size) {\n    if (col_size) {\n        return \"col-\" + col_size;\n    }\n\n    // Fallback\n    return \"col\";\n}\n\n/**\n * Get the name of the position class of the given integer\n *\n * @id GetColSizeByColClass\n * @param {String} Classname of the position class\n * @return {Integer} col_size Bootstrap col width id\n */\nfunction GetColSizeByColClass(col_class, prefix) {\n    prefix = prefix || \"col-\";\n    return parseInt(col_class.replace(prefix, \"\")) || 0;\n}\n\n/**\n * Get the bootstrap col width id by width size\n *\n * @id GetBootstrapColByPercent\n * @param {Integer} width Percentage of the column position\n * @return {Integer} Bootstrap col width id of the given integer\n */\nfunction GetBootstrapColByPercent(width) {\n    var grid_percent = GetGridPercentList();\n    let cw_idx = 12;\n    grid_percent.forEach((perc, idx) => {\n        if (perc == width) {\n            cw_idx = idx + 1;\n        }\n    })\n    return cw_idx;\n}\n"],"names":["log","logging","getLogger","LayoutManager","constructor","mosaic","this","layout","widthClasses","resizeClasses","resizeHandleClasses","getWidthClass","e","cls","classList","contains","getResizeHandleClassId","handleIdx","forEach","idx","addAppTileHTML","type","response","url","value","getDomTreeFromHtml","addHeadTags","addTile","find","html","tileUrl","self","panels","addClass","add_helper","document","createElement","add","innerHTML","replace","append","helper","width","each","$","tile","Tile","initialize","cacheHtml","scanRegistry","copyTile","orig_tile","orig_tile_inst","tile_type","getType","removeClass","orig_parent","closest","copy_tile_id","mosaic_utils","generate_uid","$copy_tile_helper","getHtmlContent","save","getConfig","orig_tile_data","serialize","deserialize","$el","getDefaultValue","tile_config","start","end","name","default_value","widget","id","attr","val","label","getPageContent","exportLayout","getLayoutRow","obj","body","querySelectorAll","length","getAttribute","cell","children","child","getHtmlBody","panel","dataset","maxColumns","row","options","saveLayoutToForm","$customLayout","hasContentLayout","init_events","_document","_panels","console","_panel","events","add_event_listener","keyCode","async","data","blur","focused_tile","activeElement","focus","querySelector","cpy_class","remove","Date","getTime","original_tile","$orig_row","parent","mosaicCleanupRow","divider","trigger","parents","parseInt","elm","target","srcElement","new_tile","mosaicHandleDragEnd","el","toolbar","SelectedTileChange","DocumentMousemove","$new_tile_helper","offset","css","pageY","top","pageX","left","$helper","cur_snap_offset","$row","resize_handle_index","mouse_x","parseFloat","getComputedStyle","paddingLeft","mouse_percentage","Math","round","snap","snap_offset","GetGridPercentList","perc","abs","snap_size","grid_percent","cw_idx","GetBootstrapColByPercent","column_sizes","column_sizes_sum","reduce","a","b","col_size_before","slice","col_size_after","col_size_max","new_column_size","new_column_sizes","i","push","_before","_last_size","debug","col_size_sum","resize_css_classes","join","width_css_classes","col_size","col_size_class","GetWidthClassByColSize","css_width_classes","hasClass","first","$tileSideTools","AddResetAnchor","mosaicSetResizeHandles","$tile","select","TileMousemove","dir","mosaicGetDirection","filter","height","applyCustomCss","parentNode","base_css","customCss","setAttribute","CustomCSSOnDblClick","custom_classes","Array","from","indexOf","row_input","gridrow","initialize_panels","initJQueryHelpers","biggestPanel","$panel","tileNode","mosaicAddDrag","mosaicAddEmptyRows","pWidth","offsetWidth","firstTile","mosaic_doc","mosaicAddMouseMoveEmptyRow","on","create_empty_row","add_class","prepend","empty_row","after","drag_start_ts","drag_start","DragMove","event","DragStop","clearTimeout","remove_event_listener","DragStart","originaltile","clone","tile_drag_handle","button","setTimeout","tile_move_btn","copy","drop","parentElement","_dir","original_row","dropped_tile","fixup_classes","_t","off","pos","before","_col","_row","prev_elms","prevAll","get","reverse","next_elms","nextAll","mosaicSetColumnSizes","initializeContent","$gridCells","nr_of_columns","floor","col_size_last","j","grid_cells","zero_count","col_sum","GetColSizeByColClass","zero_col","resize_col_size","toFixed","$currRow","$mosaicGridCellChildren","placeholder","resize_handle_index_size","del_row","next","prev","x","y","halfwidth","halfheight","cols","reset","cols_str","href","textContent","preventDefault","step","high","col_class","prefix"],"sourceRoot":""}