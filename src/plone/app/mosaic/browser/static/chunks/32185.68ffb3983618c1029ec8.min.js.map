{"version":3,"file":"chunks/32185.68ffb3983618c1029ec8.min.js","mappings":"mGAQC,WACG,aAEA,IAAIA,EAAWC,QAAQC,KAAKC,MAAMC,QAAQ,yBActCC,EAAS,SAAUC,GACrB,OAAO,SAAUC,GACf,OAbEC,SADiBC,EAcLF,IAZN,OAANE,EACK,OACQ,WAAND,IAAmBE,MAAMC,UAAUC,cAAcH,IAAMA,EAAEI,aAAsC,UAAvBJ,EAAEI,YAAYC,MACxF,QACQ,WAANN,IAAmBO,OAAOJ,UAAUC,cAAcH,IAAMA,EAAEI,aAAsC,WAAvBJ,EAAEI,YAAYC,MACzF,SAEAN,KAKkBF,EAdhB,IAAUG,EACjBD,CAcJ,CACF,EACIQ,EAAWX,EAAO,UAClBY,EAAUZ,EAAO,SAEjBa,EAAWjB,QAAQC,KAAKC,MAAMC,QAAQ,wBAEtCe,EAAWlB,QAAQC,KAAKC,MAAMC,QAAQ,yBAEtCgB,EAAWnB,QAAQC,KAAKC,MAAMC,QAAQ,eAEtCiB,EAASpB,QAAQC,KAAKC,MAAMC,QAAQ,sBAQpCkB,EAAuB,SAAUC,GACnC,OAAOA,EAAOC,SAAS,+BACzB,EAOIC,EAAe,SAAUF,GAC3B,OAAOA,EAAOC,SAAS,mBACzB,EAYIE,EAAahB,MAAMC,UAAUgB,KAoB7BC,EAAO,SAAUC,EAAIC,GACvB,OAXY,SAAUD,GAEtB,IADA,IAAIE,EAAI,GACCC,EAAI,EAAGC,EAAMJ,EAAGK,OAAQF,EAAIC,IAAOD,EAAG,CAC7C,IAAKf,EAAQY,EAAGG,IACd,MAAM,IAAIG,MAAM,oBAAsBH,EAAI,6BAA+BH,GAE3EH,EAAWU,MAAML,EAAGF,EAAGG,GACzB,CACA,OAAOD,CACT,CAESM,CApBC,SAAUR,EAAIC,GAGtB,IAFA,IAAIG,EAAMJ,EAAGK,OACTH,EAAI,IAAIrB,MAAMuB,GACTD,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CAC5B,IAAIvB,EAAIoB,EAAGG,GACXD,EAAEC,GAAKF,EAAErB,EAAGuB,EACd,CACA,OAAOD,CACT,CAYiBO,CAAIT,EAAIC,GACzB,EAkCIS,EAAsB,gDAkBtBC,EAAgB,SAAUC,GAC5B,OAAIzB,EAASyB,GACJ,SAAUlC,GACf,OAAkC,IAA3BA,EAAMmC,QAAQD,EACvB,EACSA,aAAkBE,OACpB,SAAUpC,GACf,OAAOkC,EAAOG,KAAKrC,EACrB,EAEKkC,CACT,EAOII,EAAe,SAAUtB,EAAQuB,EAAKC,GACxC,IAAIC,EAAY,GACZC,EAAiB,CAAC,EAClBC,EAAS,SAAUC,EAAYC,GACjC,IAA4BC,EAvCEC,EAC5BC,EAsCEC,EAAOL,EAAWK,KAEtB,GAzC8BF,EAwCLE,EAvCvBD,EAAcnC,EAASmC,YACvBvC,EAASsC,KACXA,EAAMA,EAAIG,QAAQ,IAAMF,EAAa,IAAIE,QAAQ,IAAMF,EAAa,MAqCpEC,EAnCKF,IAoCSP,EAAWS,EAAMJ,KAlCZ,SAAU7B,EAAQiC,GACvC,IAAIE,EAzEQ,SAAUnC,GACtB,IAAImC,EAAOnC,EAAOC,SAAS,QAC3B,OAAgB,IAATkC,IAAiBA,GAAQ,QAClC,CAsEaC,CAAQpC,GACnB,GAAImC,EAAM,CACR,IAAIE,EAvES,SAAUrC,GACzB,OAAOA,EAAOC,SAAS,WACzB,CAqEsBqC,CAAWtC,GACzBuC,EAAUF,EAAcrC,EAAOwC,gBAAgBC,WAAWJ,GAAezC,EAAS8C,QAAU,aAAeP,EAC3GQ,EAAqB/C,EAAS8C,QAAU,kBAC5C,OAAOT,IAASM,EAAU,YAAcvC,EAAO4C,OAAS,UAAY,IAAM,aAAoD,IAAtCX,EAAKd,QAAQwB,EACvG,CACA,OAAO,CACT,CAyBgDE,CAAiB7C,EAAQiC,GAArE,CAGAnC,EAAOgD,KAAKlB,EAAWmB,SAAS,SAAUnB,GACxCD,EAAOC,GAAY,EACrB,IACA,IACEE,EAAQF,EAAWoB,UAAYpB,EAAWE,KAC5C,CAAE,MAAOmB,GACT,CACAnD,EAAOgD,KAAKhB,GAAO,SAAUoB,GACPA,EAtBZtB,WAuBND,EAAOuB,EAAQtB,YAAY,GArBf,SAAUuB,GAC5B,OAAOA,EAAKC,YACd,CAoBiBC,CAAcH,IACvBpD,EAAOgD,KAAKI,EAAQE,aAAaE,MAAM,MAAM,SAAUC,GACrD9B,EAAUrB,KAAKN,EAAO0D,KAAKD,GAC7B,GAEJ,GAhBA,CAiBF,EACAzD,EAAOgD,KAAK9C,EAAOyD,YAAY,SAAU1B,GACvCL,EAAeK,IAAO,CACxB,IACKP,IACHA,EAAa,SAAUS,EAAMJ,GAC3B,OAAOA,GAAYH,EAAeO,EACpC,GAEF,IACEnC,EAAOgD,KAAKvB,EAAImC,aAAa,SAAU9B,GACrCD,EAAOC,EACT,GACF,CAAE,MAAOqB,GACT,CACA,OAAOxB,CACT,EACIkC,EAAiC,SAAU3D,EAAQoD,GACrD,IAAIQ,EACAL,EAAW,2CAA2CM,KAAKT,GAC/D,GAAKG,EAAL,CAGA,IAAIO,EAAcP,EAAS,GACvBQ,EAAUR,EAAS,GAAGS,OAAO,GAAGV,MAAM,KAAKW,KAAK,KAChDC,EAAyBpE,EAAOqE,QAAQ,SAsB5C,OArBIZ,EAAS,IACXK,EAAS,CAAEQ,MAAOhB,GACdpD,EAAOqE,OAAOC,uBAAuBR,GACvCF,EAAOW,MAAQT,EACN9D,EAAOqE,OAAOG,mBAAmBV,IAAgBI,EAAuBJ,EAAYW,eAC7Fb,EAAOL,SAAWO,EAElBF,EAAOhB,OAASkB,GAETP,EAAS,KAClBK,EAAS,CACPhB,OAAQ,OACRwB,MAAOhB,EAAaY,OAAO,GAC3BD,QAASA,KAGsB,IA5LZ,SAAU/D,GACjC,OAAOA,EAAOC,SAAS,0BACzB,CA0LMyE,CAAmB1E,GACrB4D,EAAOG,QAAUA,EAEjBH,EAAOe,WAAa,CAAEC,MAAOb,GAExBH,CAzBP,CA0BF,EAeIiB,EAAkB,SAAU7E,EAAQ8E,GACtC,OAAiB,OAAVA,IAAoD,IA/MjC,SAAU9E,GACpC,OAAOA,EAAOC,SAAS,sBACzB,CA6M2B8E,CAAsB/E,EACjD,EAwBIgF,EAAQ,SAAUhF,GACpBA,EAAOiF,GAAG,QAAQ,WAChB,IAAIC,EAxLO,WACb,IAAIC,EAAiB,GACjBC,EAAa,GACbC,EAAS,CAAC,EAsBd,MAAO,CACLC,eAtBmB,SAAUC,EAAYC,GACrCH,EAAOE,GACTF,EAAOE,GAAYnF,KAAKoF,IAExBJ,EAAWhF,KAAKmF,GAChBF,EAAOE,GAAc,CAACC,GAE1B,EAgBEC,QAfY,SAAUD,GACtBL,EAAe/E,KAAKoF,EACtB,EAcEE,UAbc,WAQd,OAPiBrF,EAAK+E,GAAY,SAAUO,GAC1C,IAAIC,EAAQP,EAAOM,GACnB,OAAwB,IAAjBC,EAAMjF,OAAe,GAAK,CAAC,CAC9ByD,MAAOuB,EACPC,MAAOA,GAEb,IACkBC,OAAOV,EAC3B,EAMF,CA0JgBW,GACRC,EAA0B,CAAC,EAC3BC,EAAiB/E,EAtOD,SAAUjB,GAChC,OAAOA,EAAOC,SAAS,4BACzB,CAoOuCgG,CAAkBjG,IACjDqF,EAxCuB,SAAUA,GACvC,OAAOvF,EAAOiB,IAAIsE,GAAQ,SAAUP,GAClC,OAAOhF,EAAOoG,OAAO,CAAC,EAAGpB,EAAO,CAC9BqB,SAAUrB,EACVrD,UAAW,CAAC,EACZP,OAAQD,EAAc6D,EAAM5D,SAEhC,GACF,CAgCiBkF,CApOE,SAAUpG,GAC3B,OAAOA,EAAOC,SAAS,mBACzB,CAkO0CoG,CAAarG,IAC/CsG,EAAkB,SAAU/C,EAAUuB,GACxC,GA9BiB,SAAU9E,EAAQuD,EAAUuB,EAAOiB,GACxD,QAASlB,EAAgB7E,EAAQ8E,GAASvB,KAAYwC,EAA0BxC,KAAYuB,EAAMrD,UACpG,CA4BU8E,CAAiBvG,EAAQuD,EAAUuB,EAAOiB,GAA0B,EA3BrD,SAAU/F,EAAQuD,EAAUuB,EAAOiB,GACtDlB,EAAgB7E,EAAQ8E,GAC1BiB,EAAwBxC,IAAY,EAEpCuB,EAAMrD,UAAU8B,IAAY,CAEhC,CAsBQiD,CAAmBxG,EAAQuD,EAAUuB,EAAOiB,GAC5C,IAAInC,EAtBkB,SAAU5D,EAAQyG,EAAQlD,EAAUuB,GAWhE,OATIA,GAASA,EAAM4B,mBACG5B,EAAM4B,mBACjB3G,EAAqBC,GACVD,EAAqBC,GAErB,WAClB,OAAO2D,EAA+B3D,EAAQuD,EAChD,GAEuBoD,KAAKF,EAAQlD,EAAUuB,EAClD,CAUqB8B,CAAwB5G,EAAQA,EAAO6G,QAAQC,UAAWvD,EAAUuB,GACjF,GAAIlB,EAAQ,CACV,IAAImD,EAAanD,EAAOrE,MAAQI,EAASqH,IAAIC,WAE7C,OADAjH,EAAOkH,UAAUC,SAASJ,EAAYnD,GAC/B,CACLQ,MAAOR,EAAOQ,MACdR,OAAQmD,EAEZ,CACF,CACA,OAAO,IACT,EACAjH,EAAOgD,KAAKxB,EAAatB,EAAQA,EAAOoH,SAAUnG,EA9OlC,SAAUjB,GAC5B,OAAOA,EAAOC,SAAS,wBACzB,CA4OoEoH,CAAcrH,MAAW,SAAUuD,GACjG,IAAKvC,EAAoBK,KAAKkC,MACvByC,GAAkBA,EAAezC,IAAW,CAC/C,IAAI+D,EAhEY,SAAUjC,EAAQ9B,GAC1C,OAAOzD,EAAOyH,KAAKlC,GAAQ,SAAUP,GACnC,OAAQA,EAAM5D,QAAU4D,EAAM5D,OAAOqC,EACvC,GACF,CA4D+BiE,CAAoBnC,EAAQ9B,GACjD,GAAI+D,EAAe3G,OAAS,EAC1Bb,EAAOgD,KAAKwE,GAAgB,SAAUxC,GACpC,IAAI2C,EAAWnB,EAAgB/C,EAAUuB,GACrC2C,GACFvC,EAAMI,eAAeR,EAAMV,MAAOqD,EAEtC,QACK,CACL,IAAIA,EAAWnB,EAAgB/C,EAAU,MACrCkE,GACFvC,EAAMO,QAAQgC,EAElB,CACF,CAEJ,IACA,IAAI7B,EAAQV,EAAMQ,YAClB1F,EAAO0H,KAAK,wBAAyB,CACnC9B,MAAOA,EACP1D,SAAUhC,EAAaF,IAE3B,GACF,EAUEvB,EAASkJ,IAAI,aAAa,SAAU3H,GAElC,OADAgF,EAAMhF,GATA,SAAUA,GAIlB,MAAO,CAAE4G,wBAHqB,SAAUxD,GACtC,OAAOO,EAA+B3D,EAAQoD,EAChD,EAEF,CAKWwE,CAAI5H,EACb,GAKN,CA7UA,E","sources":["webpack://plone-mosaic/./node_modules/tinymce/plugins/importcss/plugin.js"],"sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.7 (2022-12-06)\n */\n(function () {\n    'use strict';\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var typeOf = function (x) {\n      var t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      } else if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isArray = isType('array');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var shouldMergeClasses = function (editor) {\n      return editor.getParam('importcss_merge_classes');\n    };\n    var shouldImportExclusive = function (editor) {\n      return editor.getParam('importcss_exclusive');\n    };\n    var getSelectorConverter = function (editor) {\n      return editor.getParam('importcss_selector_converter');\n    };\n    var getSelectorFilter = function (editor) {\n      return editor.getParam('importcss_selector_filter');\n    };\n    var getCssGroups = function (editor) {\n      return editor.getParam('importcss_groups');\n    };\n    var shouldAppend = function (editor) {\n      return editor.getParam('importcss_append');\n    };\n    var getFileFilter = function (editor) {\n      return editor.getParam('importcss_file_filter');\n    };\n    var getSkin = function (editor) {\n      var skin = editor.getParam('skin');\n      return skin !== false ? skin || 'oxide' : false;\n    };\n    var getSkinUrl = function (editor) {\n      return editor.getParam('skin_url');\n    };\n\n    var nativePush = Array.prototype.push;\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      return flatten(map(xs, f));\n    };\n\n    var generate = function () {\n      var ungroupedOrder = [];\n      var groupOrder = [];\n      var groups = {};\n      var addItemToGroup = function (groupTitle, itemInfo) {\n        if (groups[groupTitle]) {\n          groups[groupTitle].push(itemInfo);\n        } else {\n          groupOrder.push(groupTitle);\n          groups[groupTitle] = [itemInfo];\n        }\n      };\n      var addItem = function (itemInfo) {\n        ungroupedOrder.push(itemInfo);\n      };\n      var toFormats = function () {\n        var groupItems = bind(groupOrder, function (g) {\n          var items = groups[g];\n          return items.length === 0 ? [] : [{\n              title: g,\n              items: items\n            }];\n        });\n        return groupItems.concat(ungroupedOrder);\n      };\n      return {\n        addItemToGroup: addItemToGroup,\n        addItem: addItem,\n        toFormats: toFormats\n      };\n    };\n\n    var internalEditorStyle = /^\\.(?:ephox|tiny-pageembed|mce)(?:[.-]+\\w+)+$/;\n    var removeCacheSuffix = function (url) {\n      var cacheSuffix = global$1.cacheSuffix;\n      if (isString(url)) {\n        url = url.replace('?' + cacheSuffix, '').replace('&' + cacheSuffix, '');\n      }\n      return url;\n    };\n    var isSkinContentCss = function (editor, href) {\n      var skin = getSkin(editor);\n      if (skin) {\n        var skinUrlBase = getSkinUrl(editor);\n        var skinUrl = skinUrlBase ? editor.documentBaseURI.toAbsolute(skinUrlBase) : global$2.baseURL + '/skins/ui/' + skin;\n        var contentSkinUrlPart = global$2.baseURL + '/skins/content/';\n        return href === skinUrl + '/content' + (editor.inline ? '.inline' : '') + '.min.css' || href.indexOf(contentSkinUrlPart) !== -1;\n      }\n      return false;\n    };\n    var compileFilter = function (filter) {\n      if (isString(filter)) {\n        return function (value) {\n          return value.indexOf(filter) !== -1;\n        };\n      } else if (filter instanceof RegExp) {\n        return function (value) {\n          return filter.test(value);\n        };\n      }\n      return filter;\n    };\n    var isCssImportRule = function (rule) {\n      return rule.styleSheet;\n    };\n    var isCssPageRule = function (rule) {\n      return rule.selectorText;\n    };\n    var getSelectors = function (editor, doc, fileFilter) {\n      var selectors = [];\n      var contentCSSUrls = {};\n      var append = function (styleSheet, imported) {\n        var href = styleSheet.href, rules;\n        href = removeCacheSuffix(href);\n        if (!href || !fileFilter(href, imported) || isSkinContentCss(editor, href)) {\n          return;\n        }\n        global.each(styleSheet.imports, function (styleSheet) {\n          append(styleSheet, true);\n        });\n        try {\n          rules = styleSheet.cssRules || styleSheet.rules;\n        } catch (e) {\n        }\n        global.each(rules, function (cssRule) {\n          if (isCssImportRule(cssRule)) {\n            append(cssRule.styleSheet, true);\n          } else if (isCssPageRule(cssRule)) {\n            global.each(cssRule.selectorText.split(','), function (selector) {\n              selectors.push(global.trim(selector));\n            });\n          }\n        });\n      };\n      global.each(editor.contentCSS, function (url) {\n        contentCSSUrls[url] = true;\n      });\n      if (!fileFilter) {\n        fileFilter = function (href, imported) {\n          return imported || contentCSSUrls[href];\n        };\n      }\n      try {\n        global.each(doc.styleSheets, function (styleSheet) {\n          append(styleSheet);\n        });\n      } catch (e) {\n      }\n      return selectors;\n    };\n    var defaultConvertSelectorToFormat = function (editor, selectorText) {\n      var format;\n      var selector = /^(?:([a-z0-9\\-_]+))?(\\.[a-z0-9_\\-\\.]+)$/i.exec(selectorText);\n      if (!selector) {\n        return;\n      }\n      var elementName = selector[1];\n      var classes = selector[2].substr(1).split('.').join(' ');\n      var inlineSelectorElements = global.makeMap('a,img');\n      if (selector[1]) {\n        format = { title: selectorText };\n        if (editor.schema.getTextBlockElements()[elementName]) {\n          format.block = elementName;\n        } else if (editor.schema.getBlockElements()[elementName] || inlineSelectorElements[elementName.toLowerCase()]) {\n          format.selector = elementName;\n        } else {\n          format.inline = elementName;\n        }\n      } else if (selector[2]) {\n        format = {\n          inline: 'span',\n          title: selectorText.substr(1),\n          classes: classes\n        };\n      }\n      if (shouldMergeClasses(editor) !== false) {\n        format.classes = classes;\n      } else {\n        format.attributes = { class: classes };\n      }\n      return format;\n    };\n    var getGroupsBySelector = function (groups, selector) {\n      return global.grep(groups, function (group) {\n        return !group.filter || group.filter(selector);\n      });\n    };\n    var compileUserDefinedGroups = function (groups) {\n      return global.map(groups, function (group) {\n        return global.extend({}, group, {\n          original: group,\n          selectors: {},\n          filter: compileFilter(group.filter)\n        });\n      });\n    };\n    var isExclusiveMode = function (editor, group) {\n      return group === null || shouldImportExclusive(editor) !== false;\n    };\n    var isUniqueSelector = function (editor, selector, group, globallyUniqueSelectors) {\n      return !(isExclusiveMode(editor, group) ? selector in globallyUniqueSelectors : selector in group.selectors);\n    };\n    var markUniqueSelector = function (editor, selector, group, globallyUniqueSelectors) {\n      if (isExclusiveMode(editor, group)) {\n        globallyUniqueSelectors[selector] = true;\n      } else {\n        group.selectors[selector] = true;\n      }\n    };\n    var convertSelectorToFormat = function (editor, plugin, selector, group) {\n      var selectorConverter;\n      if (group && group.selector_converter) {\n        selectorConverter = group.selector_converter;\n      } else if (getSelectorConverter(editor)) {\n        selectorConverter = getSelectorConverter(editor);\n      } else {\n        selectorConverter = function () {\n          return defaultConvertSelectorToFormat(editor, selector);\n        };\n      }\n      return selectorConverter.call(plugin, selector, group);\n    };\n    var setup = function (editor) {\n      editor.on('init', function () {\n        var model = generate();\n        var globallyUniqueSelectors = {};\n        var selectorFilter = compileFilter(getSelectorFilter(editor));\n        var groups = compileUserDefinedGroups(getCssGroups(editor));\n        var processSelector = function (selector, group) {\n          if (isUniqueSelector(editor, selector, group, globallyUniqueSelectors)) {\n            markUniqueSelector(editor, selector, group, globallyUniqueSelectors);\n            var format = convertSelectorToFormat(editor, editor.plugins.importcss, selector, group);\n            if (format) {\n              var formatName = format.name || global$3.DOM.uniqueId();\n              editor.formatter.register(formatName, format);\n              return {\n                title: format.title,\n                format: formatName\n              };\n            }\n          }\n          return null;\n        };\n        global.each(getSelectors(editor, editor.getDoc(), compileFilter(getFileFilter(editor))), function (selector) {\n          if (!internalEditorStyle.test(selector)) {\n            if (!selectorFilter || selectorFilter(selector)) {\n              var selectorGroups = getGroupsBySelector(groups, selector);\n              if (selectorGroups.length > 0) {\n                global.each(selectorGroups, function (group) {\n                  var menuItem = processSelector(selector, group);\n                  if (menuItem) {\n                    model.addItemToGroup(group.title, menuItem);\n                  }\n                });\n              } else {\n                var menuItem = processSelector(selector, null);\n                if (menuItem) {\n                  model.addItem(menuItem);\n                }\n              }\n            }\n          }\n        });\n        var items = model.toFormats();\n        editor.fire('addStyleModifications', {\n          items: items,\n          replace: !shouldAppend(editor)\n        });\n      });\n    };\n\n    var get = function (editor) {\n      var convertSelectorToFormat = function (selectorText) {\n        return defaultConvertSelectorToFormat(editor, selectorText);\n      };\n      return { convertSelectorToFormat: convertSelectorToFormat };\n    };\n\n    function Plugin () {\n      global$4.add('importcss', function (editor) {\n        setup(editor);\n        return get(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"],"names":["global$4","tinymce","util","Tools","resolve","isType","type","value","t","x","Array","prototype","isPrototypeOf","constructor","name","String","isString","isArray","global$3","global$2","global$1","global","getSelectorConverter","editor","getParam","shouldAppend","nativePush","push","bind","xs","f","r","i","len","length","Error","apply","flatten","map","internalEditorStyle","compileFilter","filter","indexOf","RegExp","test","getSelectors","doc","fileFilter","selectors","contentCSSUrls","append","styleSheet","imported","rules","url","cacheSuffix","href","replace","skin","getSkin","skinUrlBase","getSkinUrl","skinUrl","documentBaseURI","toAbsolute","baseURL","contentSkinUrlPart","inline","isSkinContentCss","each","imports","cssRules","e","cssRule","rule","selectorText","isCssPageRule","split","selector","trim","contentCSS","styleSheets","defaultConvertSelectorToFormat","format","exec","elementName","classes","substr","join","inlineSelectorElements","makeMap","title","schema","getTextBlockElements","block","getBlockElements","toLowerCase","shouldMergeClasses","attributes","class","isExclusiveMode","group","shouldImportExclusive","setup","on","model","ungroupedOrder","groupOrder","groups","addItemToGroup","groupTitle","itemInfo","addItem","toFormats","g","items","concat","generate","globallyUniqueSelectors","selectorFilter","getSelectorFilter","extend","original","compileUserDefinedGroups","getCssGroups","processSelector","isUniqueSelector","markUniqueSelector","plugin","selector_converter","call","convertSelectorToFormat","plugins","importcss","formatName","DOM","uniqueId","formatter","register","getDoc","getFileFilter","selectorGroups","grep","getGroupsBySelector","menuItem","fire","add","get"],"sourceRoot":""}