{"version":3,"file":"chunks/54518.b81edb29b16806eeeee3.min.js","mappings":"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","sources":["webpack://plone-mosaic/./node_modules/tinymce/plugins/spellchecker/plugin.js"],"sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.7 (2022-12-06)\n */\n(function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var hasProPlugin = function (editor) {\n      if (editor.hasPlugin('tinymcespellchecker', true)) {\n        if (typeof window.console !== 'undefined' && window.console.log) {\n          window.console.log('Spell Checker Pro is incompatible with Spell Checker plugin! ' + 'Remove \\'spellchecker\\' from the \\'plugins\\' option.');\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    var hasOwnProperty = Object.hasOwnProperty;\n    var isEmpty = function (r) {\n      for (var x in r) {\n        if (hasOwnProperty.call(r, x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var fireSpellcheckStart = function (editor) {\n      return editor.fire('SpellcheckStart');\n    };\n    var fireSpellcheckEnd = function (editor) {\n      return editor.fire('SpellcheckEnd');\n    };\n\n    var getLanguages = function (editor) {\n      var defaultLanguages = 'English=en,Danish=da,Dutch=nl,Finnish=fi,French=fr_FR,German=de,Italian=it,Polish=pl,Portuguese=pt_BR,Spanish=es,Swedish=sv';\n      return editor.getParam('spellchecker_languages', defaultLanguages);\n    };\n    var getLanguage = function (editor) {\n      var defaultLanguage = editor.getParam('language', 'en');\n      return editor.getParam('spellchecker_language', defaultLanguage);\n    };\n    var getRpcUrl = function (editor) {\n      return editor.getParam('spellchecker_rpc_url');\n    };\n    var getSpellcheckerCallback = function (editor) {\n      return editor.getParam('spellchecker_callback');\n    };\n    var getSpellcheckerWordcharPattern = function (editor) {\n      var defaultPattern = new RegExp('[^' + '\\\\s!\"#$%&()*+,-./:;<=>?@[\\\\]^_{|}`' + '\\xA7\\xA9\\xAB\\xAE\\xB1\\xB6\\xB7\\xB8\\xBB' + '\\xBC\\xBD\\xBE\\xBF\\xD7\\xF7\\xA4\\u201D\\u201C\\u201E\\xA0\\u2002\\u2003\\u2009' + ']+', 'g');\n      return editor.getParam('spellchecker_wordchar_pattern', defaultPattern);\n    };\n\n    var isContentEditableFalse = function (node) {\n      return node && node.nodeType === 1 && node.contentEditable === 'false';\n    };\n    var DomTextMatcher = function (node, editor) {\n      var m, matches = [];\n      var dom = editor.dom;\n      var blockElementsMap = editor.schema.getBlockElements();\n      var hiddenTextElementsMap = editor.schema.getWhiteSpaceElements();\n      var shortEndedElementsMap = editor.schema.getShortEndedElements();\n      var createMatch = function (m, data) {\n        if (!m[0]) {\n          throw new Error('findAndReplaceDOMText cannot handle zero-length matches');\n        }\n        return {\n          start: m.index,\n          end: m.index + m[0].length,\n          text: m[0],\n          data: data\n        };\n      };\n      var getText = function (node) {\n        if (node.nodeType === 3) {\n          return node.data;\n        }\n        if (hiddenTextElementsMap[node.nodeName] && !blockElementsMap[node.nodeName]) {\n          return '';\n        }\n        if (isContentEditableFalse(node)) {\n          return '\\n';\n        }\n        var txt = '';\n        if (blockElementsMap[node.nodeName] || shortEndedElementsMap[node.nodeName]) {\n          txt += '\\n';\n        }\n        if (node = node.firstChild) {\n          do {\n            txt += getText(node);\n          } while (node = node.nextSibling);\n        }\n        return txt;\n      };\n      var stepThroughMatches = function (node, matches, replaceFn) {\n        var startNode, endNode, startNodeIndex, endNodeIndex, innerNodes = [], atIndex = 0, curNode = node, matchLocation, matchIndex = 0;\n        matches = matches.slice(0);\n        matches.sort(function (a, b) {\n          return a.start - b.start;\n        });\n        matchLocation = matches.shift();\n        out:\n          while (true) {\n            if (blockElementsMap[curNode.nodeName] || shortEndedElementsMap[curNode.nodeName] || isContentEditableFalse(curNode)) {\n              atIndex++;\n            }\n            if (curNode.nodeType === 3) {\n              if (!endNode && curNode.length + atIndex >= matchLocation.end) {\n                endNode = curNode;\n                endNodeIndex = matchLocation.end - atIndex;\n              } else if (startNode) {\n                innerNodes.push(curNode);\n              }\n              if (!startNode && curNode.length + atIndex > matchLocation.start) {\n                startNode = curNode;\n                startNodeIndex = matchLocation.start - atIndex;\n              }\n              atIndex += curNode.length;\n            }\n            if (startNode && endNode) {\n              curNode = replaceFn({\n                startNode: startNode,\n                startNodeIndex: startNodeIndex,\n                endNode: endNode,\n                endNodeIndex: endNodeIndex,\n                innerNodes: innerNodes,\n                match: matchLocation.text,\n                matchIndex: matchIndex\n              });\n              atIndex -= endNode.length - endNodeIndex;\n              startNode = null;\n              endNode = null;\n              innerNodes = [];\n              matchLocation = matches.shift();\n              matchIndex++;\n              if (!matchLocation) {\n                break;\n              }\n            } else if ((!hiddenTextElementsMap[curNode.nodeName] || blockElementsMap[curNode.nodeName]) && curNode.firstChild) {\n              if (!isContentEditableFalse(curNode)) {\n                curNode = curNode.firstChild;\n                continue;\n              }\n            } else if (curNode.nextSibling) {\n              curNode = curNode.nextSibling;\n              continue;\n            }\n            while (true) {\n              if (curNode.nextSibling) {\n                curNode = curNode.nextSibling;\n                break;\n              } else if (curNode.parentNode !== node) {\n                curNode = curNode.parentNode;\n              } else {\n                break out;\n              }\n            }\n          }\n      };\n      var genReplacer = function (callback) {\n        var makeReplacementNode = function (fill, matchIndex) {\n          var match = matches[matchIndex];\n          if (!match.stencil) {\n            match.stencil = callback(match);\n          }\n          var clone = match.stencil.cloneNode(false);\n          clone.setAttribute('data-mce-index', '' + matchIndex);\n          if (fill) {\n            clone.appendChild(dom.doc.createTextNode(fill));\n          }\n          return clone;\n        };\n        return function (range) {\n          var before;\n          var after;\n          var parentNode;\n          var startNode = range.startNode;\n          var endNode = range.endNode;\n          var matchIndex = range.matchIndex;\n          var doc = dom.doc;\n          if (startNode === endNode) {\n            var node_1 = startNode;\n            parentNode = node_1.parentNode;\n            if (range.startNodeIndex > 0) {\n              before = doc.createTextNode(node_1.data.substring(0, range.startNodeIndex));\n              parentNode.insertBefore(before, node_1);\n            }\n            var el = makeReplacementNode(range.match, matchIndex);\n            parentNode.insertBefore(el, node_1);\n            if (range.endNodeIndex < node_1.length) {\n              after = doc.createTextNode(node_1.data.substring(range.endNodeIndex));\n              parentNode.insertBefore(after, node_1);\n            }\n            node_1.parentNode.removeChild(node_1);\n            return el;\n          }\n          before = doc.createTextNode(startNode.data.substring(0, range.startNodeIndex));\n          after = doc.createTextNode(endNode.data.substring(range.endNodeIndex));\n          var elA = makeReplacementNode(startNode.data.substring(range.startNodeIndex), matchIndex);\n          for (var i = 0, l = range.innerNodes.length; i < l; ++i) {\n            var innerNode = range.innerNodes[i];\n            var innerEl = makeReplacementNode(innerNode.data, matchIndex);\n            innerNode.parentNode.replaceChild(innerEl, innerNode);\n          }\n          var elB = makeReplacementNode(endNode.data.substring(0, range.endNodeIndex), matchIndex);\n          parentNode = startNode.parentNode;\n          parentNode.insertBefore(before, startNode);\n          parentNode.insertBefore(elA, startNode);\n          parentNode.removeChild(startNode);\n          parentNode = endNode.parentNode;\n          parentNode.insertBefore(elB, endNode);\n          parentNode.insertBefore(after, endNode);\n          parentNode.removeChild(endNode);\n          return elB;\n        };\n      };\n      var unwrapElement = function (element) {\n        var parentNode = element.parentNode;\n        while (element.childNodes.length > 0) {\n          parentNode.insertBefore(element.childNodes[0], element);\n        }\n        parentNode.removeChild(element);\n      };\n      var hasClass = function (elm) {\n        return elm.className.indexOf('mce-spellchecker-word') !== -1;\n      };\n      var getWrappersByIndex = function (index) {\n        var elements = node.getElementsByTagName('*'), wrappers = [];\n        index = typeof index === 'number' ? '' + index : null;\n        for (var i = 0; i < elements.length; i++) {\n          var element = elements[i], dataIndex = element.getAttribute('data-mce-index');\n          if (dataIndex !== null && dataIndex.length && hasClass(element)) {\n            if (dataIndex === index || index === null) {\n              wrappers.push(element);\n            }\n          }\n        }\n        return wrappers;\n      };\n      var indexOf = function (match) {\n        var i = matches.length;\n        while (i--) {\n          if (matches[i] === match) {\n            return i;\n          }\n        }\n        return -1;\n      };\n      function filter(callback) {\n        var filteredMatches = [];\n        each(function (match, i) {\n          if (callback(match, i)) {\n            filteredMatches.push(match);\n          }\n        });\n        matches = filteredMatches;\n        return this;\n      }\n      function each(callback) {\n        for (var i = 0, l = matches.length; i < l; i++) {\n          if (callback(matches[i], i) === false) {\n            break;\n          }\n        }\n        return this;\n      }\n      function wrap(callback) {\n        if (matches.length) {\n          stepThroughMatches(node, matches, genReplacer(callback));\n        }\n        return this;\n      }\n      function find(regex, data) {\n        if (text && regex.global) {\n          while (m = regex.exec(text)) {\n            matches.push(createMatch(m, data));\n          }\n        }\n        return this;\n      }\n      function unwrap(match) {\n        var i;\n        var elements = getWrappersByIndex(match ? indexOf(match) : null);\n        i = elements.length;\n        while (i--) {\n          unwrapElement(elements[i]);\n        }\n        return this;\n      }\n      var matchFromElement = function (element) {\n        return matches[element.getAttribute('data-mce-index')];\n      };\n      var elementFromMatch = function (match) {\n        return getWrappersByIndex(indexOf(match))[0];\n      };\n      function add(start, length, data) {\n        matches.push({\n          start: start,\n          end: start + length,\n          text: text.substr(start, length),\n          data: data\n        });\n        return this;\n      }\n      var rangeFromMatch = function (match) {\n        var wrappers = getWrappersByIndex(indexOf(match));\n        var rng = editor.dom.createRng();\n        rng.setStartBefore(wrappers[0]);\n        rng.setEndAfter(wrappers[wrappers.length - 1]);\n        return rng;\n      };\n      var replace = function (match, text) {\n        var rng = rangeFromMatch(match);\n        rng.deleteContents();\n        if (text.length > 0) {\n          rng.insertNode(editor.dom.doc.createTextNode(text));\n        }\n        return rng;\n      };\n      function reset() {\n        matches.splice(0, matches.length);\n        unwrap();\n        return this;\n      }\n      var text = getText(node);\n      return {\n        text: text,\n        matches: matches,\n        each: each,\n        filter: filter,\n        reset: reset,\n        matchFromElement: matchFromElement,\n        elementFromMatch: elementFromMatch,\n        find: find,\n        add: add,\n        wrap: wrap,\n        unwrap: unwrap,\n        replace: replace,\n        rangeFromMatch: rangeFromMatch,\n        indexOf: indexOf\n      };\n    };\n\n    var getTextMatcher = function (editor, textMatcherState) {\n      if (!textMatcherState.get()) {\n        var textMatcher = DomTextMatcher(editor.getBody(), editor);\n        textMatcherState.set(textMatcher);\n      }\n      return textMatcherState.get();\n    };\n    var defaultSpellcheckCallback = function (editor, pluginUrl, currentLanguageState) {\n      return function (method, text, doneCallback, errorCallback) {\n        var data = {\n          method: method,\n          lang: currentLanguageState.get()\n        };\n        var postData = '';\n        data[method === 'addToDictionary' ? 'word' : 'text'] = text;\n        global$2.each(data, function (value, key) {\n          if (postData) {\n            postData += '&';\n          }\n          postData += key + '=' + encodeURIComponent(value);\n        });\n        global.send({\n          url: new global$1(pluginUrl).toAbsolute(getRpcUrl(editor)),\n          type: 'post',\n          content_type: 'application/x-www-form-urlencoded',\n          data: postData,\n          success: function (result) {\n            var parseResult = JSON.parse(result);\n            if (!parseResult) {\n              var message = editor.translate('Server response wasn\\'t proper JSON.');\n              errorCallback(message);\n            } else if (parseResult.error) {\n              errorCallback(parseResult.error);\n            } else {\n              doneCallback(parseResult);\n            }\n          },\n          error: function () {\n            var message = editor.translate('The spelling service was not found: (') + getRpcUrl(editor) + editor.translate(')');\n            errorCallback(message);\n          }\n        });\n      };\n    };\n    var sendRpcCall = function (editor, pluginUrl, currentLanguageState, name, data, successCallback, errorCallback) {\n      var userSpellcheckCallback = getSpellcheckerCallback(editor);\n      var spellCheckCallback = userSpellcheckCallback ? userSpellcheckCallback : defaultSpellcheckCallback(editor, pluginUrl, currentLanguageState);\n      spellCheckCallback.call(editor.plugins.spellchecker, name, data, successCallback, errorCallback);\n    };\n    var spellcheck = function (editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState) {\n      if (finish(editor, startedState, textMatcherState)) {\n        return;\n      }\n      var errorCallback = function (message) {\n        editor.notificationManager.open({\n          text: message,\n          type: 'error'\n        });\n        editor.setProgressState(false);\n        finish(editor, startedState, textMatcherState);\n      };\n      var successCallback = function (data) {\n        markErrors(editor, startedState, textMatcherState, lastSuggestionsState, data);\n      };\n      editor.setProgressState(true);\n      sendRpcCall(editor, pluginUrl, currentLanguageState, 'spellcheck', getTextMatcher(editor, textMatcherState).text, successCallback, errorCallback);\n      editor.focus();\n    };\n    var checkIfFinished = function (editor, startedState, textMatcherState) {\n      if (!editor.dom.select('span.mce-spellchecker-word').length) {\n        finish(editor, startedState, textMatcherState);\n      }\n    };\n    var addToDictionary = function (editor, pluginUrl, startedState, textMatcherState, currentLanguageState, word, spans) {\n      editor.setProgressState(true);\n      sendRpcCall(editor, pluginUrl, currentLanguageState, 'addToDictionary', word, function () {\n        editor.setProgressState(false);\n        editor.dom.remove(spans, true);\n        checkIfFinished(editor, startedState, textMatcherState);\n      }, function (message) {\n        editor.notificationManager.open({\n          text: message,\n          type: 'error'\n        });\n        editor.setProgressState(false);\n      });\n    };\n    var ignoreWord = function (editor, startedState, textMatcherState, word, spans, all) {\n      editor.selection.collapse();\n      if (all) {\n        global$2.each(editor.dom.select('span.mce-spellchecker-word'), function (span) {\n          if (span.getAttribute('data-mce-word') === word) {\n            editor.dom.remove(span, true);\n          }\n        });\n      } else {\n        editor.dom.remove(spans, true);\n      }\n      checkIfFinished(editor, startedState, textMatcherState);\n    };\n    var finish = function (editor, startedState, textMatcherState) {\n      var bookmark = editor.selection.getBookmark();\n      getTextMatcher(editor, textMatcherState).reset();\n      editor.selection.moveToBookmark(bookmark);\n      textMatcherState.set(null);\n      if (startedState.get()) {\n        startedState.set(false);\n        fireSpellcheckEnd(editor);\n        return true;\n      }\n    };\n    var getElmIndex = function (elm) {\n      var value = elm.getAttribute('data-mce-index');\n      if (typeof value === 'number') {\n        return '' + value;\n      }\n      return value;\n    };\n    var findSpansByIndex = function (editor, index) {\n      var spans = [];\n      var nodes = global$2.toArray(editor.getBody().getElementsByTagName('span'));\n      if (nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          var nodeIndex = getElmIndex(nodes[i]);\n          if (nodeIndex === null || !nodeIndex.length) {\n            continue;\n          }\n          if (nodeIndex === index.toString()) {\n            spans.push(nodes[i]);\n          }\n        }\n      }\n      return spans;\n    };\n    var markErrors = function (editor, startedState, textMatcherState, lastSuggestionsState, data) {\n      var hasDictionarySupport = !!data.dictionary;\n      var suggestions = data.words;\n      editor.setProgressState(false);\n      if (isEmpty(suggestions)) {\n        var message = editor.translate('No misspellings found.');\n        editor.notificationManager.open({\n          text: message,\n          type: 'info'\n        });\n        startedState.set(false);\n        return;\n      }\n      lastSuggestionsState.set({\n        suggestions: suggestions,\n        hasDictionarySupport: hasDictionarySupport\n      });\n      var bookmark = editor.selection.getBookmark();\n      getTextMatcher(editor, textMatcherState).find(getSpellcheckerWordcharPattern(editor)).filter(function (match) {\n        return !!suggestions[match.text];\n      }).wrap(function (match) {\n        return editor.dom.create('span', {\n          'class': 'mce-spellchecker-word',\n          'aria-invalid': 'spelling',\n          'data-mce-bogus': 1,\n          'data-mce-word': match.text\n        });\n      });\n      editor.selection.moveToBookmark(bookmark);\n      startedState.set(true);\n      fireSpellcheckStart(editor);\n    };\n\n    var get = function (editor, startedState, lastSuggestionsState, textMatcherState, currentLanguageState) {\n      var getWordCharPattern = function () {\n        return getSpellcheckerWordcharPattern(editor);\n      };\n      var markErrors$1 = function (data) {\n        markErrors(editor, startedState, textMatcherState, lastSuggestionsState, data);\n      };\n      return {\n        getTextMatcher: textMatcherState.get,\n        getWordCharPattern: getWordCharPattern,\n        markErrors: markErrors$1,\n        getLanguage: currentLanguageState.get\n      };\n    };\n\n    var register$1 = function (editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState) {\n      editor.addCommand('mceSpellCheck', function () {\n        spellcheck(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n      });\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var spellcheckerEvents = 'SpellcheckStart SpellcheckEnd';\n    var buildMenuItems = function (listName, languageValues) {\n      var items = [];\n      global$2.each(languageValues, function (languageValue) {\n        items.push({\n          selectable: true,\n          text: languageValue.name,\n          data: languageValue.value\n        });\n      });\n      return items;\n    };\n    var getItems = function (editor) {\n      return global$2.map(getLanguages(editor).split(','), function (langPair) {\n        var langPairs = langPair.split('=');\n        return {\n          name: langPairs[0],\n          value: langPairs[1]\n        };\n      });\n    };\n    var register = function (editor, pluginUrl, startedState, textMatcherState, currentLanguageState, lastSuggestionsState) {\n      var languageMenuItems = buildMenuItems('Language', getItems(editor));\n      var startSpellchecking = function () {\n        spellcheck(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n      };\n      var buttonArgs = {\n        tooltip: 'Spellcheck',\n        onAction: startSpellchecking,\n        icon: 'spell-check',\n        onSetup: function (buttonApi) {\n          var setButtonState = function () {\n            buttonApi.setActive(startedState.get());\n          };\n          editor.on(spellcheckerEvents, setButtonState);\n          return function () {\n            editor.off(spellcheckerEvents, setButtonState);\n          };\n        }\n      };\n      var splitButtonArgs = __assign(__assign({}, buttonArgs), {\n        type: 'splitbutton',\n        select: function (value) {\n          return value === currentLanguageState.get();\n        },\n        fetch: function (callback) {\n          var items = global$2.map(languageMenuItems, function (languageItem) {\n            return {\n              type: 'choiceitem',\n              value: languageItem.data,\n              text: languageItem.text\n            };\n          });\n          callback(items);\n        },\n        onItemAction: function (splitButtonApi, value) {\n          currentLanguageState.set(value);\n        }\n      });\n      if (languageMenuItems.length > 1) {\n        editor.ui.registry.addSplitButton('spellchecker', splitButtonArgs);\n      } else {\n        editor.ui.registry.addToggleButton('spellchecker', buttonArgs);\n      }\n      editor.ui.registry.addToggleMenuItem('spellchecker', {\n        text: 'Spellcheck',\n        icon: 'spell-check',\n        onSetup: function (menuApi) {\n          menuApi.setActive(startedState.get());\n          var setMenuItemCheck = function () {\n            menuApi.setActive(startedState.get());\n          };\n          editor.on(spellcheckerEvents, setMenuItemCheck);\n          return function () {\n            editor.off(spellcheckerEvents, setMenuItemCheck);\n          };\n        },\n        onAction: startSpellchecking\n      });\n    };\n\n    var ignoreAll = true;\n    var getSuggestions = function (editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState, word, spans) {\n      var items = [];\n      var suggestions = lastSuggestionsState.get().suggestions[word];\n      global$2.each(suggestions, function (suggestion) {\n        items.push({\n          text: suggestion,\n          onAction: function () {\n            editor.insertContent(editor.dom.encode(suggestion));\n            editor.dom.remove(spans);\n            checkIfFinished(editor, startedState, textMatcherState);\n          }\n        });\n      });\n      var hasDictionarySupport = lastSuggestionsState.get().hasDictionarySupport;\n      if (hasDictionarySupport) {\n        items.push({ type: 'separator' });\n        items.push({\n          text: 'Add to dictionary',\n          onAction: function () {\n            addToDictionary(editor, pluginUrl, startedState, textMatcherState, currentLanguageState, word, spans);\n          }\n        });\n      }\n      items.push.apply(items, [\n        { type: 'separator' },\n        {\n          text: 'Ignore',\n          onAction: function () {\n            ignoreWord(editor, startedState, textMatcherState, word, spans);\n          }\n        },\n        {\n          text: 'Ignore all',\n          onAction: function () {\n            ignoreWord(editor, startedState, textMatcherState, word, spans, ignoreAll);\n          }\n        }\n      ]);\n      return items;\n    };\n    var setup = function (editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState) {\n      var update = function (element) {\n        var target = element;\n        if (target.className === 'mce-spellchecker-word') {\n          var spans = findSpansByIndex(editor, getElmIndex(target));\n          if (spans.length > 0) {\n            var rng = editor.dom.createRng();\n            rng.setStartBefore(spans[0]);\n            rng.setEndAfter(spans[spans.length - 1]);\n            editor.selection.setRng(rng);\n            return getSuggestions(editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState, target.getAttribute('data-mce-word'), spans);\n          }\n        } else {\n          return [];\n        }\n      };\n      editor.ui.registry.addContextMenu('spellchecker', { update: update });\n    };\n\n    function Plugin () {\n      global$3.add('spellchecker', function (editor, pluginUrl) {\n        if (hasProPlugin(editor) === false) {\n          var startedState = Cell(false);\n          var currentLanguageState = Cell(getLanguage(editor));\n          var textMatcherState = Cell(null);\n          var lastSuggestionsState = Cell(null);\n          register(editor, pluginUrl, startedState, textMatcherState, currentLanguageState, lastSuggestionsState);\n          setup(editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState);\n          register$1(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n          return get(editor, startedState, lastSuggestionsState, textMatcherState, currentLanguageState);\n        }\n      });\n    }\n\n    Plugin();\n\n}());\n"],"names":["Cell","initial","value","get","set","v","global$3","tinymce","util","Tools","resolve","hasOwnProperty","Object","global$2","global$1","global","getRpcUrl","editor","getParam","getSpellcheckerWordcharPattern","defaultPattern","RegExp","isContentEditableFalse","node","nodeType","contentEditable","DomTextMatcher","m","matches","dom","blockElementsMap","schema","getBlockElements","hiddenTextElementsMap","getWhiteSpaceElements","shortEndedElementsMap","getShortEndedElements","createMatch","data","Error","start","index","end","length","text","getText","nodeName","txt","firstChild","nextSibling","unwrapElement","element","parentNode","childNodes","insertBefore","removeChild","getWrappersByIndex","elements","getElementsByTagName","wrappers","i","dataIndex","getAttribute","className","indexOf","push","match","each","callback","l","this","unwrap","rangeFromMatch","rng","createRng","setStartBefore","setEndAfter","filter","filteredMatches","reset","splice","matchFromElement","elementFromMatch","find","regex","exec","add","substr","wrap","replaceFn","startNode","endNode","startNodeIndex","endNodeIndex","matchLocation","innerNodes","atIndex","curNode","matchIndex","slice","sort","a","b","shift","out","stepThroughMatches","makeReplacementNode","fill","stencil","clone","cloneNode","setAttribute","appendChild","doc","createTextNode","range","before","after","node_1","substring","el","elA","innerNode","innerEl","replaceChild","elB","genReplacer","replace","deleteContents","insertNode","getTextMatcher","textMatcherState","textMatcher","getBody","sendRpcCall","pluginUrl","currentLanguageState","name","successCallback","errorCallback","userSpellcheckCallback","getSpellcheckerCallback","spellCheckCallback","method","doneCallback","lang","postData","key","encodeURIComponent","send","url","toAbsolute","type","content_type","success","result","parseResult","JSON","parse","error","message","translate","defaultSpellcheckCallback","call","plugins","spellchecker","spellcheck","startedState","lastSuggestionsState","finish","setProgressState","markErrors","notificationManager","open","focus","checkIfFinished","select","ignoreWord","word","spans","all","selection","collapse","span","remove","bookmark","getBookmark","moveToBookmark","fire","fireSpellcheckEnd","getElmIndex","elm","hasDictionarySupport","dictionary","suggestions","words","r","x","isEmpty","create","fireSpellcheckStart","__assign","assign","t","s","n","arguments","p","prototype","apply","spellcheckerEvents","register","languageValues","items","languageMenuItems","map","getLanguages","split","langPair","langPairs","getItems","languageValue","selectable","startSpellchecking","buttonArgs","tooltip","onAction","icon","onSetup","buttonApi","setButtonState","setActive","on","off","splitButtonArgs","fetch","languageItem","onItemAction","splitButtonApi","ui","registry","addSplitButton","addToggleButton","addToggleMenuItem","menuApi","setMenuItemCheck","getSuggestions","suggestion","insertContent","encode","addToDictionary","setup","addContextMenu","update","target","nodes","toArray","nodeIndex","toString","findSpansByIndex","setRng","hasPlugin","window","console","log","hasProPlugin","defaultLanguage","getLanguage","addCommand","register$1","getWordCharPattern"],"sourceRoot":""}