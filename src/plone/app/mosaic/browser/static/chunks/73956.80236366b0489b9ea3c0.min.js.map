{"version":3,"file":"chunks/73956.80236366b0489b9ea3c0.min.js","mappings":"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","sources":["webpack://plone-mosaic/./node_modules/tinymce/plugins/insertdatetime/index.js","webpack://plone-mosaic/./node_modules/tinymce/plugins/insertdatetime/plugin.js"],"sourcesContent":["// Exports the \"insertdatetime\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/insertdatetime')\n//   ES2015:\n//     import 'tinymce/plugins/insertdatetime'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.7 (2022-12-06)\n */\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var getDateFormat = function (editor) {\n      return editor.getParam('insertdatetime_dateformat', editor.translate('%Y-%m-%d'));\n    };\n    var getTimeFormat = function (editor) {\n      return editor.getParam('insertdatetime_timeformat', editor.translate('%H:%M:%S'));\n    };\n    var getFormats = function (editor) {\n      return editor.getParam('insertdatetime_formats', [\n        '%H:%M:%S',\n        '%Y-%m-%d',\n        '%I:%M:%S %p',\n        '%D'\n      ]);\n    };\n    var getDefaultDateTime = function (editor) {\n      var formats = getFormats(editor);\n      return formats.length > 0 ? formats[0] : getTimeFormat(editor);\n    };\n    var shouldInsertTimeElement = function (editor) {\n      return editor.getParam('insertdatetime_element', false);\n    };\n\n    var daysShort = 'Sun Mon Tue Wed Thu Fri Sat Sun'.split(' ');\n    var daysLong = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sunday'.split(' ');\n    var monthsShort = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' ');\n    var monthsLong = 'January February March April May June July August September October November December'.split(' ');\n    var addZeros = function (value, len) {\n      value = '' + value;\n      if (value.length < len) {\n        for (var i = 0; i < len - value.length; i++) {\n          value = '0' + value;\n        }\n      }\n      return value;\n    };\n    var getDateTime = function (editor, fmt, date) {\n      if (date === void 0) {\n        date = new Date();\n      }\n      fmt = fmt.replace('%D', '%m/%d/%Y');\n      fmt = fmt.replace('%r', '%I:%M:%S %p');\n      fmt = fmt.replace('%Y', '' + date.getFullYear());\n      fmt = fmt.replace('%y', '' + date.getYear());\n      fmt = fmt.replace('%m', addZeros(date.getMonth() + 1, 2));\n      fmt = fmt.replace('%d', addZeros(date.getDate(), 2));\n      fmt = fmt.replace('%H', '' + addZeros(date.getHours(), 2));\n      fmt = fmt.replace('%M', '' + addZeros(date.getMinutes(), 2));\n      fmt = fmt.replace('%S', '' + addZeros(date.getSeconds(), 2));\n      fmt = fmt.replace('%I', '' + ((date.getHours() + 11) % 12 + 1));\n      fmt = fmt.replace('%p', '' + (date.getHours() < 12 ? 'AM' : 'PM'));\n      fmt = fmt.replace('%B', '' + editor.translate(monthsLong[date.getMonth()]));\n      fmt = fmt.replace('%b', '' + editor.translate(monthsShort[date.getMonth()]));\n      fmt = fmt.replace('%A', '' + editor.translate(daysLong[date.getDay()]));\n      fmt = fmt.replace('%a', '' + editor.translate(daysShort[date.getDay()]));\n      fmt = fmt.replace('%%', '%');\n      return fmt;\n    };\n    var updateElement = function (editor, timeElm, computerTime, userTime) {\n      var newTimeElm = editor.dom.create('time', { datetime: computerTime }, userTime);\n      timeElm.parentNode.insertBefore(newTimeElm, timeElm);\n      editor.dom.remove(timeElm);\n      editor.selection.select(newTimeElm, true);\n      editor.selection.collapse(false);\n    };\n    var insertDateTime = function (editor, format) {\n      if (shouldInsertTimeElement(editor)) {\n        var userTime = getDateTime(editor, format);\n        var computerTime = void 0;\n        if (/%[HMSIp]/.test(format)) {\n          computerTime = getDateTime(editor, '%Y-%m-%dT%H:%M');\n        } else {\n          computerTime = getDateTime(editor, '%Y-%m-%d');\n        }\n        var timeElm = editor.dom.getParent(editor.selection.getStart(), 'time');\n        if (timeElm) {\n          updateElement(editor, timeElm, computerTime, userTime);\n        } else {\n          editor.insertContent('<time datetime=\"' + computerTime + '\">' + userTime + '</time>');\n        }\n      } else {\n        editor.insertContent(getDateTime(editor, format));\n      }\n    };\n\n    var register$1 = function (editor) {\n      editor.addCommand('mceInsertDate', function (_ui, value) {\n        insertDateTime(editor, value !== null && value !== void 0 ? value : getDateFormat(editor));\n      });\n      editor.addCommand('mceInsertTime', function (_ui, value) {\n        insertDateTime(editor, value !== null && value !== void 0 ? value : getTimeFormat(editor));\n      });\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var register = function (editor) {\n      var formats = getFormats(editor);\n      var defaultFormat = Cell(getDefaultDateTime(editor));\n      var insertDateTime = function (format) {\n        return editor.execCommand('mceInsertDate', false, format);\n      };\n      editor.ui.registry.addSplitButton('insertdatetime', {\n        icon: 'insert-time',\n        tooltip: 'Insert date/time',\n        select: function (value) {\n          return value === defaultFormat.get();\n        },\n        fetch: function (done) {\n          done(global.map(formats, function (format) {\n            return {\n              type: 'choiceitem',\n              text: getDateTime(editor, format),\n              value: format\n            };\n          }));\n        },\n        onAction: function (_api) {\n          insertDateTime(defaultFormat.get());\n        },\n        onItemAction: function (_api, value) {\n          defaultFormat.set(value);\n          insertDateTime(value);\n        }\n      });\n      var makeMenuItemHandler = function (format) {\n        return function () {\n          defaultFormat.set(format);\n          insertDateTime(format);\n        };\n      };\n      editor.ui.registry.addNestedMenuItem('insertdatetime', {\n        icon: 'insert-time',\n        text: 'Date/time',\n        getSubmenuItems: function () {\n          return global.map(formats, function (format) {\n            return {\n              type: 'menuitem',\n              text: getDateTime(editor, format),\n              onAction: makeMenuItemHandler(format)\n            };\n          });\n        }\n      });\n    };\n\n    function Plugin () {\n      global$1.add('insertdatetime', function (editor) {\n        register$1(editor);\n        register(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"],"names":["global$1","tinymce","util","Tools","resolve","getTimeFormat","editor","getParam","translate","getFormats","daysShort","split","daysLong","monthsShort","monthsLong","addZeros","value","len","length","i","getDateTime","fmt","date","Date","replace","getFullYear","getYear","getMonth","getDate","getHours","getMinutes","getSeconds","getDay","insertDateTime","format","shouldInsertTimeElement","userTime","computerTime","test","timeElm","dom","getParent","selection","getStart","newTimeElm","create","datetime","parentNode","insertBefore","remove","select","collapse","updateElement","insertContent","global","register","initial","formats","defaultFormat","getDefaultDateTime","get","set","v","execCommand","ui","registry","addSplitButton","icon","tooltip","fetch","done","map","type","text","onAction","_api","onItemAction","makeMenuItemHandler","addNestedMenuItem","getSubmenuItems","add","addCommand","_ui","getDateFormat","register$1"],"sourceRoot":""}