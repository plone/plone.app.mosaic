{"version":3,"file":"chunks/15528.afd033368fb0c288acab.min.js","mappings":"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","sources":["webpack://plone-mosaic/./resources/js/mosaic.layout.js"],"sourcesContent":["// This plugin is used to create a mosaic layout.\nimport \"regenerator-runtime/runtime\"; // needed for ``await`` support\nimport $ from \"jquery\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\nimport events from \"@patternslib/patternslib/src/core/events\";\nimport Tile from \"./mosaic.tile\";\n\nconst log = logging.getLogger(\"pat-mosaic/layout\");\n\nexport default class LayoutManager {\n    constructor(mosaic) {\n        this.mosaic = mosaic;\n    }\n\n    layout = {\n        widthClasses: [\n            \"col\",\n            \"col-1\",\n            \"col-2\",\n            \"col-3\",\n            \"col-4\",\n            \"col-5\",\n            \"col-6\",\n            \"col-7\",\n            \"col-8\",\n            \"col-9\",\n            \"col-10\",\n            \"col-11\",\n            \"col-12\",\n        ],\n        resizeClasses: [\n            \"mosaic-resize-1\",\n            \"mosaic-resize-2\",\n            \"mosaic-resize-3\",\n            \"mosaic-resize-4\",\n            \"mosaic-resize-5\",\n            \"mosaic-resize-6\",\n            \"mosaic-resize-7\",\n            \"mosaic-resize-8\",\n            \"mosaic-resize-9\",\n            \"mosaic-resize-10\",\n            \"mosaic-resize-11\",\n            \"mosaic-resize-12\",\n            // 5-column support\n            \"mosaic-resize-2.4\",\n            \"mosaic-resize-4.8\",\n            \"mosaic-resize-7.2\",\n            \"mosaic-resize-9.6\",\n        ],\n        resizeHandleClasses: [\n            \"mosaic-resize-handle-1\",\n            \"mosaic-resize-handle-2\",\n            \"mosaic-resize-handle-3\",\n            \"mosaic-resize-handle-4\",\n            \"mosaic-resize-handle-5\",\n            \"mosaic-resize-handle-6\",\n            \"mosaic-resize-handle-7\",\n            \"mosaic-resize-handle-8\",\n            \"mosaic-resize-handle-9\",\n            \"mosaic-resize-handle-10\",\n            \"mosaic-resize-handle-11\",\n            \"mosaic-resize-handle-12\",\n        ],\n    };\n\n    /* css helpers */\n    getWidthClass(e) {\n        for (const cls of this.layout.widthClasses) {\n            if (e.classList.contains(cls)) {\n                return cls;\n            }\n        }\n        // Fallback\n        return this.layout.widthClasses[0];\n    }\n\n    getResizeHandleClassId(e) {\n        // Loop through resize handle classes\n        let handleIdx = 0;\n        this.layout.resizeHandleClasses.forEach((cls, idx) => {\n            if (e.classList.contains(cls)) {\n                handleIdx = idx;\n            }\n        })\n        return handleIdx;\n    }\n\n    addAppTile(type, url /*, id */) {\n        // Get value\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            success: async (value) => {\n                // Get dom tree\n                value = this.mosaic.getDomTreeFromHtml(value);\n\n                // Add head tags\n                this.mosaic.addHeadTags(url, value);\n\n                // Add tile\n                await this.addTile(type, value.find(\".temp_body_tag\").html(), url);\n            },\n        });\n    }\n\n    async addAppTileHTML(type, response, url) {\n        let value = this.mosaic.getDomTreeFromHtml(response);\n        this.mosaic.addHeadTags(url, value);\n        await this.addTile(type, value.find(\".temp_body_tag\").html(), url);\n    }\n\n    editAppTile(url) {\n        var self = this;\n\n        // Focus on current window\n        window.parent.focus();\n\n        // Get new value\n        $.ajax({\n            type: \"GET\",\n            url: url,\n            success: function (value) {\n                // Get dom tree\n                value = self.mosaic.getDomTreeFromHtml(value);\n\n                // Remove head tags\n                self.mosaic.removeHeadTags(url);\n\n                // Add head tags\n                self.mosaic.addHeadTags(url, value);\n\n                // Update tile\n                var $tile = $(\n                    \".mosaic-selected-tile .mosaic-tile-content\",\n                    self.mosaic.document,\n                );\n                $tile.html(value.find(\".temp_body_tag\").html()); // jshint ignore:line\n                $tile.attr(\"data-tileUrl\", url.replace(/&/gim, \"&amp;\"));\n            },\n        });\n    }\n\n    async addTile(type, value, tileUrl) {\n        var self = this;\n        // Set dragging state\n        self.mosaic.panels.addClass(\"mosaic-panel-dragging mosaic-panel-dragging-new\");\n\n        // Add helper\n        const add_helper = document.createElement(\"div\");\n        add_helper.classList.add(\"mosaic-grid-row\");\n        add_helper.innerHTML = `<div class=\"mosaic-grid-cell col\">\n                <div class=\"movable removable mosaic-tile mosaic-${type}-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-original-tile\">\n                    <div class=\"mosaic-tile-content\" data-tileUrl=\"${tileUrl && tileUrl.replace(/&/gim, \"&amp;\")\n            }\">\n                        ${value}\n                    </div>\n                </div>\n            </div>`;\n        self.mosaic.panels[0].append(add_helper);\n\n        // Set helper min size\n        var helper = self.mosaic.panels.find(\".mosaic-helper-tile-new\");\n\n        // Get max width\n        var width = 0;\n        self.mosaic.panels.each(function () {\n            if ($(this).width() > width) {\n                width = $(this).width();\n            }\n        });\n\n        // Set width\n        if (helper.width() < width / 4) {\n            helper.width(width / 4);\n        } else {\n            helper.width(helper.width());\n        }\n\n        var tile = new Tile(self.mosaic, helper);\n        await tile.initialize();\n        tile.cacheHtml();\n        tile.scanRegistry();\n    }\n\n    getDefaultValue(tile_config) {\n        var self = this;\n        var start, end;\n\n        // Wrap title and description fields for proper styles\n        if (tile_config.name === \"IDublinCore-title\") {\n            start = '<h1 class=\"documentFirstHeading\">';\n            end = \"</h1>\";\n        } else if (tile_config.name === \"IDublinCore-description\") {\n            start = '<p class=\"documentDescription\">';\n            end = \"</p>\";\n        } else {\n            start = \"<div>\";\n            end = \"</div>\";\n        }\n\n        switch (tile_config.tile_type) {\n            case \"field\":\n                switch (tile_config.widget) {\n                    case \"z3c.form.browser.text.TextWidget\":\n                    case \"z3c.form.browser.text.TextFieldWidget\":\n                        var textval = $(\"#\" + tile_config.id, self.mosaic.document)\n                            .find(\"input\")\n                            .attr(\"value\");\n                        return `${start}${textval}${end}`;\n                    case \"z3c.form.browser.textarea.TextAreaWidget\":\n                    case \"z3c.form.browser.textarea.TextAreaFieldWidget\":\n                    case \"z3c.form.browser.textlines.TextLinesWidget\":\n                    case \"z3c.form.browser.textlines.TextLinesFieldWidget\":\n                        var lines = $(\"#\" + tile_config.id, self.mosaic.document)\n                            .find(\"textarea\")\n                            .val()\n                            .replace(\"\\\\n\", \"<br/>\");\n                        return `${start}${lines}${end}`;\n                    case \"plone.app.z3cform.widget.RichTextFieldWidget\":\n                    case \"plone.app.z3cform.widgets.richtext.RichTextFieldWidget\":\n                    case \"plone.app.z3cform.wysiwyg.widget.WysiwygWidget\":\n                    case \"plone.app.z3cform.wysiwyg.widget.WysiwygFieldWidget\":\n                    case \"plone.app.widgets.dx.RichTextWidget\":\n                        return $(\"#\" + tile_config.id)\n                            .find(\"textarea\")\n                            .val();\n                    default:\n                        return `<div class=\"text-bg-secondary\">Placeholder for field:<br/><b>${tile_config.label}</b></div>`;\n                }\n            default:\n                return tile_config.default_value;\n        }\n    }\n\n    getPageContent(exportLayout) {\n        var self = this;\n\n        var getLayoutRow = function (obj) {\n            var body = \"\";\n\n            // Check if not an empty row\n            if (\n                $(obj).hasClass(\"mosaic-empty-row\") === false &&\n                $(obj).find(\".mosaic-tile\").length >= 0\n            ) {\n                // Add row open tag\n                classNames = $(obj).attr(\"class\");\n                body += '      <div class=\"' + classNames + '\">\\n';\n\n                // Loop through rows\n                $(obj)\n                    .children(\".mosaic-grid-cell\")\n                    .each(function () {\n                        // Add cell start tag\n                        body += '        <div class=\"' + $(this).attr(\"class\") + '\">\\n'; // jshint ignore:line\n\n                        $(this)\n                            .children()\n                            .each(function () {\n                                if ($(this).hasClass(\"mosaic-tile\")) {\n                                    body += $(this)\n                                        .data(\"mosaic-tile\")\n                                        .getHtmlBody(exportLayout);\n                                } else if ($(this).hasClass(\"mosaic-innergrid-row\")) {\n                                    body += getLayoutRow(this);\n                                }\n                            });\n\n                        // Add cell end tag\n                        body += \"        </div>\\n\";\n                    });\n\n                // Add row close tag\n                body += \"      </div>\\n\";\n            }\n            return body;\n        };\n\n        // Content\n        var content,\n            body = \"\",\n            classNames = \"\";\n\n        // Add body tag\n        body += \"  <body>\\n\";\n\n        // Loop through panels\n        $(\"[data-panel]\", self.mosaic.document).each(function () {\n            // Add open panel tag\n            body += '    <div data-panel=\"' + $(this).data(\"panel\") + '\"';\n            body += '         data-max-columns=\"' + $(this).data(\"max-columns\") + '\">\\n';\n\n            $(this)\n                .children()\n                .each(function () {\n                    if ($(this).hasClass(\"mosaic-grid-row\")) {\n                        body += getLayoutRow(this);\n                    }\n                });\n\n            // Add close panel tag\n            body += \"    </div>\\n\";\n        });\n\n        // Add close tag\n        body += \"  </body>\\n\";\n\n        content =\n            '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\" data-layout=\"' +\n            self.mosaic.options.layout +\n            '\">\\n'; // jshint ignore:line\n        content += body;\n        content += \"</html>\\n\";\n        return content;\n    }\n\n    saveLayoutToForm() {\n        var self = this;\n        var $customLayout = $(\n            \"#form-widgets-ILayoutAware-customContentLayout, \" +\n            \"[name='form.widgets.ILayoutAware.customContentLayout']\",\n        );\n\n        if (self.mosaic.hasContentLayout) {\n            $customLayout.val(\"\");\n        } else {\n            $customLayout.val(self.getPageContent());\n        }\n    }\n\n    init_events() {\n        var self = this;\n        var DocumentKeyup = function (e) {\n            // Check if alt\n            if (e.keyCode === 18) {\n                var date = new Date();\n                var enabled = $(\".mosaic-panel\", self.mosaic.document).data(\n                    \"advanced-enabled\",\n                );\n                var elapsed = date.getTime() - enabled;\n                if (elapsed > 400) {\n                    $(\".mosaic-panel\", self.mosaic.document).removeClass(\n                        \"mosaic-advanced\",\n                    );\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                $(\".mosaic-panel\", self.mosaic.document).removeClass(\"inner-subcolumn\");\n            }\n        };\n\n        // Keydown handler\n        var DocumentKeydown = function (e) {\n            const _document = self.mosaic.document;\n            // Tab key\n            if (e.keyCode === 9) {\n                // blur all active tiles. and set focus\n                _document.querySelectorAll(\".mosaic-selected-tile\").forEach((tile) => {\n                    $(tile).data(\"mosaic-tile\").blur();\n                });\n                // focus new tile\n                var focused_tile = document.activeElement.closest(\".mosaic-tile\");\n                if (focused_tile) {\n                    $(focused_tile).data(\"mosaic-tile\").focus();\n                }\n            }\n            // Check if alt\n            if (e.keyCode === 18) {\n                if ($(\".mosaic-panel\", _document).hasClass(\"mosaic-advanced\")) {\n                    $(\".mosaic-panel\", _document).removeClass(\"mosaic-advanced\");\n                } else {\n                    var date = new Date();\n                    $(\".mosaic-panel\", _document).addClass(\"mosaic-advanced\");\n                    $(\".mosaic-panel\", _document).data(\n                        \"advanced-enabled\",\n                        date.getTime(),\n                    );\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                $(\".mosaic-panel\", _document).addClass(\"inner-subcolumn\");\n            }\n\n            // Check if esc\n            if (e.keyCode === 27) {\n                // Check if dragging\n                var original_tile = _document.querySelectorAll(\".mosaic-original-tile\");\n                if (original_tile.length > 0) {\n                    original_tile.forEach((tile) => {\n                        tile.classList.add(\"mosaic-drag-cancel\");\n                        if (tile.classList.contains(\"mosaic-helper-tile-new\")) {\n                            // original row\n                            const $orig_row = $(tile).parent().parent();\n                            // dismiss dragging tile and remove row\n                            $(tile).remove();\n                            $orig_row.mosaicCleanupRow();\n                            // Remove dragging class from content\n                            self.mosaic.panels.removeClass(\n                                \"mosaic-panel-dragging mosaic-panel-dragging-new\",\n                            );\n                            // Hide all dividers\n                            $(\n                                \".mosaic-selected-divider\",\n                                self.mosaic.document,\n                            ).removeClass(\"mosaic-selected-divider\");\n                        }\n                    });\n                    // Deselect tile\n                } else {\n                    $(\".mosaic-selected-tile\", _document).each(function () {\n                        $(this).trigger(\"blur\");\n                    });\n                }\n\n                // Find resize helper\n                $(\".mosaic-resize-handle-helper\", _document).each(function () {\n                    // Remove resizing state\n                    $(this).parents(\"[data-panel]\").removeClass(\"mosaic-panel-resizing\");\n                    $(this).parent().removeClass(\"mosaic-row-resizing\");\n                    $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n\n                    // Remove helper\n                    $(this).remove();\n                });\n            }\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            self.mosaic.document,\n            \"keydown\",\n            \"pat-layout--keydown\",\n            DocumentKeydown,\n        );\n        events.add_event_listener(\n            self.mosaic.document,\n            \"keyup\",\n            \"pat-layout--keyup\",\n            DocumentKeyup,\n        );\n\n        // Add deselect\n        const DocumentMousedown = function (e) {\n            // Get element\n            let elm;\n            if (e.target) {\n                elm = e.target;\n            } else if (e.srcElement) {\n                elm = e.srcElement;\n            }\n\n            // Find new tile helper\n            var new_tile = $(\".mosaic-helper-tile-new\", self.mosaic.document);\n            if (new_tile.length > 0) {\n                new_tile.each(function () {\n                    // Handle drag end\n                    $(this).mosaicHandleDragEnd();\n                });\n                return;\n            }\n\n            // If clicked inside TinyMCE or Modal exit\n            if ($(elm).parents(\".mce-content-body, .tox, .modal-wrapper\").length > 0) {\n                return;\n            }\n\n            // If clicked outside a tile\n            if ($(elm).parents(\".mosaic-tile\").length === 0) {\n                // Deselect tiles\n                self.mosaic.document\n                    .querySelectorAll(\".mosaic-selected-tile:not(.mosaic-tile-loading)\")\n                    .forEach((el) => {\n                        $(el).data(\"mosaic-tile\").blur();\n                    });\n                // Check if outside toolbar\n                if ($(elm).parents(\".mosaic-toolbar\").length === 0) {\n                    // Set actions\n                    self.mosaic.toolbar.SelectedTileChange();\n                }\n            }\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mousedown\",\n            \"pat-layout--mousedown\",\n            DocumentMousedown,\n        );\n\n        // Handle mouse move event: when holding down mouse left button and dragging the handler left or right.\n        const DocumentMousemove = function (e) {\n            // Get new tile helper\n            var $new_tile_helper = $(\".mosaic-helper-tile-new\", self.mosaic.document);\n\n            if ($new_tile_helper.length) {\n                // Get offset\n                const offset = $new_tile_helper.parent().offset();\n                // Get mouse x\n                $new_tile_helper.css(\"top\", e.pageY + 3 - offset.top);\n                $new_tile_helper.css(\"left\", e.pageX + 3 - offset.left);\n\n            }\n\n            // Get resize handle helper\n            var $helper = $(\".mosaic-resize-handle-helper\", self.mosaic.document);\n\n            if ($helper.length) {\n                // Get row\n                var $row = $helper.parent();\n                var resize_handle_index = $helper.data(\"resize_handle_index\");\n\n                // Get mouse x\n                var mouse_x = parseFloat(e.pageX - $row.offset().left - 4);\n\n                // Get mouse percentage\n                var mouse_percentage = Math.round(\n                    (mouse_x / $helper.data(\"row_width\")) * 100\n                );\n\n                // Get closest snap location\n                var snap = 8;\n                var snap_offset = 8;\n                var cur_snap_offset;\n                var grid_percent = GetGridPercentList();\n\n                grid_percent.forEach(function (perc) {\n                    cur_snap_offset = Math.abs(perc - mouse_percentage);\n                    if (cur_snap_offset < snap_offset) {\n                        snap = perc;\n                        snap_offset = cur_snap_offset;\n                    }\n                });\n\n                var snap_size = GetBootstrapColByPercent(snap);\n\n                var column_sizes = $helper[0][\"column_sizes\"];\n                // sum of all column sizes\n                var column_sizes_sum = column_sizes.reduce((a, b) => a + b, 0);\n                // sum of sizes before helper index\n                var col_size_before = column_sizes.slice(0, resize_handle_index).reduce((a, b) => a + b, 0);\n                // sum of sizes after helper index excluding last column (which is elastic)\n                var col_size_after = column_sizes.slice(resize_handle_index + 1, -1).reduce((a, b) => a + b, 0);\n                // calculate maximum size of current column\n                if (resize_handle_index == (column_sizes.length - 1)) {\n                    // if last column, we can drag to full width (12)\n                    var col_size_max = 12 - col_size_before - col_size_after;\n                } else {\n                    // if not last column, we respect last elastic column (min-size: 1)\n                    // with its fixed right margin\n                    var col_size_max = column_sizes_sum - col_size_before - col_size_after - 1;\n                }\n                var new_column_size = snap_size - col_size_before;\n                // limit to maximum of col_sizes_sum and minimum of 1\n                new_column_size = new_column_size > col_size_max ? col_size_max : new_column_size < 1 ? 1 : new_column_size;\n                let new_column_sizes = [];\n\n                column_sizes.forEach((width, i) => {\n                    if (i === resize_handle_index) {\n                        // set new size for current column\n                        new_column_sizes.push(new_column_size);\n                    } else if (i === (column_sizes.length - 1)) {\n                        // calculate elastic size for last column\n                        var _before = new_column_sizes.reduce((a, b) => a + b);\n                        var _last_size = column_sizes_sum - _before;\n                        // _last_size cannot be lower than 1\n                        new_column_sizes.push(_last_size < 1 ? 1 : _last_size);\n                    } else {\n                        new_column_sizes.push(width);\n                    }\n                })\n\n                log.debug(\"------------------resize-handle(move)--------------------\")\n                log.debug(`resize_handle_index: ${resize_handle_index}`);\n                log.debug(`column_sizes: ${column_sizes}`);\n                log.debug(`column_sizes_sum: ${column_sizes_sum}`);\n                log.debug(`cur_snap_offset: ${cur_snap_offset}`);\n                log.debug(`snap: ${snap}`);\n                log.debug(`snap_size: ${snap_size}`);\n                log.debug(`col_size_before: ${col_size_before}`);\n                log.debug(`col_size_after: ${col_size_after}`);\n                log.debug(`col_size_max: ${col_size_max}`);\n                log.debug(`new_column_size: ${new_column_size}`);\n                log.debug(`new_column_sizes: ${new_column_sizes}`);\n\n                var col_size_sum = 0;\n                var resize_css_classes = self.layout.resizeClasses.join(\" \");\n                var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                $row.children(\".mosaic-resize-placeholder\").each(function (idx) {\n                    var col_size = column_sizes[idx];\n                    var col_size_class = GetWidthClassByColSize(col_size);\n\n                    // placeholder width and position\n                    $(this)\n                        .removeClass(`${width_css_classes} ${resize_css_classes}`)\n                        .addClass(`${col_size_class} mosaic-resize-${col_size_sum}`)\n                        .find(\".info\")\n                        .html(col_size);\n\n                    col_size_sum += col_size;\n\n                    if (idx === resize_handle_index) {\n                        // move resize handle helper\n                        $helper\n                            .removeClass(resize_css_classes)\n                            .addClass(`mosaic-resize-${col_size_sum}`);\n                    }\n                });\n\n                // Set new size\n                $helper[0][\"column_sizes\"] = new_column_sizes;\n            }\n\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mousemove\",\n            \"pat-layout--mousemove\",\n            DocumentMousemove,\n        );\n        events.add_event_listener(\n            self.mosaic.document,\n            \"dragover\",\n            \"pat-layout--dragover\",\n            DocumentMousemove,\n        );\n\n        // Handle mouse up event\n        // When resizing is done on mouse up event apply the changes to the div elements\n        const DocumentMouseup = function () {\n            // Find resize helper\n            $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n                var resize_handle_index = $(this).data(\"resize_handle_index\");\n\n                // Cleanup original row\n                $(this).parent().parent().mosaicCleanupRow();\n\n                // Get panel\n                var panel = $(this).parents(\"[data-panel]\");\n\n                // Get column sizes\n                var column_sizes = $(this)[0][\"column_sizes\"];\n                var css_width_classes = self.layout.widthClasses.join(\" \");\n\n                // Set column sizes\n                $(this)\n                    .parent()\n                    .children(\".mosaic-grid-cell\")\n                    .each(function (i) {\n                        $(this)\n                            .removeClass(css_width_classes)\n                            .addClass(GetWidthClassByColSize(column_sizes[i]));\n\n                        var can_reset = $(this).hasClass(\"col\");\n                        if (!can_reset && i === resize_handle_index) {\n                            $(this)\n                                .children(\".mosaic-tile\")\n                                .first()\n                                .children(\".mosaic-tile-side-tools\")\n                                .each(function () {\n                                    var $tileSideTools = $(this);\n\n                                    $tileSideTools\n                                        .children(\".mosaic-tile-label.reset\")\n                                        .remove();\n\n                                    $tileSideTools.append(\n                                        $(self.mosaic.document.createElement(\"div\"))\n                                            .addClass(\"mosaic-tile-label reset\")\n                                            .append(\n                                                AddResetAnchor(\n                                                    $tileSideTools,\n                                                    column_sizes[i],\n                                                ),\n                                            ),\n                                    );\n                                });\n                        }\n                    });\n\n                // Remove resizing state\n                panel.removeClass(\"mosaic-panel-resizing\");\n                $(this).parent().removeClass(\"mosaic-row-resizing\");\n                $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n\n                // Set resize handles\n                $(this).parent().mosaicSetResizeHandles();\n                var $tile = panel.find(\".mosaic-selected-tile\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n\n                // Remove helper\n                $(this).remove();\n            });\n        };\n\n        // Bind event\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mouseup\",\n            \"pat-layout--mouseup\",\n            DocumentMouseup,\n        );\n\n        // Handle mousemove on tile\n        const TileMousemove = function (e) {\n            // only if dragging\n            if (\n                $(this).parents(\"[data-panel]\").hasClass(\"mosaic-panel-dragging\") ===\n                false\n            ) {\n                return;\n            }\n\n            // Hide all dividers\n            $(\".mosaic-selected-divider\", self.mosaic.document).removeClass(\n                \"mosaic-selected-divider\",\n            );\n\n            // Don't show dividers if above original or floating tile\n            if (\n                $(this).hasClass(\"mosaic-original-tile\") === false &&\n                $(this).hasClass(\"mosaic-tile-align-left\") === false &&\n                $(this).hasClass(\"mosaic-tile-align-right\") === false\n            ) {\n                // Get direction\n                var dir = $(this).mosaicGetDirection(e);\n                var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n                // Check if left or right divider\n                if (dir === \"left\" || dir === \"right\") {\n                    var row = divider.parent().parent().parent();\n                    var cols = row.children(\".mosaic-grid-cell\").filter((idx, el) => {\n                        // filter out original tile to enable moving tiles\n                        // inside row with max-columns tiles\n                        return $(el).find(\".mosaic-original-tile\").length === 0;\n                    });\n\n                    if (cols.length >= $(\".mosaic-panel\").data(\"max-columns\")) {\n                        // This row already up to the max amount of columns allowed for this layout\n                        // do not allow new items to be dropped alingside any elements in this row.\n                        return;\n                    }\n\n                    // If row has multiple columns\n                    if (row.children(\".mosaic-grid-cell\").length > 1) {\n                        divider.height(row.height() + 5);\n                        divider.css(\n                            \"top\",\n                            row.offset().top - divider.parent().offset().top - 5,\n                        );\n                    } else {\n                        divider.height(divider.parent().height() + 5);\n                        divider.css(\"top\", -5);\n                    }\n                }\n\n                // Show divider\n                divider.addClass(\"mosaic-selected-divider\");\n            }\n        };\n\n        // Bind events\n        self.mosaic.document.querySelectorAll(\".mosaic-tile\").forEach((tile) => {\n            events.add_event_listener(\n                tile,\n                \"mousemove\",\n                \"pat-layout--mousemove-tile\",\n                TileMousemove,\n            );\n            events.add_event_listener(\n                tile,\n                \"dragover\",\n                \"pat-layout--dragover-tile\",\n                TileMousemove,\n            );\n            events.add_event_listener(\n                tile,\n                \"click\",\n                \"pat-layout--click-tile\",\n                function () {\n                    if (\n                        $(\".mosaic-helper-tile-new\", self.mosaic.document).length === 0\n                    ) {\n                        // only if not dropping tile\n                        if ($(this).data(\"mosaic-tile\")) {\n                            $(this).data(\"mosaic-tile\").select();\n                        }\n                    }\n                },\n            );\n        });\n\n        const applyCustomCss = function (e) {\n            if ($(e.target).attr(\"id\") === \"custom-css-input-box\") {\n                return;\n            }\n            $.each($(\"div.mosaic-set-custom-css\"), function () {\n                var parent = $(this).parent();\n                var base_css = \"mosaic-grid-row\";\n                if (parent.hasClass(\"mosaic-innergrid-row\")) {\n                    base_css = \"mosaic-grid-row mosaic-innergrid-row\";\n                }\n                var classes = $(this).find(\"input#custom-css-input-box\").val();\n                base_css += \" \" + classes;\n                parent.attr(\"class\", base_css);\n                $(this).remove();\n            });\n        };\n\n        const CustomCSSOnDblClick = function (e) {\n            // Only do this for \"mosaic-grid-row\" if advanced mode is enabled\n            var target = $(e.target);\n            var obj = target.parents(\"[data-panel]\");\n            if (obj.hasClass(\"mosaic-advanced\") && target.hasClass(\"mosaic-grid-row\")) {\n                // Check we don't have an input field already\n                if ($(target).find(\".mosaic-set-custom-css\").length > 0) {\n                    return;\n                }\n\n                // We are in advance mode\n                var custom_classes = [];\n                $.each(target.attr(\"class\").split(\" \"), function () {\n                    if (\n                        this !== undefined &&\n                        this !== \"mosaic-grid-row\" &&\n                        this !== \"mosaic-innergrid-row\"\n                    ) {\n                        custom_classes.push(this);\n                    }\n                });\n                var input = $(\n                    \"<input type='text' id='custom-css-input-box'></input>\",\n                ).val(custom_classes.join(\" \"));\n                var div = $(\"<div></div>\")\n                    .addClass(\"mosaic-set-custom-css\")\n                    .append($(\"<label>Custom CSS for this row:</label>\"))\n                    .append(input);\n                target.append(div);\n            }\n        };\n        self.mosaic.document.querySelectorAll(\".mosaic-grid-row\").forEach((gridrow) => {\n            events.add_event_listener(\n                gridrow,\n                \"dblclick\",\n                \"pat-layout--dblclick-gridrow\",\n                CustomCSSOnDblClick,\n            );\n        });\n        events.add_event_listener(\n            self.mosaic.document,\n            \"click\",\n            \"pat-layout--click\",\n            applyCustomCss,\n        );\n    }\n\n    initialize_panels() {\n        var self = this;\n\n        self.initJQueryHelpers();\n        self.init_events();\n\n        // Loop through matched elements\n        var total = self.mosaic.panels.length;\n\n        for (var i = 0; i < total; i++) {\n            // Get current object\n            var obj = $(self.mosaic.panels[i]);\n\n            // Add icons and dividers\n            obj.find(\".mosaic-tile\").each(async function () {\n                var tile = new Tile(self.mosaic, this);\n                await tile.initialize();\n                $(this).mosaicAddDrag();\n            });\n            obj.mosaicAddEmptyRows();\n            obj.children(\".mosaic-grid-row\").mosaicSetResizeHandles();\n            if (i === total - 1) {\n                // Get biggest panel\n                var width = 0;\n                var index = 0;\n                self.mosaic.panels.each(function (j) {\n                    if ($(this).width() > width) {\n                        width = $(this).width();\n                        index = j;\n                    }\n                });\n\n                // Select first tile in biggest panel\n                var $tile = self.mosaic.panels.eq(index).find(\".mosaic-tile:first\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n            }\n\n            obj.find(\".mosaic-innergrid-row\").each(function () {\n                $(this).mosaicAddMouseMoveInnergridRow();\n                $(this).mosaicSetResizeHandles();\n                var that = $(this);\n                [\"top\", \"bottom\"].forEach(function (pos) {\n                    that.append(\n                        $(self.mosaic.document.createElement(\"div\")).addClass(\n                            \"mosaic-divider mosaic-divider-\" + pos,\n                        ),\n                    );\n                });\n            });\n        }\n    }\n\n    initJQueryHelpers() {\n        var self = this;\n        var mosaic_doc = self.mosaic.document;\n\n        $.fn.mosaicAddMouseMoveEmptyRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).on(\"mousemove\", function (/* e */) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\",\n                        );\n                        $(this).children(\"div\").addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add mouse move handler to inner grid rows\n         *\n         * @id jQuery.mosaicAddMouseMoveInnergridRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddMouseMoveInnergridRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).on(\"mousemove\", function (e) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\",\n                        );\n\n                        // Get direction\n                        var dir = $(this).mosaicGetDirection(e);\n                        var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n                        // Show divider\n                        divider.addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add empty rows\n         *\n         * @id jQuery.mosaicAddEmptyRows\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddEmptyRows = function () {\n\n            const create_empty_row = () => {\n                return $(mosaic_doc.createElement(\"div\"))\n                    .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                    .append(\n                        $(mosaic_doc.createElement(\"div\"))\n                            .addClass(\"mosaic-grid-cell col\")\n                            .append(\n                                $(mosaic_doc.createElement(\"div\"))\n                            )\n                    )\n                    .mosaicAddMouseMoveEmptyRow();\n            }\n\n            return this.each(() => {\n                // first row is always an empty one\n                $(this).prepend(create_empty_row())\n                // Loop through rows\n                $(this)\n                    .find(\".mosaic-grid-row:not(.mosaic-innergrid-row):not(.mosaic-empty-row\")\n                    .after(create_empty_row());\n            });\n        };\n\n        /**\n         * Add draggable to matched elements\n         *\n         * @id jQuery.mosaicAddDrag\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddDrag = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                var tile = $(this);\n\n                var DragMove = function (event) {\n                    var helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    var offset = helper.parents(\"[data-panel]\").offset();\n                    if (offset) {\n                        helper.css(\"top\", event.pageY + 3 - offset.top);\n                        helper.css(\"left\", event.pageX + 3 - offset.left);\n                    }\n                };\n\n                var DragStop = function () {\n                    var helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    $(mosaic_doc).off(\"mousemove\", DragMove).off(\"mouseup\", DragStop);\n\n                    // Handle drag end\n                    helper.mosaicHandleDragEnd();\n                    helper.remove();\n                };\n\n                return tile.each(function () {\n                    tile.find(\"div.mosaic-drag-handle\")\n                        .off(\"mousedown\")\n                        .on(\"mousedown\", function (event) {\n                            var downX = event.pageX;\n                            var downY = event.pageY;\n                            var DragCheckMove = function (event) {\n                                if (\n                                    Math.max(\n                                        Math.abs(downX - event.pageX),\n                                        Math.abs(downY - event.pageY),\n                                    ) >= 1\n                                ) {\n                                    // Add dragging class to content area\n                                    self.mosaic.panels.addClass(\"mosaic-panel-dragging\");\n                                    $(\".mosaic-selected-tile\", mosaic_doc)\n                                        .removeClass(\"mosaic-selected-tile\")\n                                        .children(\".mosaic-tile-content\")\n                                        .trigger(\"blur\");\n\n                                    var originaltile = $(event.target).parents(\n                                        \".mosaic-tile\",\n                                    );\n                                    originaltile.addClass(\"mosaic-original-tile\");\n\n                                    var clone = originaltile.clone(true);\n                                    clone\n                                        .css({\n                                            \"width\": originaltile.width(),\n                                            \"max-height\": \"50%\",\n                                            \"position\": \"absolute\",\n                                            \"opacity\": 0.5,\n                                        })\n                                        .addClass(\"mosaic-helper-tile\");\n                                    originaltile.parents(\"[data-panel]\").append(clone);\n\n                                    $(mosaic_doc).on(\"mousemove\", DragMove);\n                                    $(mosaic_doc).on(\"mouseup\", DragStop);\n                                    $(mosaic_doc).off(\"mousemove\", DragCheckMove);\n                                }\n                            };\n                            $(mosaic_doc).on(\"mousemove\", DragCheckMove);\n                            $(mosaic_doc).on(\"mouseup\", function () {\n                                $(mosaic_doc).off(\"mousemove\", DragCheckMove);\n                            });\n                        });\n                });\n            });\n        };\n\n        /**\n         * Event handler for drag end - add new tile\n         *\n         * @id jQuery.mosaicHandleDragEnd\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicHandleDragEnd = function () {\n            // Get layout object\n            var obj = $(this).parents(\"[data-panel]\");\n\n            // Remove dragging class from content\n            self.mosaic.panels.removeClass(\n                \"mosaic-panel-dragging mosaic-panel-dragging-new\",\n            );\n\n            // Get direction\n            var divider = $(\".mosaic-selected-divider\", mosaic_doc);\n            var drop = divider.parent();\n            var dir = \"\";\n            for (const _dir of [\"top\", \"bottom\", \"left\", \"right\"]) {\n                if (divider.hasClass(\"mosaic-divider-\" + _dir)) {\n                    dir = _dir;\n                }\n            }\n            divider.removeClass(\"mosaic-selected-divider\");\n\n            // True if new tile is inserted\n            var new_tile = $(\".mosaic-helper-tile-new\", mosaic_doc).length > 0;\n            var original_tile = $(\".mosaic-original-tile\", mosaic_doc);\n            // get original row here, because tile might be moved\n            var original_row = original_tile.closest(\".mosaic-grid-row\");\n\n            // If divider is not found or not sane drop, act like esc is pressed\n            if (divider.length === 0 || drop.hasClass(\"mosaic-helper-tile\")) {\n                original_tile.addClass(\"mosaic-drag-cancel\");\n            }\n\n            const fixup_classes = (_t) => {\n                _t.removeClass(\"mosaic-drag-cancel\");\n                _t.removeClass(\n                    \"mosaic-original-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-tile-align-right mosaic-tile-align-left\",\n                );\n                _t.css({ width: \"\", left: \"\", top: \"\" });\n                if (!new_tile) {\n                    _t.addClass(\"mosaic-new-tile\");\n                }\n            };\n\n            if (\n                // Check if esc is pressed\n                original_tile.hasClass(\"mosaic-drag-cancel\") ||\n                // Not dropped on tile and empty row\n                (drop.hasClass(\"mosaic-tile\") === false &&\n                    drop.hasClass(\"mosaic-innergrid-row\") === false &&\n                    drop.hasClass(\"mosaic-empty-row\") === false) ||\n                // Check if max columns rows is reached\n                (drop.parent().parent().children(\".mosaic-grid-cell\").length >=\n                    obj.data(\"max-columns\") &&\n                    (dir === \"left\" || dir === \"right\"))\n            ) {\n                fixup_classes(original_tile);\n\n                // Dropped on empty row\n            } else if (drop.hasClass(\"mosaic-empty-row\")) {\n                // Replace empty with normal row class\n                drop.removeClass(\"mosaic-empty-row\")\n                    .attr(\n                        \"class\",\n                        original_tile.parents(\".mosaic-grid-row\").first().attr(\"class\"),\n                    )\n                    .off(\"mousemove\");\n\n                // Clean cell\n                drop.children(\".mosaic-grid-cell\").children(\"div\").remove();\n\n                fixup_classes(original_tile);\n\n                // Add tile to empty row\n                drop.children(\".mosaic-grid-cell\").append(original_tile);\n\n                // Dropped on row or below an inner grid\n            } else {\n                /* When the layout object has the special class (Assigned in line 82), wrap\n                the tile in a div.mosaic-grid-cell so it would create an inner column */\n                fixup_classes(original_tile);\n\n                if (obj.hasClass(\"inner-subcolumn\")) {\n                    original_tile = $(mosaic_doc.createElement(\"div\"))\n                        .addClass(\"mosaic-grid-row mosaic-innergrid-row\")\n                        .append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-grid-cell col\")\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\")).append(\n                                        $(mosaic_doc.createElement(\"div\")).addClass(\n                                            \"mosaic-innergrid-outer-border\",\n                                        ),\n                                    ),\n                                )\n                                .append(original_tile),\n                        )\n                        .mosaicAddMouseMoveInnergridRow();\n                    for (const pos of [\"top\", \"bottom\"]) {\n                        original_tile.append(\n                            $(mosaic_doc.createElement(\"div\")).addClass(\n                                \"mosaic-divider mosaic-divider-\" + pos,\n                            ),\n                        );\n                    }\n                }\n\n                // If top\n                if (dir === \"top\") {\n                    // Add tile before\n                    drop.before(original_tile);\n\n                    // If bottom\n                } else if (dir === \"bottom\") {\n                    // Add tile after\n                    drop.after(original_tile);\n\n                    // If left\n                } else if (dir === \"left\" || dir === \"right\") {\n                    var _col = drop.parent();\n                    var _row = _col.parent();\n                    var _children_count = _row.children(\".mosaic-grid-cell\").length;\n\n                    // Check if only 1 column in the row\n                    if (_children_count.length === 1) {\n                        // Put tiles above dropped tile in a new row above\n                        var prev_elms = drop.prevAll();\n                        if (prev_elms.length > 0) {\n                            _row.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                $(prev_elms.get().reverse())\n                                                    .clone(true)\n                                                    .mosaicAddDrag(),\n                                            ),\n                                    ),\n                            );\n                            prev_elms.remove();\n                        }\n\n                        // Put tiles below dropped tile in a new row below\n                        var next_elms = drop.nextAll();\n                        if (next_elms.length > 0) {\n                            _row.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                next_elms.clone(true).mosaicAddDrag(),\n                                            ),\n                                    ),\n                            );\n                            next_elms.remove();\n                        }\n\n                        // Resize current column\n                        _col.removeClass(self.layout.widthClasses.join(\" \")).addClass(\n                            \"col\",\n                        );\n\n                        // Create column with dragged tile in it\n                        if (dir === \"left\") {\n                            drop.parent().before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(original_tile),\n                            );\n                        } else {\n                            drop.parent().after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(original_tile),\n                            );\n                        }\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n\n                        // Dropped inside column\n                    } else {\n                        // Create new column\n                        if (dir === \"left\") {\n                            _col.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(original_tile),\n                            );\n                        } else {\n                            _col.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(original_tile),\n                            );\n                        }\n\n                        // Resize columns\n                        _row.mosaicSetColumnSizes();\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n                    }\n                }\n            }\n\n            // Remove remaining empty rows\n            self.mosaic.panels.find(\".mosaic-grid-row:not(:has(.mosaic-tile))\").remove();\n            self.mosaic.panels.find(\".mosaic-empty-row\").remove();\n\n            // Cleanup original row\n            original_row.mosaicCleanupRow();\n\n            // Add empty rows\n            self.mosaic.panels.mosaicAddEmptyRows();\n\n            // re-initialize events\n            self.init_events();\n\n            // Select new tile and make it draggables\n            if (new_tile && original_tile.length > 0) {\n                original_tile.mosaicAddDrag();\n                original_tile.data(\"mosaic-tile\").initializeContent(true);\n                original_tile.data(\"mosaic-tile\").select();\n            }\n        };\n\n        /**\n         * Set the sizes of the column\n         *\n         * @id jQuery.mosaicSetColumnSizes\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetColumnSizes = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Resize columns in the row\n                var column_sizes = [];\n                var $gridCells = $(this).children(\".mosaic-grid-cell\");\n                var nr_of_columns = $gridCells.length;\n                var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                // This will reset the width classes - it will automatically set the widths\n\n                $gridCells.each(function (idx) {\n                    $(this).removeClass(width_css_classes);\n\n                    var col_size = Math.floor(12 / nr_of_columns);\n                    var col_size_last = 12 - col_size * (nr_of_columns - 1);\n\n                    for (var j = 0; j < nr_of_columns; j++) {\n                        if (j === nr_of_columns - 1) {\n                            col_size = col_size_last;\n                        }\n                        if (idx === j) {\n                            column_sizes.push(col_size);\n                            $(this).addClass(\"col\");\n                        }\n                    }\n                });\n\n                $(this).data(\"column_sizes\", column_sizes);\n            });\n        };\n\n        /**\n         * Add new resize handlers\n         *\n         * @id jQuery.mosaicSetResizeHandles\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetResizeHandles = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Remove resize handles\n                $(this).children(\".mosaic-resize-handle\").remove();\n\n                // Check number of columns\n                var grid_cells = $(this).children(\".mosaic-grid-cell\");\n                var nr_of_columns = grid_cells.length;\n\n                if (nr_of_columns <= 12) {\n                    var column_sizes = [];\n                    var zero_count = 0;\n                    var col_sum = 0;\n                    var col_size = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        col_size = GetColSizeByColClass(\n                            self.getWidthClass(grid_cells[i]),\n                        );\n                        column_sizes.push(col_size);\n                        col_sum = col_sum + col_size;\n                        if (col_size === 0) {\n                            zero_count = zero_count + 1;\n                        }\n                    }\n\n                    // count \"auto-size\" columns with class \".col\" and\n                    // calculate width equally.\n                    // NOTE: This requires extra logic in case of 5 columns.\n                    // See the \".toFixed(1)\" below because of floating point\n                    // issues with 12 / 5 * 3\n                    var zero_col = 0;\n                    if (zero_count) {\n                        zero_col = (12 - col_sum) / zero_count;\n                    }\n\n                    var resize_col_size = 0;\n                    col_size = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        col_size = column_sizes[i] ? column_sizes[i] : zero_col;\n                        resize_col_size = resize_col_size + col_size;\n\n                        $(this).append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-handle mosaic-resize-handle-${i + 1\n                                    } mosaic-resize-${(nr_of_columns === 5) ? resize_col_size.toFixed(1).replace(\".0\", \"\") : resize_col_size}`,\n                                )\n                                .data(\"resize_handle_index\", i),\n                        );\n\n                        // set counted size to cell data\n                        $(grid_cells[i]).data(\"col_size\", col_size);\n                    }\n                }\n\n                // Mouse down handler on resize handle\n                $(this)\n                    .children(\".mosaic-resize-handle\")\n                    .off(\"mousedown\")\n                    .on(\"mousedown\", function (/* e */) {\n                        if ($(\".mosaic-helper-tile-new\").length > 0) {\n                            // do not resize when we place a new tile\n                            return;\n                        }\n                        var $currRow = $(this).parent();\n                        var $mosaicGridCellChildren = $currRow.children(\".mosaic-grid-cell\");\n\n                        if ($mosaicGridCellChildren.length > 12) {\n                            return;\n                        }\n                        var col_size_sum = 0;\n                        var column_sizes = [];\n\n                        $mosaicGridCellChildren.each(function () {\n                            var col_size = $(this).data(\"col_size\"); // get computed size of the column\n                            column_sizes.push(col_size);\n\n                            var placeholder = $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-placeholder col-${col_size} mosaic-resize-${col_size_sum}`,\n                                )\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\"))\n                                        .addClass(\n                                            \"mosaic-resize-placeholder-inner-border\",\n                                        )\n                                        .append(\n                                            $(mosaic_doc.createElement(\"div\"))\n                                                .addClass(\"info\")\n                                                .html(col_size),\n                                        ),\n                                );\n\n                            // Add placeholder\n                            $currRow.append(placeholder);\n\n                            // summarize column sizes for placeholder classes\n                            col_size_sum += col_size;\n                        });\n\n                        // Get resize handle index\n                        var resize_handle_index = self.getResizeHandleClassId(this);\n                        // calculate resize helper position\n                        var resize_handle_index_size = column_sizes.reduce((a, b, i) => i <= resize_handle_index ? a + b : a, 0);\n\n                        // Add helper\n                        var $helper = $(\"<div />\")\n                            .addClass(\n                                \"mosaic-resize-handle mosaic-resize-handle-helper\"\n                            )\n                            .addClass(\n                                `mosaic-resize-${resize_handle_index_size}`\n                            )\n                            .data(\"row_width\", $currRow.width())\n                            .data(\"resize_handle_index\", resize_handle_index);\n\n                        // save array as DOM attribute\n                        $helper[0][\"column_sizes\"] = column_sizes;\n\n                        $currRow.append($helper);\n\n                        // Set resizing state\n                        $(this)\n                            .parents(\"[data-panel]\")\n                            .addClass(\"mosaic-panel-resizing\");\n                        $currRow.addClass(\"mosaic-row-resizing\");\n                        $(\".mosaic-selected-tile\", mosaic_doc)\n                            .children(\".mosaic-tile-content\")\n                            .trigger(\"blur\");\n\n                        log.debug(\"------------------resize-handle(click)--------------------\")\n                        log.debug(`resize_handle_index: ${resize_handle_index}`)\n                        log.debug(`resize_handle_index_size: ${resize_handle_index_size}`)\n                        log.debug(`row_width: ${$currRow.width()}`)\n                        log.debug(`column_sizes: ${column_sizes}`)\n\n                        // Prevent drag event\n                        return false;\n                    });\n            });\n        };\n\n        /**\n         * Cleanup row after tiles added or removed from the row\n         *\n         * @id jQuery.mosaicCleanupRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicCleanupRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Get original row\n                var original_row = $(this);\n\n                // Remove empty columns\n                original_row.children(\".mosaic-grid-cell\").each(function () {\n                    if ($(this).children().length === 0) {\n                        $(this).remove();\n\n                        // Resize columns\n                        original_row.mosaicSetColumnSizes();\n                    }\n                });\n\n                // Remove row if no tiles inside\n                if (original_row.find(\".mosaic-tile\").length === 0) {\n                    var del_row = original_row;\n\n                    // Check if next row available\n                    if (original_row.nextAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.next(\".mosaic-grid-row\");\n\n                        // Check if prev row available\n                    } else if (original_row.prevAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.prev(\".mosaic-grid-row\");\n\n                        // This is the last row\n                    } else {\n                        original_row.remove();\n                        return;\n                    }\n\n                    // Remove current row\n                    del_row.remove();\n                }\n\n                // Set resize handles\n                original_row.mosaicSetResizeHandles();\n            });\n        };\n\n        /**\n         * Get the direction based on the tile size and relative x and y coords of the cursor\n         *\n         * @id jQuery.mosaicGetDirection\n         * @param {Object} e Event object\n         * @return {String} Direction of the cursor relative to the tile\n         */\n        $.fn.mosaicGetDirection = function (e) {\n            // Calculate x, y, width and height\n            var width = parseFloat($(this).width());\n            var height = parseFloat($(this).height());\n            var x = parseFloat(e.pageX - $(this).offset().left - width / 2);\n            var y = parseFloat(e.pageY - $(this).offset().top - height / 2);\n            var halfwidth = width / 2;\n            var halfheight = height / 2;\n\n            // If left of center\n            if (x < 0) {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (-1 * halfwidth) / (-1 * halfheight)) {\n                        return \"top\";\n                    } else {\n                        return \"left\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < (-1 * halfwidth) / halfheight) {\n                        return \"left\";\n                    } else {\n                        return \"bottom\";\n                    }\n                }\n\n                // Right of center\n            } else {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (1 * halfwidth) / (-1 * halfheight)) {\n                        return \"right\";\n                    } else {\n                        return \"top\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < halfwidth / halfheight) {\n                        return \"bottom\";\n                    } else {\n                        return \"right\";\n                    }\n                }\n            }\n        };\n    }\n}\n\nvar AddResetAnchor = function ($tileSideTools, cols) {\n    var reset = document.createElement(\"a\");\n    var cols_str = typeof cols === \"undefined\" ? \"\" : \" (\" + cols + \")\";\n    reset.href = \"javascript:\";\n    reset.textContent = \"Reset\" + cols_str;\n    $(reset).on(\"click\", { el: $tileSideTools }, function (e) {\n        e.preventDefault();\n\n        e.data.el\n            .parent()\n            .parent()\n            .removeClass(\n                \"col-1 col-2 col-3 col-4 col-5 col-6 col-7 col-8 col-9 col-10 col-11 col-12\",\n            )\n            .addClass(\"col\");\n\n        e.data.el.parent().parent().parent().mosaicSetResizeHandles();\n\n        $(e.target).parent().remove();\n    });\n    return reset;\n};\n\n/**\n * Get a list of percentage steps for each column in the grid\n *\n * @id GetGridPercentList\n * @return {Array} List of percent steps of the width class\n */\nfunction GetGridPercentList() {\n    var low = 0,\n        high = 100,\n        grid = 12,\n        grid_percent = [];\n    var step = 100 / grid;\n    var a = low,\n        b = high - 1; /* fix the last step in the loop: -1 */\n    while (a < b) {\n        grid_percent.push(Math.round((a += step)));\n    }\n\n    return grid_percent;\n}\n\n/**\n * Get the name of the width class of the given integer\n *\n * @id GetWidthClassByColSize\n * @param {Integer} col_size Bootstrap col width id\n * @return {String} Classname of the width class of the given integer\n */\nfunction GetWidthClassByColSize(col_size) {\n    if (col_size) {\n        return \"col-\" + col_size;\n    }\n\n    // Fallback\n    return \"col\";\n}\n\n/**\n * Get the name of the position class of the given integer\n *\n * @id GetColSizeByColClass\n * @param {String} Classname of the position class\n * @return {Integer} col_size Bootstrap col width id\n */\nfunction GetColSizeByColClass(col_class, prefix) {\n    prefix = prefix || \"col-\";\n    return parseInt(col_class.replace(prefix, \"\")) || 0;\n}\n\n/**\n * Get the bootstrap col width id by width size\n *\n * @id GetBootstrapColByPercent\n * @param {Integer} width Percentage of the column position\n * @return {Integer} Bootstrap col width id of the given integer\n */\nfunction GetBootstrapColByPercent(width) {\n    var grid_percent = GetGridPercentList();\n    let cw_idx = 12;\n    grid_percent.forEach((perc, idx) => {\n        if(perc == width) {\n            cw_idx = idx + 1;\n        }\n    })\n    return cw_idx;\n}\n"],"names":["log","logging","getLogger","LayoutManager","constructor","mosaic","this","layout","widthClasses","resizeClasses","resizeHandleClasses","getWidthClass","e","cls","classList","contains","getResizeHandleClassId","handleIdx","forEach","idx","addAppTile","type","url","$","success","async","value","getDomTreeFromHtml","addHeadTags","addTile","find","html","addAppTileHTML","response","editAppTile","self","window","parent","focus","removeHeadTags","$tile","document","attr","replace","tileUrl","panels","addClass","add_helper","createElement","add","innerHTML","append","helper","width","each","tile","Tile","initialize","cacheHtml","scanRegistry","getDefaultValue","tile_config","start","end","name","tile_type","widget","id","val","label","default_value","getPageContent","exportLayout","content","getLayoutRow","obj","body","hasClass","length","classNames","children","data","getHtmlBody","options","saveLayoutToForm","$customLayout","hasContentLayout","init_events","events","add_event_listener","_document","keyCode","querySelectorAll","blur","focused_tile","activeElement","closest","removeClass","date","Date","getTime","original_tile","$orig_row","remove","mosaicCleanupRow","trigger","parents","enabled","elm","target","srcElement","new_tile","mosaicHandleDragEnd","el","toolbar","SelectedTileChange","DocumentMousemove","$new_tile_helper","offset","css","pageY","top","pageX","left","$helper","cur_snap_offset","$row","resize_handle_index","mouse_x","parseFloat","mouse_percentage","Math","round","snap","snap_offset","GetGridPercentList","perc","abs","snap_size","grid_percent","cw_idx","GetBootstrapColByPercent","column_sizes","column_sizes_sum","reduce","a","b","col_size_before","slice","col_size_after","col_size_max","new_column_size","new_column_sizes","i","push","_before","_last_size","debug","col_size_sum","resize_css_classes","join","width_css_classes","col_size","col_size_class","GetWidthClassByColSize","panel","css_width_classes","first","$tileSideTools","AddResetAnchor","mosaicSetResizeHandles","select","TileMousemove","dir","mosaicGetDirection","divider","row","filter","height","CustomCSSOnDblClick","custom_classes","split","undefined","input","div","gridrow","base_css","initialize_panels","initJQueryHelpers","total","mosaicAddDrag","mosaicAddEmptyRows","index","j","eq","mosaicAddMouseMoveInnergridRow","that","pos","mosaic_doc","mosaicAddMouseMoveEmptyRow","on","create_empty_row","prepend","after","DragMove","event","DragStop","off","downX","downY","DragCheckMove","max","originaltile","clone","drop","_dir","original_row","fixup_classes","_t","before","_col","_row","prev_elms","prevAll","get","reverse","next_elms","nextAll","mosaicSetColumnSizes","initializeContent","$gridCells","nr_of_columns","floor","col_size_last","grid_cells","zero_count","col_sum","GetColSizeByColClass","zero_col","resize_col_size","toFixed","$currRow","$mosaicGridCellChildren","placeholder","resize_handle_index_size","del_row","next","prev","x","y","halfwidth","halfheight","cols","reset","cols_str","href","textContent","preventDefault","step","high","col_class","prefix","parseInt"],"sourceRoot":""}