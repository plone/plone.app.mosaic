{"version":3,"file":"chunks/15528.dd513c33818b5b0217d3.min.js","mappings":"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","sources":["webpack://plone-mosaic/./resources/js/mosaic.layout.js"],"sourcesContent":["// This plugin is used to create a mosaic layout.\nimport \"regenerator-runtime/runtime\"; // needed for ``await`` support\nimport $ from \"jquery\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\nimport events from \"@patternslib/patternslib/src/core/events\";\nimport Tile from \"./mosaic.tile\";\nimport mosaic_utils from \"./utils\";\n\nconst log = logging.getLogger(\"pat-mosaic/layout\");\n\nexport default class LayoutManager {\n    constructor(mosaic) {\n        this.mosaic = mosaic;\n    }\n\n    layout = {\n        widthClasses: [\n            \"col\",\n            \"col-1\",\n            \"col-2\",\n            \"col-3\",\n            \"col-4\",\n            \"col-5\",\n            \"col-6\",\n            \"col-7\",\n            \"col-8\",\n            \"col-9\",\n            \"col-10\",\n            \"col-11\",\n            \"col-12\",\n        ],\n        resizeClasses: [\n            \"mosaic-resize-1\",\n            \"mosaic-resize-2\",\n            \"mosaic-resize-3\",\n            \"mosaic-resize-4\",\n            \"mosaic-resize-5\",\n            \"mosaic-resize-6\",\n            \"mosaic-resize-7\",\n            \"mosaic-resize-8\",\n            \"mosaic-resize-9\",\n            \"mosaic-resize-10\",\n            \"mosaic-resize-11\",\n            \"mosaic-resize-12\",\n            // 5-column support\n            \"mosaic-resize-2.4\",\n            \"mosaic-resize-4.8\",\n            \"mosaic-resize-7.2\",\n            \"mosaic-resize-9.6\",\n        ],\n        resizeHandleClasses: [\n            \"mosaic-resize-handle-1\",\n            \"mosaic-resize-handle-2\",\n            \"mosaic-resize-handle-3\",\n            \"mosaic-resize-handle-4\",\n            \"mosaic-resize-handle-5\",\n            \"mosaic-resize-handle-6\",\n            \"mosaic-resize-handle-7\",\n            \"mosaic-resize-handle-8\",\n            \"mosaic-resize-handle-9\",\n            \"mosaic-resize-handle-10\",\n            \"mosaic-resize-handle-11\",\n            \"mosaic-resize-handle-12\",\n        ],\n    };\n\n    /* css helpers */\n    getWidthClass(e) {\n        for (const cls of this.layout.widthClasses) {\n            if (e.classList.contains(cls)) {\n                return cls;\n            }\n        }\n        // Fallback\n        return this.layout.widthClasses[0];\n    }\n\n    getResizeHandleClassId(e) {\n        // Loop through resize handle classes\n        let handleIdx = 0;\n        this.layout.resizeHandleClasses.forEach((cls, idx) => {\n            if (e.classList.contains(cls)) {\n                handleIdx = idx;\n            }\n        })\n        return handleIdx;\n    }\n\n    async addAppTileHTML(type, response, url) {\n        let value = this.mosaic.getDomTreeFromHtml(response);\n        this.mosaic.addHeadTags(url, value);\n        await this.addTile(type, value.find(\".temp_body_tag\").html(), url);\n    }\n\n    async addTile(type, value, tileUrl) {\n        var self = this;\n        // Set dragging state\n        self.mosaic.panels.addClass(\"mosaic-panel-dragging mosaic-panel-dragging-new\");\n\n        // Add helper\n        const add_helper = document.createElement(\"div\");\n        add_helper.classList.add(\"mosaic-grid-row\");\n        add_helper.innerHTML = (\n            `<div class=\"mosaic-grid-cell col\">` +\n            `<div class=\"movable removable mosaic-tile mosaic-${type}-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-original-tile\">` +\n            `<div class=\"mosaic-tile-content\" data-tileUrl=\"${tileUrl && tileUrl.replace(/&/gim, \"&amp;\")}\">` +\n            value +\n            `</div>` +\n            `</div>` +\n            `</div>`\n        );\n        self.mosaic.panels[0].append(add_helper);\n\n        // Set helper min size\n        var helper = self.mosaic.panels.find(\".mosaic-helper-tile-new\");\n\n        // Get max width\n        var width = 0;\n        self.mosaic.panels.each(function () {\n            if ($(this).width() > width) {\n                width = $(this).width();\n            }\n        });\n\n        // Set width\n        if (helper.width() < width / 4) {\n            helper.width(width / 4);\n        } else {\n            helper.width(helper.width());\n        }\n\n        var tile = new Tile(self.mosaic, helper);\n        await tile.initialize();\n\n        tile.cacheHtml();\n        await tile.scanRegistry();\n    }\n\n    async copyTile(orig_tile) {\n        const orig_tile_inst = orig_tile[0][\"mosaic-tile\"];\n        const tile_type = orig_tile_inst.getType();\n\n        // remove class\n        orig_tile.removeClass(\"mosaic-original-tile\");\n        const orig_parent = orig_tile.closest(\".mosaic-grid-row\");\n        // create copy tile helper\n        const copy_tile_id = mosaic_utils.generate_uid();\n        let $copy_tile_helper = $(\n            `<div class=\"mosaic-grid-cell col\">` +\n            `<div class=\"movable removable copyable mosaic-tile mosaic-${tile_type}-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-original-tile\">` +\n            `<div class=\"mosaic-tile-content\" data-tileUrl=\"./@@${tile_type}/${copy_tile_id}\">` +\n            orig_tile_inst.getHtmlContent() +\n            `</div>` +\n            `</div>` +\n            `</div>`);\n        orig_parent.append($copy_tile_helper);\n\n        var tile = new Tile(this.mosaic, $copy_tile_helper.find(\".mosaic-tile\"));\n        await tile.initialize();\n        // save copied content\n        await tile.save();\n\n        if(tile.getConfig().tile_type == \"app\") {\n            // copy the data from original tile too\n            const orig_tile_data = await orig_tile_inst.serialize();\n            await tile.deserialize(orig_tile_data);\n        }\n\n        tile.cacheHtml();\n        await tile.scanRegistry();\n\n        return tile.$el;\n    }\n\n    getDefaultValue(tile_config) {\n        var self = this;\n        var start, end;\n\n        // Wrap title and description fields for proper styles\n        if (tile_config.name === \"IDublinCore-title\") {\n            start = '<h1 class=\"documentFirstHeading\">';\n            end = \"</h1>\";\n        } else if (tile_config.name === \"IDublinCore-description\") {\n            start = '<p class=\"documentDescription\">';\n            end = \"</p>\";\n        } else {\n            start = \"<div>\";\n            end = \"</div>\";\n        }\n\n        if (tile_config.tile_type == \"field\") {\n            switch (tile_config.widget) {\n                case \"z3c.form.browser.text.TextWidget\":\n                case \"z3c.form.browser.text.TextFieldWidget\":\n                    var textval = $(\"#\" + tile_config.id, self.mosaic.document)\n                        .find(\"input\")\n                        .attr(\"value\");\n                    return `${start}${textval}${end}`;\n                case \"z3c.form.browser.textarea.TextAreaWidget\":\n                case \"z3c.form.browser.textarea.TextAreaFieldWidget\":\n                case \"z3c.form.browser.textlines.TextLinesWidget\":\n                case \"z3c.form.browser.textlines.TextLinesFieldWidget\":\n                    var lines = $(\"#\" + tile_config.id, self.mosaic.document)\n                        .find(\"textarea\")\n                        .val()\n                        .replace(\"\\\\n\", \"<br/>\");\n                    return `${start}${lines}${end}`;\n                case \"plone.app.z3cform.widget.RichTextFieldWidget\":\n                case \"plone.app.z3cform.widgets.richtext.RichTextFieldWidget\":\n                case \"plone.app.z3cform.wysiwyg.widget.WysiwygWidget\":\n                case \"plone.app.z3cform.wysiwyg.widget.WysiwygFieldWidget\":\n                case \"plone.app.widgets.dx.RichTextWidget\":\n                    return $(\"#\" + tile_config.id)\n                        .find(\"textarea\")\n                        .val();\n                default:\n                    return `<div class=\"text-bg-secondary\">Placeholder for field:<br/><b>${tile_config.label}</b></div>`;\n            }\n        } else {\n            return tile_config.default_value;\n        }\n    }\n\n    getPageContent(exportLayout) {\n        var self = this;\n\n        var getLayoutRow = function (obj) {\n            var body = \"\";\n\n            // Check if not an empty row\n            if (\n                $(obj).hasClass(\"mosaic-empty-row\") === false &&\n                $(obj).find(\".mosaic-tile\").length >= 0\n            ) {\n                // Add row open tag\n                classNames = $(obj).attr(\"class\");\n                body += '      <div class=\"' + classNames + '\">\\n';\n\n                // Loop through rows\n                $(obj)\n                    .children(\".mosaic-grid-cell\")\n                    .each(function () {\n                        // Add cell start tag\n                        body += '        <div class=\"' + $(this).attr(\"class\") + '\">\\n'; // jshint ignore:line\n\n                        $(this)\n                            .children()\n                            .each(function () {\n                                if ($(this).hasClass(\"mosaic-tile\")) {\n                                    body += $(this)\n                                        .data(\"mosaic-tile\")\n                                        .getHtmlBody(exportLayout);\n                                } else if ($(this).hasClass(\"mosaic-innergrid-row\")) {\n                                    body += getLayoutRow(this);\n                                }\n                            });\n\n                        // Add cell end tag\n                        body += \"        </div>\\n\";\n                    });\n\n                // Add row close tag\n                body += \"      </div>\\n\";\n            }\n            return body;\n        };\n\n        // Content\n        var content,\n            body = \"\",\n            classNames = \"\";\n\n        // Add body tag\n        body += \"  <body>\\n\";\n\n        // Loop through panels\n        $(\"[data-panel]\", self.mosaic.document).each(function () {\n            // Add open panel tag\n            body += '    <div data-panel=\"' + $(this).data(\"panel\") + '\"';\n            body += '         data-max-columns=\"' + $(this).data(\"max-columns\") + '\">\\n';\n\n            $(this)\n                .children()\n                .each(function () {\n                    if ($(this).hasClass(\"mosaic-grid-row\")) {\n                        body += getLayoutRow(this);\n                    }\n                });\n\n            // Add close panel tag\n            body += \"    </div>\\n\";\n        });\n\n        // Add close tag\n        body += \"  </body>\\n\";\n\n        content =\n            '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\" data-layout=\"' +\n            self.mosaic.options.layout +\n            '\">\\n'; // jshint ignore:line\n        content += body;\n        content += \"</html>\\n\";\n        return content;\n    }\n\n    saveLayoutToForm() {\n        var self = this;\n        var $customLayout = $(\n            \"#form-widgets-ILayoutAware-customContentLayout, \" +\n            \"[name='form.widgets.ILayoutAware.customContentLayout']\",\n        );\n\n        if (self.mosaic.hasContentLayout) {\n            $customLayout.val(\"\");\n        } else {\n            $customLayout.val(self.getPageContent());\n        }\n    }\n\n    init_events() {\n        var self = this;\n        const _document = this.mosaic.document;\n        const _panels = _document.querySelectorAll(\".mosaic-panel\");\n\n        if (_panels.length == 0) {\n            console.log(\"No mosaic panel found!\");\n            return\n        }\n        else if (_panels.length > 1) {\n            console.log(\"More than one mosaic panels found -> initializing events only for first panel!\");\n        }\n\n        const _panel = _panels[0];\n\n        var DocumentKeyup = function (e) {\n            // Check if alt\n            if (e.keyCode === 18) {\n                // check for copy mode\n                if (_panel.classList.contains(\"mosaic-panel-dragging-copy\")) {\n                    _panel.classList.remove(\"mosaic-panel-dragging-copy\");\n                } else {\n                    var date = new Date();\n                    var elapsed = date.getTime() - parseInt(_panel[\"mosaic-advanced-enabled\"]);\n                    if (elapsed > 400) {\n                        _panel.classList.remove(\"mosaic-advanced\");\n                    }\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                _panel.classList.remove(\"inner-subcolumn\");\n            }\n        };\n\n        // Keydown handler\n        var DocumentKeydown = function (e) {\n            // Tab key\n            if (e.keyCode === 9) {\n                // blur all active tiles. and set focus\n                _document.querySelectorAll(\".mosaic-selected-tile\").forEach((tile) => {\n                    $(tile).data(\"mosaic-tile\").blur();\n                });\n                // focus new tile\n                var focused_tile = document.activeElement.closest(\".mosaic-tile\");\n                if (focused_tile) {\n                    $(focused_tile).data(\"mosaic-tile\").focus();\n                }\n            }\n            // Check if alt\n            if (e.keyCode === 18) {\n                // pressing alt during existing tile dragging checks for possible copy mode\n                // see mosaic.tile.js -> COPYABLE_TILE_TYPES\n                const orig_tile = _panel.querySelector(\".mosaic-original-tile\");\n                if (\n                    orig_tile?.classList.contains(\"copyable\") &&\n                    _panel.classList.contains(\"mosaic-panel-dragging\") &&\n                    !_panel.classList.contains(\"mosaic-panel-dragging-new\")\n                ) {\n                    _panel.classList.add(\"mosaic-panel-dragging-copy\");\n                }\n                else if (_panel.classList.contains(\"mosaic-advanced\")) {\n                    _panel.classList.remove(\"mosaic-advanced\");\n                } else {\n                    _panel.classList.add(\"mosaic-advanced\");\n                    _panel[\"mosaic-advanced-enabled\"] = (new Date()).getTime();\n                }\n            }\n            // Check if ctrl\n            if (e.keyCode === 17) {\n                _panel.classList.add(\"inner-subcolumn\");\n            }\n\n            // Check if esc\n            if (e.keyCode === 27) {\n                // Check if dragging\n                var original_tile = _panel.querySelectorAll(\".mosaic-original-tile\");\n                if (original_tile.length > 0) {\n                    original_tile.forEach((tile) => {\n                        tile.classList.add(\"mosaic-drag-cancel\");\n                        if (tile.classList.contains(\"mosaic-helper-tile-new\")) {\n                            // original row\n                            const $orig_row = $(tile).parent().parent();\n                            // dismiss dragging tile and remove row\n                            $(tile).remove();\n                            $orig_row.mosaicCleanupRow();\n                            // Remove dragging class from content\n                            _panel.classList.remove(\n                                \"mosaic-panel-dragging\", \"mosaic-panel-dragging-new\",\n                            );\n                            // Hide all dividers\n                            $(\n                                \".mosaic-selected-divider\",\n                                _document,\n                            ).removeClass(\"mosaic-selected-divider\");\n                        }\n                    });\n                    // Deselect tile\n                } else {\n                    $(\".mosaic-selected-tile\", _document).each(function () {\n                        $(this).trigger(\"blur\");\n                    });\n                }\n\n                // Find resize helper\n                $(\".mosaic-resize-handle-helper\", _document).each(function () {\n                    // Remove resizing state\n                    $(this).parents(\"[data-panel]\").removeClass(\"mosaic-panel-resizing\");\n                    $(this).parent().removeClass(\"mosaic-row-resizing\");\n                    $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n                    // Remove helper\n                    $(this).remove();\n                });\n            }\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            _document,\n            \"keydown\",\n            \"pat-layout--keydown\",\n            DocumentKeydown,\n        );\n        events.add_event_listener(\n            _document,\n            \"keyup\",\n            \"pat-layout--keyup\",\n            DocumentKeyup,\n        );\n\n        // Add deselect\n        const DocumentMousedown = function (e) {\n            // Get element\n            let elm;\n            if (e.target) {\n                elm = e.target;\n            } else if (e.srcElement) {\n                elm = e.srcElement;\n            }\n\n            // Find new tile helper\n            var new_tile = $(\".mosaic-helper-tile-new\", self.mosaic.document);\n            if (new_tile.length > 0) {\n                new_tile.each(function () {\n                    // Handle drag end\n                    $(this).mosaicHandleDragEnd();\n                });\n                return;\n            }\n\n            // If clicked inside TinyMCE or Modal exit\n            if ($(elm).parents(\".mce-content-body, .tox, .modal-wrapper\").length > 0) {\n                return;\n            }\n\n            // If clicked outside a tile\n            if ($(elm).parents(\".mosaic-tile\").length === 0) {\n                // Deselect tiles\n                self.mosaic.document\n                    .querySelectorAll(\".mosaic-selected-tile:not(.mosaic-tile-loading)\")\n                    .forEach((el) => {\n                        $(el).data(\"mosaic-tile\").blur();\n                    });\n                // Check if outside toolbar\n                if ($(elm).parents(\".mosaic-toolbar\").length === 0) {\n                    // Set actions\n                    self.mosaic.toolbar.SelectedTileChange();\n                }\n            }\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mousedown\",\n            \"pat-layout--mousedown-document\",\n            DocumentMousedown,\n        );\n\n        // Handle mouse move event: when holding down mouse left button and dragging the handler left or right.\n        const DocumentMousemove = function (e) {\n            // Get new tile helper\n            var $new_tile_helper = $(\".mosaic-helper-tile-new\", self.mosaic.document);\n\n            if ($new_tile_helper.length) {\n                // Get offset\n                const offset = $new_tile_helper.parent().offset();\n                // Get mouse x\n                $new_tile_helper.css(\"top\", e.pageY + 3 - offset.top);\n                $new_tile_helper.css(\"left\", e.pageX + 3 - offset.left);\n\n            }\n\n            // Get resize handle helper\n            var $helper = $(\".mosaic-resize-handle-helper\", self.mosaic.document);\n\n            if ($helper.length) {\n                // Get row\n                var $row = $helper.parent();\n                var resize_handle_index = $helper.data(\"resize_handle_index\");\n\n                // Get mouse x\n                var mouse_x = parseFloat(\n                    e.pageX - // current mouseX\n                    $row.offset().left - // current row position left\n                    parseInt(getComputedStyle($row[0]).paddingLeft) - // calculated padding (eg fluid-background-row)\n                    4 // centered handler\n                );\n\n                // Get mouse percentage\n                var mouse_percentage = Math.round(\n                    (mouse_x / $helper.data(\"row_width\")) * 100\n                );\n\n                // Get closest snap location\n                var snap = 8;\n                var snap_offset = 8;\n                var cur_snap_offset;\n                var grid_percent = GetGridPercentList();\n\n                grid_percent.forEach(function (perc) {\n                    cur_snap_offset = Math.abs(perc - mouse_percentage);\n                    if (cur_snap_offset < snap_offset) {\n                        snap = perc;\n                        snap_offset = cur_snap_offset;\n                    }\n                });\n\n                var snap_size = GetBootstrapColByPercent(snap);\n\n                var column_sizes = $helper[0][\"column_sizes\"];\n                // sum of all column sizes\n                var column_sizes_sum = column_sizes.reduce((a, b) => a + b, 0);\n                // sum of sizes before helper index\n                var col_size_before = column_sizes.slice(0, resize_handle_index).reduce((a, b) => a + b, 0);\n                // sum of sizes after helper index excluding last column (which is elastic)\n                var col_size_after = column_sizes.slice(resize_handle_index + 1, -1).reduce((a, b) => a + b, 0);\n                // calculate maximum size of current column\n                if (resize_handle_index == (column_sizes.length - 1)) {\n                    // if last column, we can drag to full width (12)\n                    var col_size_max = 12 - col_size_before - col_size_after;\n                } else {\n                    // if not last column, we respect last elastic column (min-size: 1)\n                    // with its fixed right margin\n                    var col_size_max = column_sizes_sum - col_size_before - col_size_after - 1;\n                }\n                var new_column_size = snap_size - col_size_before;\n                // limit to maximum of col_sizes_sum and minimum of 1\n                new_column_size = new_column_size > col_size_max ? col_size_max : new_column_size < 1 ? 1 : new_column_size;\n                let new_column_sizes = [];\n\n                column_sizes.forEach((width, i) => {\n                    if (i === resize_handle_index) {\n                        // set new size for current column\n                        new_column_sizes.push(new_column_size);\n                    } else if (i === (column_sizes.length - 1)) {\n                        // calculate elastic size for last column\n                        var _before = new_column_sizes.reduce((a, b) => a + b);\n                        var _last_size = column_sizes_sum - _before;\n                        // _last_size cannot be lower than 1\n                        new_column_sizes.push(_last_size < 1 ? 1 : _last_size);\n                    } else {\n                        new_column_sizes.push(width);\n                    }\n                })\n\n                log.debug(\"------------------resize-handle(move)--------------------\")\n                log.debug(`mouse_x: ${mouse_x}`);\n                log.debug(`mouse_percentage: ${mouse_percentage}`);\n                log.debug(`resize_handle_index: ${resize_handle_index}`);\n                log.debug(`column_sizes: ${column_sizes}`);\n                log.debug(`column_sizes_sum: ${column_sizes_sum}`);\n                log.debug(`cur_snap_offset: ${cur_snap_offset}`);\n                log.debug(`snap: ${snap}`);\n                log.debug(`snap_size: ${snap_size}`);\n                log.debug(`col_size_before: ${col_size_before}`);\n                log.debug(`col_size_after: ${col_size_after}`);\n                log.debug(`col_size_max: ${col_size_max}`);\n                log.debug(`new_column_size: ${new_column_size}`);\n                log.debug(`new_column_sizes: ${new_column_sizes}`);\n\n                var col_size_sum = 0;\n                var resize_css_classes = self.layout.resizeClasses.join(\" \");\n                var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                $row.children(\".mosaic-resize-placeholder\").each(function (idx) {\n                    var col_size = column_sizes[idx];\n                    var col_size_class = GetWidthClassByColSize(col_size);\n\n                    // placeholder width and position\n                    $(this)\n                        .removeClass(`${width_css_classes} ${resize_css_classes}`)\n                        .addClass(`${col_size_class} mosaic-resize-${col_size_sum}`)\n                        .find(\".info\")\n                        .html(col_size);\n\n                    col_size_sum += col_size;\n\n                    if (idx === resize_handle_index) {\n                        // move resize handle helper\n                        $helper\n                            .removeClass(resize_css_classes)\n                            .addClass(`mosaic-resize-${col_size_sum}`);\n                    }\n                });\n\n                // Set new size\n                $helper[0][\"column_sizes\"] = new_column_sizes;\n            }\n\n        };\n\n        // Bind event and add to array\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mousemove\",\n            \"pat-layout--mousemove\",\n            DocumentMousemove,\n        );\n        events.add_event_listener(\n            self.mosaic.document,\n            \"dragover\",\n            \"pat-layout--dragover\",\n            DocumentMousemove,\n        );\n\n        // Handle mouse up event\n        // When resizing is done on mouse up event apply the changes to the div elements\n        const DocumentMouseup = function () {\n            // Find resize helper\n            $(\".mosaic-resize-handle-helper\", self.mosaic.document).each(function () {\n\n                var resize_handle_index = $(this).data(\"resize_handle_index\");\n\n                // Cleanup original row\n                $(this).parent().parent().mosaicCleanupRow();\n\n                // Get panel\n                var panel = $(this).parents(\"[data-panel]\");\n\n                // Get column sizes\n                var column_sizes = $(this)[0][\"column_sizes\"];\n                var css_width_classes = self.layout.widthClasses.join(\" \");\n\n                // Set column sizes\n                $(this)\n                    .parent()\n                    .children(\".mosaic-grid-cell\")\n                    .each(function (i) {\n                        $(this)\n                            .removeClass(css_width_classes)\n                            .addClass(GetWidthClassByColSize(column_sizes[i]));\n\n                        var can_reset = $(this).hasClass(\"col\");\n                        if (!can_reset && i === resize_handle_index) {\n                            $(this)\n                                .children(\".mosaic-tile\")\n                                .first()\n                                .children(\".mosaic-tile-side-tools\")\n                                .each(function () {\n                                    var $tileSideTools = $(this);\n\n                                    $tileSideTools\n                                        .children(\".mosaic-tile-label.reset\")\n                                        .remove();\n\n                                    $tileSideTools.append(\n                                        $(self.mosaic.document.createElement(\"div\"))\n                                            .addClass(\"mosaic-tile-label reset\")\n                                            .append(\n                                                AddResetAnchor(\n                                                    $tileSideTools,\n                                                    column_sizes[i],\n                                                ),\n                                            ),\n                                    );\n                                });\n                        }\n                    });\n\n                // Remove resizing state\n                panel.removeClass(\"mosaic-panel-resizing\");\n                $(this).parent().removeClass(\"mosaic-row-resizing\");\n                $(this).parent().children(\".mosaic-resize-placeholder\").remove();\n\n                // Set resize handles\n                $(this).parent().mosaicSetResizeHandles();\n                var $tile = panel.find(\".mosaic-selected-tile\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n\n                // Remove helper\n                $(this).remove();\n            });\n        };\n\n        // Bind event\n        events.add_event_listener(\n            self.mosaic.document,\n            \"mouseup\",\n            \"pat-layout--mouseup\",\n            DocumentMouseup,\n        );\n\n        // Handle mousemove on tile\n        const TileMousemove = function (e) {\n            // only if dragging\n            if (\n                $(this).parents(\"[data-panel]\").hasClass(\"mosaic-panel-dragging\") ===\n                false\n            ) {\n                return;\n            }\n\n            // Hide all dividers\n            $(\".mosaic-selected-divider\", self.mosaic.document).removeClass(\n                \"mosaic-selected-divider\",\n            );\n\n            // Don't show dividers if above original or floating tile\n            // but not in copy mode\n            if (\n                (!$(this).parents(\"[data-panel]\").hasClass(\"mosaic-panel-dragging-copy\") &&\n                    $(this).hasClass(\"mosaic-original-tile\")) ||\n                $(this).hasClass(\"mosaic-tile-align-left\") ||\n                $(this).hasClass(\"mosaic-tile-align-right\")\n            ) {\n                return;\n            }\n\n            // Get direction\n            var dir = $(this).mosaicGetDirection(e);\n            var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n            // Check if left or right divider\n            if (dir === \"left\" || dir === \"right\") {\n                var row = divider.parent().parent().parent();\n                var cols = row.children(\".mosaic-grid-cell\").filter((idx, el) => {\n                    // filter out original tile to enable moving tiles\n                    // inside row with max-columns tiles\n                    return $(el).find(\".mosaic-original-tile\").length === 0;\n                });\n\n                if (cols.length >= $(\".mosaic-panel\").data(\"max-columns\")) {\n                    // This row already up to the max amount of columns allowed for this layout\n                    // do not allow new items to be dropped alingside any elements in this row.\n                    return;\n                }\n\n                // If row has multiple columns\n                if (row.children(\".mosaic-grid-cell\").length > 1) {\n                    divider.height(row.height() + 5);\n                    divider.css(\n                        \"top\",\n                        row.offset().top - divider.parent().offset().top - 5,\n                    );\n                } else {\n                    divider.height(divider.parent().height() + 5);\n                    divider.css(\"top\", -5);\n                }\n            }\n\n            // Show divider\n            divider.addClass(\"mosaic-selected-divider\");\n        };\n\n        // Bind events\n        self.mosaic.document.querySelectorAll(\".mosaic-tile\").forEach((tile) => {\n            events.add_event_listener(\n                tile,\n                \"mousemove\",\n                \"pat-layout--mousemove-tile\",\n                TileMousemove,\n            );\n            events.add_event_listener(\n                tile,\n                \"dragover\",\n                \"pat-layout--dragover-tile\",\n                TileMousemove,\n            );\n            events.add_event_listener(\n                tile,\n                \"click\",\n                \"pat-layout--select-tile\",\n                () => {\n                    if ($(\".mosaic-helper-tile-new\", self.mosaic.document).length > 0) {\n                        // only if not dropping tile\n                        return;\n                    }\n                    tile[\"mosaic-tile\"].select();\n                },\n            );\n        });\n\n        const applyCustomCss = function (e) {\n            if ($(e.target).attr(\"id\") === \"custom-css-input-box\") {\n                return;\n            }\n            $.each($(\"div.mosaic-set-custom-css\"), function () {\n                var parent = $(this).parent();\n                var base_css = \"mosaic-grid-row\";\n                if (parent.hasClass(\"mosaic-innergrid-row\")) {\n                    base_css = \"mosaic-grid-row mosaic-innergrid-row\";\n                }\n                var classes = $(this).find(\"input#custom-css-input-box\").val();\n                base_css += \" \" + classes;\n                parent.attr(\"class\", base_css);\n                $(this).remove();\n            });\n        };\n\n        const CustomCSSOnDblClick = function (e) {\n            // Only do this for \"mosaic-grid-row\" if advanced mode is enabled\n            var target = $(e.target);\n            var obj = target.parents(\"[data-panel]\");\n            if (obj.hasClass(\"mosaic-advanced\") && target.hasClass(\"mosaic-grid-row\")) {\n                // Check we don't have an input field already\n                if ($(target).find(\".mosaic-set-custom-css\").length > 0) {\n                    return;\n                }\n\n                // We are in advance mode\n                var custom_classes = [];\n                $.each(target.attr(\"class\").split(\" \"), function () {\n                    if (\n                        this !== undefined &&\n                        this !== \"mosaic-grid-row\" &&\n                        this !== \"mosaic-innergrid-row\"\n                    ) {\n                        custom_classes.push(this);\n                    }\n                });\n                var input = $(\n                    \"<input type='text' id='custom-css-input-box'></input>\",\n                ).val(custom_classes.join(\" \"));\n                var div = $(\"<div></div>\")\n                    .addClass(\"mosaic-set-custom-css\")\n                    .append($(\"<label>Custom CSS for this row:</label>\"))\n                    .append(input);\n                target.append(div);\n            }\n        };\n        self.mosaic.document.querySelectorAll(\".mosaic-grid-row\").forEach((gridrow) => {\n            events.add_event_listener(\n                gridrow,\n                \"dblclick\",\n                \"pat-layout--dblclick-gridrow\",\n                CustomCSSOnDblClick,\n            );\n        });\n        events.add_event_listener(\n            self.mosaic.document,\n            \"click\",\n            \"pat-layout--click\",\n            applyCustomCss,\n        );\n    }\n\n    initialize_panels() {\n        var self = this;\n\n        self.initJQueryHelpers();\n        self.init_events();\n\n        // Loop through matched elements\n        var total = self.mosaic.panels.length;\n\n        for (var i = 0; i < total; i++) {\n            // Get current object\n            var obj = $(self.mosaic.panels[i]);\n\n            // Add icons and dividers\n            obj.find(\".mosaic-tile\").each(async function () {\n                var tile = new Tile(self.mosaic, this);\n                await tile.initialize();\n                $(this).mosaicAddDrag();\n            });\n            obj.mosaicAddEmptyRows();\n            obj.children(\".mosaic-grid-row\").mosaicSetResizeHandles();\n            if (i === total - 1) {\n                // Get biggest panel\n                var width = 0;\n                var index = 0;\n                self.mosaic.panels.each(function (j) {\n                    if ($(this).width() > width) {\n                        width = $(this).width();\n                        index = j;\n                    }\n                });\n\n                // Select first tile in biggest panel\n                var $tile = self.mosaic.panels.eq(index).find(\".mosaic-tile:first\");\n                if ($tile.length > 0) {\n                    $tile.data(\"mosaic-tile\").select();\n                }\n            }\n\n            obj.find(\".mosaic-innergrid-row\").each(function () {\n                $(this).mosaicAddMouseMoveInnergridRow();\n                $(this).mosaicSetResizeHandles();\n                var that = $(this);\n                [\"top\", \"bottom\"].forEach(function (pos) {\n                    that.append(\n                        $(self.mosaic.document.createElement(\"div\")).addClass(\n                            \"mosaic-divider mosaic-divider-\" + pos,\n                        ),\n                    );\n                });\n            });\n        }\n    }\n\n    initJQueryHelpers() {\n        var self = this;\n        var mosaic_doc = self.mosaic.document;\n\n        $.fn.mosaicAddMouseMoveEmptyRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).on(\"mousemove\", function (/* e */) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\",\n                        );\n                        $(this).children(\"div\").addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add mouse move handler to inner grid rows\n         *\n         * @id jQuery.mosaicAddMouseMoveInnergridRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddMouseMoveInnergridRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Mouse move event\n                $(this).on(\"mousemove\", function (e) {\n                    // Get layout object\n                    var obj = $(this).parents(\"[data-panel]\");\n\n                    // Check if dragging\n                    if (obj.hasClass(\"mosaic-panel-dragging\")) {\n                        // Hide all dividers\n                        $(\".mosaic-selected-divider\", mosaic_doc).removeClass(\n                            \"mosaic-selected-divider\",\n                        );\n\n                        // Get direction\n                        var dir = $(this).mosaicGetDirection(e);\n                        var divider = $(this).children(\".mosaic-divider-\" + dir);\n\n                        // Show divider\n                        divider.addClass(\"mosaic-selected-divider\");\n                    }\n                });\n            });\n        };\n\n        /**\n         * Add empty rows\n         *\n         * @id jQuery.mosaicAddEmptyRows\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddEmptyRows = function () {\n\n            const create_empty_row = () => {\n                return $(mosaic_doc.createElement(\"div\"))\n                    .addClass(\"mosaic-grid-row mosaic-empty-row\")\n                    .append(\n                        $(mosaic_doc.createElement(\"div\"))\n                            .addClass(\"mosaic-grid-cell col\")\n                            .append(\n                                $(mosaic_doc.createElement(\"div\"))\n                            )\n                    )\n                    .mosaicAddMouseMoveEmptyRow();\n            }\n\n            return this.each(() => {\n                // first row is always an empty one\n                $(this).prepend(create_empty_row())\n                // Loop through rows\n                $(this)\n                    .find(\".mosaic-grid-row:not(.mosaic-innergrid-row):not(.mosaic-empty-row\")\n                    .after(create_empty_row());\n            });\n        };\n\n        /**\n         * Add draggable to matched elements\n         *\n         * @id jQuery.mosaicAddDrag\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicAddDrag = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                const tile = this;\n                let drag_start_ts = 0;\n                let drag_start = null;\n                let drag_start_delay = 300;\n\n                const DragMove = (event) => {\n                    var helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    var offset = helper.parents(\"[data-panel]\").offset();\n                    if (offset) {\n                        helper.css(\"top\", event.pageY + 3 - offset.top);\n                        helper.css(\"left\", event.pageX + 3 - offset.left);\n                    }\n                };\n\n                const DragStop = () => {\n                    clearTimeout(drag_start);\n\n                    events.remove_event_listener(mosaic_doc, \"pat-layout--dragmove\")\n                    events.remove_event_listener(mosaic_doc, \"pat-layout--dragstop\")\n\n                    var curr_ts = (new Date()).getTime();\n\n                    if ((curr_ts - drag_start_ts) < drag_start_delay) {\n                        // skip within dragstart delay\n                        return;\n                    }\n\n                    // Handle drag end\n                    const helper = $(\".mosaic-helper-tile\", mosaic_doc);\n                    helper.mosaicHandleDragEnd();\n                    helper.remove();\n                };\n\n                const DragStart = (event) => {\n                    // Add dragging class to content area\n                    self.mosaic.panels.addClass(\"mosaic-panel-dragging\");\n\n                    $(\".mosaic-selected-tile\", mosaic_doc)\n                        .removeClass(\"mosaic-selected-tile\")\n                        .children(\".mosaic-tile-content\")\n                        .trigger(\"blur\");\n\n                    var originaltile = $(event.target).parents(\n                        \".mosaic-tile\",\n                    );\n                    originaltile.addClass(\"mosaic-original-tile\");\n\n                    var clone = originaltile.clone(true);\n                    clone\n                        .removeClass(\"mosaic-original-tile\")\n                        .css({\n                            \"width\": originaltile.width(),\n                            \"max-height\": \"33%\",\n                            \"position\": \"absolute\",\n                            \"opacity\": 0.5,\n                        })\n                        .addClass(\"mosaic-helper-tile\");\n                    originaltile.parents(\"[data-panel]\").append(clone);\n\n                    events.add_event_listener(\n                        mosaic_doc,\n                        \"mousemove\",\n                        \"pat-layout--dragmove\",\n                        DragMove,\n                    )\n                }\n\n                const tile_drag_handle = tile.querySelector(\".mosaic-drag-handle\");\n\n                events.add_event_listener(\n                    tile_drag_handle,\n                    \"mousedown\",\n                    \"pat-layout--startdrag\",\n                    (event) => {\n                        // register dragstop\n                        events.add_event_listener(mosaic_doc, \"mouseup\", \"pat-layout--dragstop\", DragStop);\n                        // delayed dragstart\n                        drag_start_ts = (new Date()).getTime();\n                        drag_start = setTimeout(() => {\n                            DragStart(event);\n                        }, drag_start_delay);\n                    }\n                );\n            });\n        };\n\n        /**\n         * Event handler for drag end - add new tile\n         *\n         * @id jQuery.mosaicHandleDragEnd\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicHandleDragEnd = async function () {\n            // Get layout object\n            var obj = $(this).parents(\"[data-panel]\");\n            let copy = obj.hasClass(\"mosaic-panel-dragging-copy\");\n\n            // Remove dragging class from content\n            obj.removeClass(\n                \"mosaic-panel-dragging mosaic-panel-dragging-copy mosaic-panel-dragging-new\",\n            );\n\n            // Get direction\n            var divider = $(\".mosaic-selected-divider\", mosaic_doc);\n            var drop = divider.parent();\n            var dir = \"\";\n            for (const _dir of [\"top\", \"bottom\", \"left\", \"right\"]) {\n                if (divider.hasClass(\"mosaic-divider-\" + _dir)) {\n                    dir = _dir;\n                }\n            }\n            divider.removeClass(\"mosaic-selected-divider\");\n\n            // True if new tile is inserted or copied\n            var new_tile = $(\".mosaic-helper-tile-new\", mosaic_doc).length > 0;\n            var original_tile = $(\".mosaic-original-tile\", mosaic_doc);\n            // get original row here, because tile might be moved\n            var original_row = original_tile.closest(\".mosaic-grid-row\");\n            // check if we want to copy it (pressed ALT key -> see init_events)\n            let dropped_tile = copy ? await self.copyTile(original_tile) : original_tile;\n\n            // If divider is not found or not sane drop, act like esc is pressed\n            if (divider.length === 0 || drop.hasClass(\"mosaic-helper-tile\")) {\n                dropped_tile.addClass(\"mosaic-drag-cancel\");\n            }\n\n            const fixup_classes = (_t) => {\n                _t.removeClass(\"mosaic-drag-cancel\");\n                _t.removeClass(\n                    \"mosaic-original-tile mosaic-helper-tile mosaic-helper-tile-new mosaic-tile-align-right mosaic-tile-align-left\",\n                );\n                _t.css({ width: \"\", left: \"\", top: \"\" });\n            };\n\n            if (\n                // Check if esc is pressed\n                dropped_tile.hasClass(\"mosaic-drag-cancel\") ||\n                // Not dropped on tile and empty row\n                (drop.hasClass(\"mosaic-tile\") === false &&\n                    drop.hasClass(\"mosaic-innergrid-row\") === false &&\n                    drop.hasClass(\"mosaic-empty-row\") === false) ||\n                // Check if max columns rows is reached\n                (drop.parent().parent().children(\".mosaic-grid-cell\").length >=\n                    obj.data(\"max-columns\") &&\n                    (dir === \"left\" || dir === \"right\"))\n            ) {\n                fixup_classes(dropped_tile);\n\n            } else if (drop.hasClass(\"mosaic-empty-row\")) {\n                // Dropped on empty row\n\n                // Replace empty with normal row class\n                drop.removeClass(\"mosaic-empty-row\")\n                    .attr(\"class\", original_row.attr(\"class\"))\n                    .off(\"mousemove\");\n\n                // Clean cell\n                drop.children(\".mosaic-grid-cell\").children(\"div\").remove();\n\n                fixup_classes(dropped_tile);\n\n                drop.children(\".mosaic-grid-cell\").append(dropped_tile);\n            } else {\n                // Dropped on row or below an inner grid\n\n                // When the layout object has the special class (Assigned in line 395), wrap\n                // he tile in a div.mosaic-grid-cell so it would create an inner column\n                fixup_classes(dropped_tile);\n\n                if (obj.hasClass(\"inner-subcolumn\")) {\n                    dropped_tile = $(mosaic_doc.createElement(\"div\"))\n                        .addClass(\"mosaic-grid-row mosaic-innergrid-row\")\n                        .append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\"mosaic-grid-cell col\")\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\")).append(\n                                        $(mosaic_doc.createElement(\"div\")).addClass(\n                                            \"mosaic-innergrid-outer-border\",\n                                        ),\n                                    ),\n                                )\n                                .append(dropped_tile),\n                        )\n                        .mosaicAddMouseMoveInnergridRow();\n                    for (const pos of [\"top\", \"bottom\"]) {\n                        dropped_tile.append(\n                            $(mosaic_doc.createElement(\"div\")).addClass(\n                                \"mosaic-divider mosaic-divider-\" + pos,\n                            ),\n                        );\n                    }\n                }\n\n                // If top\n                if (dir === \"top\") {\n                    // Add tile before\n                    drop.before(dropped_tile);\n\n                    // If bottom\n                } else if (dir === \"bottom\") {\n                    // Add tile after\n                    drop.after(dropped_tile);\n\n                    // If left\n                } else if (dir === \"left\" || dir === \"right\") {\n                    var _col = drop.parent();\n                    var _row = _col.parent();\n                    var _children_count = _row.children(\".mosaic-grid-cell\").length;\n\n                    // Check if only 1 column in the row\n                    if (_children_count.length === 1) {\n                        // Put tiles above dropped tile in a new row above\n                        var prev_elms = drop.prevAll();\n                        if (prev_elms.length > 0) {\n                            _row.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                $(prev_elms.get().reverse())\n                                                    .clone(true)\n                                                    .mosaicAddDrag(),\n                                            ),\n                                    ),\n                            );\n                            prev_elms.remove();\n                        }\n\n                        // Put tiles below dropped tile in a new row below\n                        var next_elms = drop.nextAll();\n                        if (next_elms.length > 0) {\n                            _row.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-row\")\n                                    .append(\n                                        $(mosaic_doc.createElement(\"div\"))\n                                            .addClass(\"mosaic-grid-cell col\")\n                                            .append(\n                                                next_elms.clone(true).mosaicAddDrag(),\n                                            ),\n                                    ),\n                            );\n                            next_elms.remove();\n                        }\n\n                        // Resize current column\n                        _col.removeClass(self.layout.widthClasses.join(\" \")).addClass(\n                            \"col\",\n                        );\n\n                        // Create column with dragged tile in it\n                        if (dir === \"left\") {\n                            drop.parent().before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(dropped_tile),\n                            );\n                        } else {\n                            drop.parent().after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell col\")\n                                    .append(dropped_tile),\n                            );\n                        }\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n\n                        // Dropped inside column\n                    } else {\n                        // Create new column\n                        if (dir === \"left\") {\n                            _col.before(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(dropped_tile),\n                            );\n                        } else {\n                            _col.after(\n                                $(mosaic_doc.createElement(\"div\"))\n                                    .addClass(\"mosaic-grid-cell\")\n                                    .append(dropped_tile),\n                            );\n                        }\n\n                        // Resize columns\n                        _row.mosaicSetColumnSizes();\n\n                        // Add resize handles\n                        _row.mosaicSetResizeHandles();\n                    }\n                }\n            }\n\n            // Remove remaining empty rows\n            self.mosaic.panels.find(\".mosaic-grid-row:not(:has(.mosaic-tile))\").remove();\n            self.mosaic.panels.find(\".mosaic-empty-row\").remove();\n\n            // Cleanup original row\n            original_row.mosaicCleanupRow();\n\n            // Add empty rows\n            self.mosaic.panels.mosaicAddEmptyRows();\n\n            // re-initialize events\n            self.init_events();\n\n            // Select new tile and make it draggable\n            if ((new_tile || copy) && dropped_tile.length > 0) {\n                dropped_tile.mosaicAddDrag();\n                await dropped_tile.data(\"mosaic-tile\").initializeContent(new_tile, copy);\n                dropped_tile.data(\"mosaic-tile\").select();\n            }\n        };\n\n        /**\n         * Set the sizes of the column\n         *\n         * @id jQuery.mosaicSetColumnSizes\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetColumnSizes = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Resize columns in the row\n                var column_sizes = [];\n                var $gridCells = $(this).children(\".mosaic-grid-cell\");\n                var nr_of_columns = $gridCells.length;\n                var width_css_classes = self.layout.widthClasses.join(\" \");\n\n                // This will reset the width classes - it will automatically set the widths\n\n                $gridCells.each(function (idx) {\n                    $(this).removeClass(width_css_classes);\n\n                    var col_size = Math.floor(12 / nr_of_columns);\n                    var col_size_last = 12 - col_size * (nr_of_columns - 1);\n\n                    for (var j = 0; j < nr_of_columns; j++) {\n                        if (j === nr_of_columns - 1) {\n                            col_size = col_size_last;\n                        }\n                        if (idx === j) {\n                            column_sizes.push(col_size);\n                            $(this).addClass(\"col\");\n                        }\n                    }\n                });\n\n                $(this).data(\"column_sizes\", column_sizes);\n            });\n        };\n\n        /**\n         * Add new resize handlers\n         *\n         * @id jQuery.mosaicSetResizeHandles\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicSetResizeHandles = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Remove resize handles\n                $(this).children(\".mosaic-resize-handle\").remove();\n\n                // Check number of columns\n                var grid_cells = $(this).children(\".mosaic-grid-cell\");\n                var nr_of_columns = grid_cells.length;\n\n                if (nr_of_columns <= 12) {\n                    var column_sizes = [];\n                    var zero_count = 0;\n                    var col_sum = 0;\n                    var col_size = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        col_size = GetColSizeByColClass(\n                            self.getWidthClass(grid_cells[i]),\n                        );\n                        column_sizes.push(col_size);\n                        col_sum = col_sum + col_size;\n                        if (col_size === 0) {\n                            zero_count = zero_count + 1;\n                        }\n                    }\n\n                    // count \"auto-size\" columns with class \".col\" and\n                    // calculate width equally.\n                    // NOTE: This requires extra logic in case of 5 columns.\n                    // See the \".toFixed(1)\" below because of floating point\n                    // issues with 12 / 5 * 3\n                    var zero_col = 0;\n                    if (zero_count) {\n                        zero_col = (12 - col_sum) / zero_count;\n                    }\n\n                    var resize_col_size = 0;\n                    col_size = 0;\n\n                    for (let i = 0; i < nr_of_columns; i++) {\n                        col_size = column_sizes[i] ? column_sizes[i] : zero_col;\n                        resize_col_size = resize_col_size + col_size;\n\n                        $(this).append(\n                            $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-handle mosaic-resize-handle-${i + 1\n                                    } mosaic-resize-${(nr_of_columns === 5) ? resize_col_size.toFixed(1).replace(\".0\", \"\") : resize_col_size}`,\n                                )\n                                .data(\"resize_handle_index\", i),\n                        );\n\n                        // set counted size to cell data\n                        $(grid_cells[i]).data(\"col_size\", col_size);\n                    }\n                }\n\n                // Mouse down handler on resize handle\n                $(this)\n                    .children(\".mosaic-resize-handle\")\n                    .off(\"mousedown\")\n                    .on(\"mousedown\", function (/* e */) {\n                        if ($(\".mosaic-helper-tile-new\").length > 0) {\n                            // do not resize when we place a new tile\n                            return;\n                        }\n                        var $currRow = $(this).parent();\n                        var $mosaicGridCellChildren = $currRow.children(\".mosaic-grid-cell\");\n\n                        if ($mosaicGridCellChildren.length > 12) {\n                            return;\n                        }\n                        var col_size_sum = 0;\n                        var column_sizes = [];\n\n                        $mosaicGridCellChildren.each(function () {\n                            var col_size = $(this).data(\"col_size\"); // get computed size of the column\n                            column_sizes.push(col_size);\n\n                            var placeholder = $(mosaic_doc.createElement(\"div\"))\n                                .addClass(\n                                    `mosaic-resize-placeholder col-${col_size} mosaic-resize-${col_size_sum}`,\n                                )\n                                .append(\n                                    $(mosaic_doc.createElement(\"div\"))\n                                        .addClass(\n                                            \"mosaic-resize-placeholder-inner-border\",\n                                        )\n                                        .append(\n                                            $(mosaic_doc.createElement(\"div\"))\n                                                .addClass(\"info\")\n                                                .html(col_size),\n                                        ),\n                                );\n\n                            // Add placeholder\n                            $currRow.append(placeholder);\n\n                            // summarize column sizes for placeholder classes\n                            col_size_sum += col_size;\n                        });\n\n                        // Get resize handle index\n                        var resize_handle_index = self.getResizeHandleClassId(this);\n                        // calculate resize helper position\n                        var resize_handle_index_size = column_sizes.reduce((a, b, i) => i <= resize_handle_index ? a + b : a, 0);\n\n                        // Add helper\n                        var $helper = $(\"<div />\")\n                            .addClass(\n                                \"mosaic-resize-handle mosaic-resize-handle-helper\"\n                            )\n                            .addClass(\n                                `mosaic-resize-${resize_handle_index_size}`\n                            )\n                            .data(\"row_width\", $currRow.width())\n                            .data(\"resize_handle_index\", resize_handle_index);\n\n                        // save array as DOM attribute\n                        $helper[0][\"column_sizes\"] = column_sizes;\n\n                        $currRow.append($helper);\n\n                        // Set resizing state\n                        $(this)\n                            .parents(\"[data-panel]\")\n                            .addClass(\"mosaic-panel-resizing\");\n                        $currRow.addClass(\"mosaic-row-resizing\");\n                        $(\".mosaic-selected-tile\", mosaic_doc)\n                            .children(\".mosaic-tile-content\")\n                            .trigger(\"blur\");\n\n                        log.debug(\"------------------resize-handle(click)--------------------\")\n                        log.debug(`resize_handle_index: ${resize_handle_index}`)\n                        log.debug(`resize_handle_index_size: ${resize_handle_index_size}`)\n                        log.debug(`row_width: ${$currRow.width()}`)\n                        log.debug(`column_sizes: ${column_sizes}`)\n\n                        // Prevent drag event\n                        return false;\n                    });\n            });\n        };\n\n        /**\n         * Cleanup row after tiles added or removed from the row\n         *\n         * @id jQuery.mosaicCleanupRow\n         * @return {Object} jQuery object\n         */\n        $.fn.mosaicCleanupRow = function () {\n            // Loop through matched elements\n            return this.each(function () {\n                // Get original row\n                var original_row = $(this);\n\n                // Remove empty columns\n                original_row.children(\".mosaic-grid-cell\").each(function () {\n                    if ($(this).children().length === 0) {\n                        $(this).remove();\n\n                        // Resize columns\n                        original_row.mosaicSetColumnSizes();\n                    }\n                });\n\n                // Remove row if no tiles inside\n                if (original_row.find(\".mosaic-tile\").length === 0) {\n                    var del_row = original_row;\n\n                    // Check if next row available\n                    if (original_row.nextAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.next(\".mosaic-grid-row\");\n\n                        // Check if prev row available\n                    } else if (original_row.prevAll(\".mosaic-grid-row\").length > 0) {\n                        original_row = original_row.prev(\".mosaic-grid-row\");\n\n                        // This is the last row\n                    } else {\n                        original_row.remove();\n                        return;\n                    }\n\n                    // Remove current row\n                    del_row.remove();\n                }\n\n                // Set resize handles\n                original_row.mosaicSetResizeHandles();\n            });\n        };\n\n        /**\n         * Get the direction based on the tile size and relative x and y coords of the cursor\n         *\n         * @id jQuery.mosaicGetDirection\n         * @param {Object} e Event object\n         * @return {String} Direction of the cursor relative to the tile\n         */\n        $.fn.mosaicGetDirection = function (e) {\n            // Calculate x, y, width and height\n            var width = parseFloat($(this).width());\n            var height = parseFloat($(this).height());\n            var x = parseFloat(e.pageX - $(this).offset().left - width / 2);\n            var y = parseFloat(e.pageY - $(this).offset().top - height / 2);\n            var halfwidth = width / 2;\n            var halfheight = height / 2;\n\n            // If left of center\n            if (x < 0) {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (-1 * halfwidth) / (-1 * halfheight)) {\n                        return \"top\";\n                    } else {\n                        return \"left\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < (-1 * halfwidth) / halfheight) {\n                        return \"left\";\n                    } else {\n                        return \"bottom\";\n                    }\n                }\n\n                // Right of center\n            } else {\n                // If above center\n                if (y < 0) {\n                    if (x / y < (1 * halfwidth) / (-1 * halfheight)) {\n                        return \"right\";\n                    } else {\n                        return \"top\";\n                    }\n                    // Below center\n                } else {\n                    if (x / y < halfwidth / halfheight) {\n                        return \"bottom\";\n                    } else {\n                        return \"right\";\n                    }\n                }\n            }\n        };\n    }\n}\n\nvar AddResetAnchor = function ($tileSideTools, cols) {\n    var reset = document.createElement(\"a\");\n    var cols_str = typeof cols === \"undefined\" ? \"\" : \" (\" + cols + \")\";\n    reset.href = \"javascript:\";\n    reset.textContent = \"Reset\" + cols_str;\n    $(reset).on(\"click\", { el: $tileSideTools }, function (e) {\n        e.preventDefault();\n\n        e.data.el\n            .parent()\n            .parent()\n            .removeClass(\n                \"col-1 col-2 col-3 col-4 col-5 col-6 col-7 col-8 col-9 col-10 col-11 col-12\",\n            )\n            .addClass(\"col\");\n\n        e.data.el.parent().parent().parent().mosaicSetResizeHandles();\n\n        $(e.target).parent().remove();\n    });\n    return reset;\n};\n\n/**\n * Get a list of percentage steps for each column in the grid\n *\n * @id GetGridPercentList\n * @return {Array} List of percent steps of the width class\n */\nfunction GetGridPercentList() {\n    var low = 0,\n        high = 100,\n        grid = 12,\n        grid_percent = [];\n    var step = 100 / grid;\n    var a = low,\n        b = high - 1; /* fix the last step in the loop: -1 */\n    while (a < b) {\n        grid_percent.push(Math.round((a += step)));\n    }\n\n    return grid_percent;\n}\n\n/**\n * Get the name of the width class of the given integer\n *\n * @id GetWidthClassByColSize\n * @param {Integer} col_size Bootstrap col width id\n * @return {String} Classname of the width class of the given integer\n */\nfunction GetWidthClassByColSize(col_size) {\n    if (col_size) {\n        return \"col-\" + col_size;\n    }\n\n    // Fallback\n    return \"col\";\n}\n\n/**\n * Get the name of the position class of the given integer\n *\n * @id GetColSizeByColClass\n * @param {String} Classname of the position class\n * @return {Integer} col_size Bootstrap col width id\n */\nfunction GetColSizeByColClass(col_class, prefix) {\n    prefix = prefix || \"col-\";\n    return parseInt(col_class.replace(prefix, \"\")) || 0;\n}\n\n/**\n * Get the bootstrap col width id by width size\n *\n * @id GetBootstrapColByPercent\n * @param {Integer} width Percentage of the column position\n * @return {Integer} Bootstrap col width id of the given integer\n */\nfunction GetBootstrapColByPercent(width) {\n    var grid_percent = GetGridPercentList();\n    let cw_idx = 12;\n    grid_percent.forEach((perc, idx) => {\n        if (perc == width) {\n            cw_idx = idx + 1;\n        }\n    })\n    return cw_idx;\n}\n"],"names":["log","logging","getLogger","LayoutManager","constructor","mosaic","this","layout","widthClasses","resizeClasses","resizeHandleClasses","getWidthClass","e","cls","classList","contains","getResizeHandleClassId","handleIdx","forEach","idx","addAppTileHTML","type","response","url","value","getDomTreeFromHtml","addHeadTags","addTile","find","html","tileUrl","self","panels","addClass","add_helper","document","createElement","add","innerHTML","replace","append","helper","width","each","$","tile","Tile","initialize","cacheHtml","scanRegistry","copyTile","orig_tile","orig_tile_inst","tile_type","getType","removeClass","orig_parent","closest","copy_tile_id","mosaic_utils","generate_uid","$copy_tile_helper","getHtmlContent","save","getConfig","orig_tile_data","serialize","deserialize","$el","getDefaultValue","tile_config","start","end","name","default_value","widget","id","attr","val","label","getPageContent","exportLayout","content","getLayoutRow","obj","body","hasClass","length","classNames","children","data","getHtmlBody","options","saveLayoutToForm","$customLayout","hasContentLayout","init_events","_document","_panels","querySelectorAll","console","_panel","events","add_event_listener","keyCode","blur","focused_tile","activeElement","focus","querySelector","remove","Date","getTime","original_tile","$orig_row","parent","mosaicCleanupRow","trigger","parents","parseInt","elm","target","srcElement","new_tile","mosaicHandleDragEnd","el","toolbar","SelectedTileChange","DocumentMousemove","$new_tile_helper","offset","css","pageY","top","pageX","left","$helper","cur_snap_offset","$row","resize_handle_index","mouse_x","parseFloat","getComputedStyle","paddingLeft","mouse_percentage","Math","round","snap","snap_offset","GetGridPercentList","perc","abs","snap_size","grid_percent","cw_idx","GetBootstrapColByPercent","column_sizes","column_sizes_sum","reduce","a","b","col_size_before","slice","col_size_after","col_size_max","new_column_size","new_column_sizes","i","push","_before","_last_size","debug","col_size_sum","resize_css_classes","join","width_css_classes","col_size","col_size_class","GetWidthClassByColSize","panel","css_width_classes","first","$tileSideTools","AddResetAnchor","mosaicSetResizeHandles","$tile","select","TileMousemove","dir","mosaicGetDirection","divider","row","filter","height","CustomCSSOnDblClick","custom_classes","split","undefined","input","div","gridrow","base_css","initialize_panels","initJQueryHelpers","total","async","mosaicAddDrag","mosaicAddEmptyRows","index","j","eq","mosaicAddMouseMoveInnergridRow","that","pos","mosaic_doc","mosaicAddMouseMoveEmptyRow","on","create_empty_row","prepend","after","drag_start_ts","drag_start","DragMove","event","DragStop","clearTimeout","remove_event_listener","tile_drag_handle","setTimeout","originaltile","clone","DragStart","copy","drop","_dir","original_row","dropped_tile","fixup_classes","_t","off","before","_col","_row","prev_elms","prevAll","get","reverse","next_elms","nextAll","mosaicSetColumnSizes","initializeContent","$gridCells","nr_of_columns","floor","col_size_last","grid_cells","zero_count","col_sum","GetColSizeByColClass","zero_col","resize_col_size","toFixed","$currRow","$mosaicGridCellChildren","placeholder","resize_handle_index_size","del_row","next","prev","x","y","halfwidth","halfheight","cols","reset","cols_str","href","textContent","preventDefault","step","high","col_class","prefix"],"sourceRoot":""}